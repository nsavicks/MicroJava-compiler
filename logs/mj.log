INFO  03:01:25,422 - #2 program
INFO  03:01:25,424 - #44 prg
INFO  03:01:25,424 - #40 {
INFO  03:01:25,425 - #44 int
INFO  03:01:25,426 - #44 main
INFO  03:01:25,427 - #36 (
INFO  03:01:25,427 - #37 )
INFO  03:01:25,427 - #40 {
INFO  03:01:25,428 - #41 }
INFO  03:01:25,429 - #41 }
ERROR 03:01:25,451 - Error on line 6: Missing return statement.
INFO  03:01:52,067 - #2 program
INFO  03:01:52,068 - #44 prg
INFO  03:01:52,068 - #40 {
INFO  03:01:52,069 - #44 int
INFO  03:01:52,070 - #44 main
INFO  03:01:52,071 - #36 (
INFO  03:01:52,071 - #37 )
INFO  03:01:52,072 - #40 {
INFO  03:01:52,073 - #41 }
INFO  03:01:52,074 - #41 }
ERROR 03:01:52,095 - Error on line 6: Main method cannot have return type.
ERROR 03:01:52,095 - Error on line 6: Missing return statement.
INFO  03:03:29,003 - #2 program
INFO  03:03:29,004 - #44 prg
INFO  03:03:29,004 - #44 int
INFO  03:03:29,005 - #44 x
INFO  03:03:29,006 - #33 ;
INFO  03:03:29,007 - #40 {
INFO  03:03:29,008 - #44 int
INFO  03:03:29,009 - #44 x
INFO  03:03:29,009 - #36 (
INFO  03:03:29,009 - #37 )
INFO  03:03:29,010 - #40 {
INFO  03:03:29,012 - #41 }
INFO  03:03:29,013 - #41 }
ERROR 03:03:29,038 - Error on line 6: Name x has already been declared.
ERROR 03:03:29,038 - Error on line 6: Missing return statement.
INFO  03:04:03,025 - #2 program
INFO  03:04:03,026 - #44 prg
INFO  03:04:03,026 - #44 int
INFO  03:04:03,028 - #44 x
INFO  03:04:03,030 - #33 ;
INFO  03:04:03,031 - #40 {
INFO  03:04:03,032 - #44 int
INFO  03:04:03,032 - #44 x
INFO  03:04:03,033 - #36 (
INFO  03:04:03,033 - #37 )
INFO  03:04:03,034 - #40 {
INFO  03:04:03,035 - #41 }
INFO  03:04:03,037 - #41 }
ERROR 03:04:03,065 - Error on line 6: Name x has already been declared.
ERROR 03:04:03,065 - Error on line 6: Missing return statement.
INFO  03:17:59,626 - #2 program
INFO  03:17:59,626 - #44 prg
INFO  03:17:59,627 - #44 int
INFO  03:17:59,628 - #44 x
INFO  03:17:59,629 - #33 ;
INFO  03:17:59,631 - #40 {
INFO  03:17:59,631 - #44 int
INFO  03:17:59,632 - #44 x
INFO  03:17:59,632 - #36 (
INFO  03:17:59,632 - #44 int
INFO  03:17:59,632 - #44 z
INFO  03:17:59,632 - #34 ,
INFO  03:17:59,633 - #44 int
INFO  03:17:59,633 - #44 p
INFO  03:17:59,633 - #38 [
INFO  03:17:59,633 - #39 ]
INFO  03:17:59,633 - #37 )
INFO  03:17:59,634 - #40 {
INFO  03:17:59,635 - #12 return
INFO  03:17:59,635 - #43 5
INFO  03:17:59,636 - #33 ;
INFO  03:17:59,637 - #41 }
INFO  03:17:59,637 - #41 }
ERROR 03:17:59,658 - Error on line 6: Name x has already been declared.
ERROR 03:17:59,659 - Error on line 8: Return type not compatible with function return type.
INFO  03:18:16,537 - #2 program
INFO  03:18:16,538 - #44 prg
INFO  03:18:16,538 - #40 {
INFO  03:18:16,540 - #44 int
INFO  03:18:16,540 - #44 x
INFO  03:18:16,541 - #36 (
INFO  03:18:16,542 - #44 int
INFO  03:18:16,542 - #44 z
INFO  03:18:16,542 - #34 ,
INFO  03:18:16,543 - #44 int
INFO  03:18:16,543 - #44 p
INFO  03:18:16,543 - #38 [
INFO  03:18:16,544 - #39 ]
INFO  03:18:16,544 - #37 )
INFO  03:18:16,545 - #40 {
INFO  03:18:16,547 - #12 return
INFO  03:18:16,547 - #43 5
INFO  03:18:16,549 - #33 ;
INFO  03:18:16,550 - #41 }
INFO  03:18:16,550 - #41 }
INFO  03:18:52,204 - #2 program
INFO  03:18:52,204 - #44 prg
INFO  03:18:52,205 - #40 {
INFO  03:18:52,208 - #44 int
INFO  03:18:52,210 - #44 x
INFO  03:18:52,218 - #36 (
INFO  03:18:52,218 - #44 int
INFO  03:18:52,218 - #44 z
INFO  03:18:52,218 - #34 ,
INFO  03:18:52,222 - #44 int
INFO  03:18:52,222 - #44 p
INFO  03:18:52,222 - #38 [
INFO  03:18:52,222 - #39 ]
INFO  03:18:52,223 - #37 )
INFO  03:18:52,225 - #40 {
INFO  03:18:52,227 - #12 return
INFO  03:18:52,228 - #43 5
INFO  03:18:52,231 - #33 ;
INFO  03:18:52,232 - #41 }
INFO  03:18:52,232 - #41 }
INFO  03:20:04,948 - #2 program
INFO  03:20:04,949 - #44 prg
INFO  03:20:04,949 - #40 {
INFO  03:20:04,950 - #44 int
INFO  03:20:04,951 - #44 x
INFO  03:20:04,951 - #36 (
INFO  03:20:04,952 - #44 int
INFO  03:20:04,952 - #44 z
INFO  03:20:04,952 - #34 ,
INFO  03:20:04,953 - #44 int
INFO  03:20:04,953 - #44 p
INFO  03:20:04,953 - #38 [
INFO  03:20:04,953 - #39 ]
INFO  03:20:04,953 - #37 )
INFO  03:20:04,954 - #40 {
INFO  03:20:04,955 - #12 return
INFO  03:20:04,956 - #43 5
INFO  03:20:04,957 - #33 ;
INFO  03:20:04,957 - #41 }
INFO  03:20:04,957 - #41 }
INFO  03:20:16,759 - #2 program
INFO  03:20:16,760 - #44 prg
INFO  03:20:16,760 - #44 int
INFO  03:20:16,762 - #44 x
INFO  03:20:16,763 - #33 ;
INFO  03:20:16,765 - #40 {
INFO  03:20:16,765 - #44 int
INFO  03:20:16,766 - #44 x
INFO  03:20:16,767 - #36 (
INFO  03:20:16,767 - #44 int
INFO  03:20:16,767 - #44 z
INFO  03:20:16,767 - #34 ,
INFO  03:20:16,767 - #44 int
INFO  03:20:16,767 - #44 p
INFO  03:20:16,768 - #38 [
INFO  03:20:16,768 - #39 ]
INFO  03:20:16,768 - #37 )
INFO  03:20:16,769 - #40 {
INFO  03:20:16,771 - #12 return
INFO  03:20:16,771 - #43 5
INFO  03:20:16,773 - #33 ;
INFO  03:20:16,773 - #41 }
INFO  03:20:16,774 - #41 }
ERROR 03:20:16,798 - Error on line 6: Name x has already been declared.
ERROR 03:20:16,799 - Error on line 8: Return type not compatible with function return type.
INFO  03:21:34,845 - #2 program
INFO  03:21:34,845 - #44 prg
INFO  03:21:34,845 - #44 int
INFO  03:21:34,847 - #44 x
INFO  03:21:34,848 - #33 ;
INFO  03:21:34,850 - #40 {
INFO  03:21:34,850 - #44 int
INFO  03:21:34,851 - #44 x
INFO  03:21:34,851 - #36 (
INFO  03:21:34,851 - #44 int
INFO  03:21:34,851 - #44 z
INFO  03:21:34,851 - #34 ,
INFO  03:21:34,852 - #44 int
INFO  03:21:34,852 - #44 p
INFO  03:21:34,852 - #38 [
INFO  03:21:34,852 - #39 ]
INFO  03:21:34,852 - #37 )
INFO  03:21:34,854 - #40 {
INFO  03:21:34,855 - #12 return
INFO  03:21:34,856 - #43 5
INFO  03:21:34,857 - #33 ;
INFO  03:21:34,857 - #41 }
INFO  03:21:34,858 - #41 }
ERROR 03:21:34,882 - Error on line 6: Name x has already been declared.
INFO  03:21:43,973 - #2 program
INFO  03:21:43,973 - #44 prg
INFO  03:21:43,974 - #40 {
INFO  03:21:43,975 - #44 int
INFO  03:21:43,976 - #44 x
INFO  03:21:43,977 - #36 (
INFO  03:21:43,977 - #44 int
INFO  03:21:43,977 - #44 z
INFO  03:21:43,977 - #34 ,
INFO  03:21:43,978 - #44 int
INFO  03:21:43,978 - #44 p
INFO  03:21:43,979 - #38 [
INFO  03:21:43,979 - #39 ]
INFO  03:21:43,979 - #37 )
INFO  03:21:43,980 - #40 {
INFO  03:21:43,981 - #12 return
INFO  03:21:43,981 - #43 5
INFO  03:21:43,982 - #33 ;
INFO  03:21:43,982 - #41 }
INFO  03:21:43,983 - #41 }
INFO  03:22:01,265 - #2 program
INFO  03:22:01,266 - #44 prg
INFO  03:22:01,266 - #40 {
INFO  03:22:01,267 - #44 int
INFO  03:22:01,267 - #44 x
INFO  03:22:01,268 - #36 (
INFO  03:22:01,269 - #44 int
INFO  03:22:01,269 - #44 z
INFO  03:22:01,269 - #34 ,
INFO  03:22:01,270 - #44 int
INFO  03:22:01,270 - #44 p
INFO  03:22:01,270 - #38 [
INFO  03:22:01,270 - #39 ]
INFO  03:22:01,270 - #37 )
INFO  03:22:01,272 - #40 {
INFO  03:22:01,273 - #44 p
INFO  03:22:01,273 - #30 =
INFO  03:22:01,273 - #43 5
INFO  03:22:01,275 - #33 ;
INFO  03:22:01,275 - #41 }
INFO  03:22:01,275 - #41 }
ERROR 03:22:01,301 - Error on line 7: Types are not compatible.
ERROR 03:22:01,301 - Error on line 5: Missing return statement.
INFO  03:22:13,592 - #2 program
INFO  03:22:13,593 - #44 prg
INFO  03:22:13,593 - #40 {
INFO  03:22:13,594 - #44 int
INFO  03:22:13,595 - #44 x
INFO  03:22:13,596 - #36 (
INFO  03:22:13,596 - #44 int
INFO  03:22:13,597 - #44 z
INFO  03:22:13,597 - #34 ,
INFO  03:22:13,598 - #44 int
INFO  03:22:13,598 - #44 p
INFO  03:22:13,598 - #38 [
INFO  03:22:13,598 - #39 ]
INFO  03:22:13,598 - #37 )
INFO  03:22:13,600 - #40 {
INFO  03:22:13,602 - #44 p
INFO  03:22:13,602 - #38 [
INFO  03:22:13,602 - #43 2
INFO  03:22:13,604 - #39 ]
INFO  03:22:13,604 - #30 =
INFO  03:22:13,604 - #43 5
INFO  03:22:13,605 - #33 ;
INFO  03:22:13,605 - #41 }
INFO  03:22:13,606 - #41 }
ERROR 03:22:13,630 - Error on line 5: Missing return statement.
INFO  03:22:22,538 - #2 program
INFO  03:22:22,539 - #44 prg
INFO  03:22:22,539 - #40 {
INFO  03:22:22,540 - #44 int
INFO  03:22:22,541 - #44 x
INFO  03:22:22,542 - #36 (
INFO  03:22:22,542 - #44 int
INFO  03:22:22,542 - #44 z
INFO  03:22:22,542 - #34 ,
INFO  03:22:22,544 - #44 int
INFO  03:22:22,544 - #44 z
INFO  03:22:22,544 - #38 [
INFO  03:22:22,544 - #39 ]
INFO  03:22:22,544 - #37 )
INFO  03:22:22,545 - #40 {
INFO  03:22:22,547 - #41 }
INFO  03:22:22,547 - #41 }
ERROR 03:22:22,570 - Error on line 5: Name z has already been declared.
ERROR 03:22:22,571 - Error on line 5: Missing return statement.
INFO  03:22:38,578 - #2 program
INFO  03:22:38,579 - #44 prg
INFO  03:22:38,579 - #44 bool
INFO  03:22:38,581 - #44 z
INFO  03:22:38,582 - #33 ;
INFO  03:22:38,584 - #40 {
INFO  03:22:38,584 - #44 int
INFO  03:22:38,585 - #44 x
INFO  03:22:38,585 - #36 (
INFO  03:22:38,586 - #44 int
INFO  03:22:38,586 - #44 z
INFO  03:22:38,586 - #34 ,
INFO  03:22:38,586 - #44 int
INFO  03:22:38,586 - #44 p
INFO  03:22:38,586 - #38 [
INFO  03:22:38,586 - #39 ]
INFO  03:22:38,586 - #37 )
INFO  03:22:38,588 - #40 {
INFO  03:22:38,590 - #12 return
INFO  03:22:38,590 - #43 5
INFO  03:22:38,591 - #33 ;
INFO  03:22:38,592 - #41 }
INFO  03:22:38,593 - #41 }
INFO  03:22:52,631 - #2 program
INFO  03:22:52,632 - #44 prg
INFO  03:22:52,632 - #44 bool
INFO  03:22:52,633 - #44 z
INFO  03:22:52,634 - #33 ;
INFO  03:22:52,636 - #44 bool
INFO  03:22:52,636 - #44 k
INFO  03:22:52,637 - #33 ;
INFO  03:22:52,637 - #40 {
INFO  03:22:52,637 - #44 int
INFO  03:22:52,638 - #44 x
INFO  03:22:52,638 - #36 (
INFO  03:22:52,638 - #44 int
INFO  03:22:52,638 - #44 z
INFO  03:22:52,638 - #34 ,
INFO  03:22:52,639 - #44 int
INFO  03:22:52,639 - #44 p
INFO  03:22:52,639 - #38 [
INFO  03:22:52,639 - #39 ]
INFO  03:22:52,639 - #37 )
INFO  03:22:52,641 - #40 {
INFO  03:22:52,642 - #44 k
INFO  03:22:52,643 - #30 =
INFO  03:22:52,643 - #43 10
INFO  03:22:52,644 - #33 ;
INFO  03:22:52,645 - #12 return
INFO  03:22:52,645 - #43 5
INFO  03:22:52,645 - #33 ;
INFO  03:22:52,646 - #41 }
INFO  03:22:52,646 - #41 }
ERROR 03:22:52,671 - Error on line 8: Types are not compatible.
INFO  03:22:59,439 - #2 program
INFO  03:22:59,439 - #44 prg
INFO  03:22:59,440 - #44 bool
INFO  03:22:59,441 - #44 z
INFO  03:22:59,442 - #33 ;
INFO  03:22:59,444 - #44 bool
INFO  03:22:59,444 - #44 k
INFO  03:22:59,444 - #33 ;
INFO  03:22:59,444 - #40 {
INFO  03:22:59,445 - #44 int
INFO  03:22:59,445 - #44 x
INFO  03:22:59,445 - #36 (
INFO  03:22:59,446 - #44 int
INFO  03:22:59,446 - #44 z
INFO  03:22:59,446 - #34 ,
INFO  03:22:59,446 - #44 int
INFO  03:22:59,447 - #44 p
INFO  03:22:59,447 - #38 [
INFO  03:22:59,447 - #39 ]
INFO  03:22:59,447 - #37 )
INFO  03:22:59,448 - #40 {
INFO  03:22:59,449 - #44 k
INFO  03:22:59,450 - #30 =
INFO  03:22:59,450 - #42 true
INFO  03:22:59,452 - #33 ;
INFO  03:22:59,452 - #12 return
INFO  03:22:59,453 - #43 5
INFO  03:22:59,453 - #33 ;
INFO  03:22:59,453 - #41 }
INFO  03:22:59,453 - #41 }
INFO  03:24:02,328 - #2 program
INFO  03:24:02,329 - #44 prg
INFO  03:24:02,329 - #44 bool
INFO  03:24:02,330 - #44 z
INFO  03:24:02,331 - #33 ;
INFO  03:24:02,333 - #44 bool
INFO  03:24:02,333 - #44 k
INFO  03:24:02,333 - #33 ;
INFO  03:24:02,333 - #40 {
INFO  03:24:02,333 - #44 int
INFO  03:24:02,334 - #44 x
INFO  03:24:02,334 - #36 (
INFO  03:24:02,334 - #44 int
INFO  03:24:02,334 - #44 z
INFO  03:24:02,335 - #34 ,
INFO  03:24:02,335 - #44 int
INFO  03:24:02,335 - #44 p
INFO  03:24:02,335 - #38 [
INFO  03:24:02,335 - #39 ]
INFO  03:24:02,335 - #37 )
INFO  03:24:02,337 - #40 {
INFO  03:24:02,338 - #44 k
INFO  03:24:02,339 - #30 =
INFO  03:24:02,339 - #42 true
INFO  03:24:02,341 - #33 ;
INFO  03:24:02,342 - #12 return
INFO  03:24:02,342 - #43 5
INFO  03:24:02,342 - #33 ;
INFO  03:24:02,342 - #41 }
INFO  03:24:02,343 - #41 }
INFO  03:59:52,687 - #2 program
INFO  03:59:52,688 - #44 prg
INFO  03:59:52,688 - #44 bool
INFO  03:59:52,689 - #44 z
INFO  03:59:52,690 - #33 ;
INFO  03:59:52,691 - #44 bool
INFO  03:59:52,691 - #44 k
INFO  03:59:52,691 - #33 ;
INFO  03:59:52,691 - #40 {
INFO  03:59:52,691 - #44 int
INFO  03:59:52,692 - #44 x
INFO  03:59:52,692 - #36 (
INFO  03:59:52,692 - #44 int
INFO  03:59:52,692 - #44 z
INFO  03:59:52,693 - #34 ,
INFO  03:59:52,693 - #44 int
INFO  03:59:52,693 - #44 p
INFO  03:59:52,693 - #38 [
INFO  03:59:52,693 - #39 ]
INFO  03:59:52,693 - #37 )
INFO  03:59:52,694 - #40 {
INFO  03:59:52,695 - #14 for
INFO  03:59:52,696 - #36 (
INFO  03:59:52,696 - #44 x
INFO  03:59:52,696 - #30 =
INFO  03:59:52,696 - #43 0
INFO  03:59:52,697 - #33 ;
INFO  03:59:52,698 - #44 x
INFO  03:59:52,698 - #26 <
INFO  03:59:52,698 - #43 10
INFO  03:59:52,699 - #33 ;
INFO  03:59:52,701 - #44 x
INFO  03:59:52,701 - #31 ++
INFO  03:59:52,701 - #37 )
INFO  03:59:52,701 - #40 {
INFO  03:59:52,701 - #41 }
INFO  03:59:52,702 - #41 }
INFO  03:59:52,702 - #41 }
ERROR 03:59:52,723 - Error on line 8: Value can be assigned to variable, array element or class field.
ERROR 03:59:52,723 - Error on line 8: Cannot use function names as variables.
ERROR 03:59:52,723 - Error on line 18: Expression types are not compatible.
ERROR 03:59:52,723 - Error on line 8: Designator must be variable, array element or class field.
ERROR 03:59:52,723 - Error on line 6: Missing return statement.
INFO  04:00:21,954 - #2 program
INFO  04:00:21,955 - #44 prg
INFO  04:00:21,955 - #44 bool
INFO  04:00:21,956 - #44 z
INFO  04:00:21,959 - #33 ;
INFO  04:00:21,960 - #44 bool
INFO  04:00:21,961 - #44 k
INFO  04:00:21,961 - #33 ;
INFO  04:00:21,961 - #40 {
INFO  04:00:21,961 - #44 int
INFO  04:00:21,962 - #44 x
INFO  04:00:21,962 - #36 (
INFO  04:00:21,962 - #44 int
INFO  04:00:21,962 - #44 z
INFO  04:00:21,963 - #34 ,
INFO  04:00:21,963 - #44 int
INFO  04:00:21,963 - #44 p
INFO  04:00:21,963 - #38 [
INFO  04:00:21,963 - #39 ]
INFO  04:00:21,964 - #37 )
INFO  04:00:21,965 - #40 {
INFO  04:00:21,967 - #14 for
INFO  04:00:21,967 - #36 (
INFO  04:00:21,967 - #44 int
INFO  04:00:21,968 - #44 i
ERROR 04:00:21,968 - 
Sintaksna greska na liniji 8
INFO  04:00:21,968 - #30 =
INFO  04:00:21,975 - #43 0
INFO  04:00:21,975 - #33 ;
INFO  04:00:21,975 - #44 x
ERROR 04:00:21,975 - Izvrsen oporavak u liniji 8
INFO  04:00:21,976 - #26 <
INFO  04:00:21,978 - #43 10
INFO  04:00:21,979 - #33 ;
INFO  04:00:21,982 - #44 x
INFO  04:00:21,982 - #31 ++
INFO  04:00:21,982 - #37 )
INFO  04:00:21,983 - #40 {
INFO  04:00:21,983 - #41 }
INFO  04:00:21,983 - #41 }
INFO  04:00:21,983 - #41 }
ERROR 04:00:22,002 - Error on line 8: Cannot use function names as variables.
ERROR 04:00:22,003 - Error on line 22: Expression types are not compatible.
ERROR 04:00:22,003 - Error on line 8: Designator must be variable, array element or class field.
ERROR 04:00:22,003 - Error on line 6: Missing return statement.
INFO  04:00:46,358 - #2 program
INFO  04:00:46,358 - #44 prg
INFO  04:00:46,358 - #44 bool
INFO  04:00:46,370 - #44 z
INFO  04:00:46,385 - #33 ;
INFO  04:00:46,396 - #44 bool
INFO  04:00:46,396 - #44 k
INFO  04:00:46,396 - #33 ;
INFO  04:00:46,396 - #40 {
INFO  04:00:46,397 - #44 int
INFO  04:00:46,402 - #44 x
INFO  04:00:46,402 - #36 (
INFO  04:00:46,403 - #44 int
INFO  04:00:46,403 - #44 z
INFO  04:00:46,403 - #34 ,
INFO  04:00:46,403 - #44 int
INFO  04:00:46,403 - #44 p
INFO  04:00:46,403 - #38 [
INFO  04:00:46,403 - #39 ]
INFO  04:00:46,403 - #37 )
INFO  04:00:46,415 - #40 {
INFO  04:00:46,426 - #14 for
INFO  04:00:46,432 - #36 (
INFO  04:00:46,432 - #44 int
INFO  04:00:46,432 - #44 i
ERROR 04:00:46,433 - 
Sintaksna greska na liniji 8
INFO  04:00:46,433 - #30 =
INFO  04:00:46,439 - #43 0
INFO  04:00:46,439 - #33 ;
INFO  04:00:46,439 - #44 i
ERROR 04:00:46,439 - Izvrsen oporavak u liniji 8
INFO  04:00:46,456 - #26 <
INFO  04:00:46,457 - #43 10
INFO  04:00:46,468 - #33 ;
INFO  04:00:46,493 - #44 i
INFO  04:00:46,493 - #31 ++
INFO  04:00:46,493 - #37 )
INFO  04:00:46,493 - #40 {
INFO  04:00:46,493 - #41 }
INFO  04:00:46,493 - #41 }
INFO  04:00:46,494 - #41 }
ERROR 04:00:46,542 - Error on line 8: Name i has not been declared.
ERROR 04:00:46,547 - Error on line 22: Expression types are not compatible.
ERROR 04:00:46,548 - Error on line 8: Name i has not been declared.
ERROR 04:00:46,548 - Error on line 8: Operator ++ must be used on int type designator.
ERROR 04:00:46,548 - Error on line 6: Missing return statement.
INFO  04:01:09,505 - #2 program
INFO  04:01:09,506 - #44 prg
INFO  04:01:09,506 - #44 bool
INFO  04:01:09,507 - #44 z
INFO  04:01:09,509 - #33 ;
INFO  04:01:09,511 - #44 bool
INFO  04:01:09,511 - #44 k
INFO  04:01:09,511 - #33 ;
INFO  04:01:09,512 - #40 {
INFO  04:01:09,512 - #44 int
INFO  04:01:09,512 - #44 x
INFO  04:01:09,513 - #36 (
INFO  04:01:09,513 - #44 int
INFO  04:01:09,513 - #44 z
INFO  04:01:09,513 - #34 ,
INFO  04:01:09,514 - #44 int
INFO  04:01:09,514 - #44 p
INFO  04:01:09,514 - #38 [
INFO  04:01:09,514 - #39 ]
INFO  04:01:09,514 - #37 )
INFO  04:01:09,516 - #40 {
INFO  04:01:09,517 - #44 int
INFO  04:01:09,518 - #44 i
ERROR 04:01:09,518 - 
Sintaksna greska na liniji 8
INFO  04:01:09,518 - #33 ;
INFO  04:01:09,525 - #14 for
ERROR 04:01:09,525 - Izvrsen oporavak u liniji 25
INFO  04:01:09,526 - #36 (
INFO  04:01:09,526 - #44 i
INFO  04:01:09,526 - #30 =
INFO  04:01:09,527 - #43 0
INFO  04:01:09,536 - #33 ;
INFO  04:01:09,536 - #44 i
INFO  04:01:09,536 - #26 <
INFO  04:01:09,537 - #43 10
INFO  04:01:09,538 - #33 ;
INFO  04:01:09,540 - #44 i
INFO  04:01:09,540 - #31 ++
INFO  04:01:09,540 - #37 )
INFO  04:01:09,541 - #40 {
INFO  04:01:09,541 - #41 }
INFO  04:01:09,541 - #41 }
INFO  04:01:09,541 - #41 }
ERROR 04:01:09,557 - Error on line 10: Name i has not been declared.
ERROR 04:01:09,558 - Error on line 10: Types are not compatible.
ERROR 04:01:09,558 - Error on line 10: Name i has not been declared.
ERROR 04:01:09,558 - Error on line 18: Expression types are not compatible.
ERROR 04:01:09,558 - Error on line 10: Name i has not been declared.
ERROR 04:01:09,558 - Error on line 10: Operator ++ must be used on int type designator.
ERROR 04:01:09,558 - Error on line 6: Missing return statement.
INFO  04:01:49,678 - #2 program
INFO  04:01:49,679 - #44 prg
INFO  04:01:49,679 - #44 bool
INFO  04:01:49,680 - #44 z
INFO  04:01:49,681 - #33 ;
INFO  04:01:49,683 - #44 bool
INFO  04:01:49,683 - #44 k
INFO  04:01:49,683 - #33 ;
INFO  04:01:49,683 - #40 {
INFO  04:01:49,683 - #44 int
INFO  04:01:49,684 - #44 x
INFO  04:01:49,685 - #36 (
INFO  04:01:49,685 - #44 int
INFO  04:01:49,685 - #44 z
INFO  04:01:49,685 - #34 ,
INFO  04:01:49,686 - #44 int
INFO  04:01:49,686 - #44 p
INFO  04:01:49,686 - #38 [
INFO  04:01:49,686 - #39 ]
INFO  04:01:49,686 - #37 )
INFO  04:01:49,687 - #44 int
INFO  04:01:49,690 - #44 i
INFO  04:01:49,690 - #33 ;
INFO  04:01:49,690 - #40 {
INFO  04:01:49,690 - #14 for
INFO  04:01:49,691 - #36 (
INFO  04:01:49,691 - #44 i
INFO  04:01:49,691 - #30 =
INFO  04:01:49,691 - #43 0
INFO  04:01:49,693 - #33 ;
INFO  04:01:49,694 - #44 i
INFO  04:01:49,694 - #26 <
INFO  04:01:49,694 - #43 10
INFO  04:01:49,695 - #33 ;
INFO  04:01:49,698 - #44 i
INFO  04:01:49,699 - #31 ++
INFO  04:01:49,699 - #37 )
INFO  04:01:49,699 - #40 {
INFO  04:01:49,699 - #41 }
INFO  04:01:49,699 - #12 return
INFO  04:01:49,700 - #44 i
INFO  04:01:49,700 - #33 ;
INFO  04:01:49,700 - #41 }
INFO  04:01:49,700 - #41 }
INFO  04:02:00,204 - #2 program
INFO  04:02:00,205 - #44 prg
INFO  04:02:00,205 - #44 bool
INFO  04:02:00,206 - #44 z
INFO  04:02:00,208 - #33 ;
INFO  04:02:00,209 - #44 bool
INFO  04:02:00,210 - #44 k
INFO  04:02:00,210 - #33 ;
INFO  04:02:00,210 - #40 {
INFO  04:02:00,210 - #44 int
INFO  04:02:00,211 - #44 x
INFO  04:02:00,211 - #36 (
INFO  04:02:00,211 - #44 int
INFO  04:02:00,211 - #44 z
INFO  04:02:00,211 - #34 ,
INFO  04:02:00,212 - #44 int
INFO  04:02:00,212 - #44 p
INFO  04:02:00,212 - #38 [
INFO  04:02:00,212 - #39 ]
INFO  04:02:00,212 - #37 )
INFO  04:02:00,213 - #44 int
INFO  04:02:00,214 - #44 i
INFO  04:02:00,214 - #33 ;
INFO  04:02:00,214 - #40 {
INFO  04:02:00,214 - #14 for
INFO  04:02:00,215 - #36 (
INFO  04:02:00,215 - #44 i
INFO  04:02:00,215 - #30 =
INFO  04:02:00,215 - #43 0
INFO  04:02:00,216 - #33 ;
INFO  04:02:00,217 - #44 i
INFO  04:02:00,217 - #26 <
INFO  04:02:00,217 - #43 10
INFO  04:02:00,219 - #33 ;
INFO  04:02:00,222 - #44 i
INFO  04:02:00,222 - #31 ++
INFO  04:02:00,222 - #37 )
INFO  04:02:00,222 - #40 {
INFO  04:02:00,222 - #41 }
INFO  04:02:00,222 - #12 return
INFO  04:02:00,223 - #44 i
INFO  04:02:00,223 - #33 ;
INFO  04:02:00,223 - #41 }
INFO  04:02:00,223 - #41 }
INFO  04:04:41,576 - #2 program
INFO  04:04:41,576 - #44 prg
INFO  04:04:41,576 - #44 bool
INFO  04:04:41,577 - #44 z
INFO  04:04:41,578 - #33 ;
INFO  04:04:41,579 - #44 bool
INFO  04:04:41,580 - #44 k
INFO  04:04:41,580 - #33 ;
INFO  04:04:41,580 - #40 {
INFO  04:04:41,580 - #44 int
INFO  04:04:41,581 - #44 x
INFO  04:04:41,581 - #36 (
INFO  04:04:41,581 - #44 int
INFO  04:04:41,581 - #44 z
INFO  04:04:41,581 - #34 ,
INFO  04:04:41,582 - #44 int
INFO  04:04:41,582 - #44 p
INFO  04:04:41,582 - #38 [
INFO  04:04:41,582 - #39 ]
INFO  04:04:41,582 - #37 )
INFO  04:04:41,583 - #44 int
INFO  04:04:41,585 - #44 i
INFO  04:04:41,585 - #33 ;
INFO  04:04:41,585 - #40 {
INFO  04:04:41,585 - #14 for
INFO  04:04:41,586 - #36 (
INFO  04:04:41,586 - #44 i
INFO  04:04:41,586 - #30 =
INFO  04:04:41,587 - #43 0
INFO  04:04:41,588 - #33 ;
INFO  04:04:41,589 - #44 i
INFO  04:04:41,590 - #26 <
INFO  04:04:41,590 - #43 10
INFO  04:04:41,591 - #33 ;
INFO  04:04:41,594 - #44 i
INFO  04:04:41,594 - #31 ++
INFO  04:04:41,594 - #37 )
INFO  04:04:41,594 - #16 continue
INFO  04:04:41,594 - #33 ;
INFO  04:04:41,594 - #12 return
INFO  04:04:41,602 - #44 i
INFO  04:04:41,602 - #33 ;
INFO  04:04:41,602 - #41 }
INFO  04:04:41,602 - #41 }
INFO  04:29:36,729 - #2 program
INFO  04:29:36,730 - #44 prg
INFO  04:29:36,730 - #44 bool
INFO  04:29:36,731 - #44 z
INFO  04:29:36,732 - #33 ;
INFO  04:29:36,733 - #44 bool
INFO  04:29:36,733 - #44 k
INFO  04:29:36,733 - #33 ;
INFO  04:29:36,734 - #40 {
INFO  04:29:36,734 - #44 int
INFO  04:29:36,734 - #44 x
INFO  04:29:36,734 - #36 (
INFO  04:29:36,735 - #44 int
INFO  04:29:36,735 - #44 z
INFO  04:29:36,735 - #34 ,
INFO  04:29:36,735 - #44 int
INFO  04:29:36,735 - #44 p
INFO  04:29:36,735 - #38 [
INFO  04:29:36,735 - #39 ]
INFO  04:29:36,735 - #37 )
INFO  04:29:36,736 - #44 int
INFO  04:29:36,737 - #44 i
INFO  04:29:36,737 - #33 ;
INFO  04:29:36,738 - #40 {
INFO  04:29:36,738 - #14 for
INFO  04:29:36,738 - #36 (
INFO  04:29:36,738 - #44 i
INFO  04:29:36,738 - #30 =
INFO  04:29:36,739 - #43 0
INFO  04:29:36,740 - #33 ;
INFO  04:29:36,741 - #43 5
INFO  04:29:36,741 - #33 ;
INFO  04:29:36,742 - #44 i
INFO  04:29:36,742 - #31 ++
INFO  04:29:36,742 - #37 )
INFO  04:29:36,743 - #16 continue
INFO  04:29:36,743 - #33 ;
INFO  04:29:36,743 - #12 return
INFO  04:29:36,744 - #44 i
INFO  04:29:36,744 - #33 ;
INFO  04:29:36,744 - #41 }
INFO  04:29:36,744 - #41 }
ERROR 04:29:36,770 - Error on line 18: Expression must be bool type.
INFO  04:29:47,745 - #2 program
INFO  04:29:47,745 - #44 prg
INFO  04:29:47,745 - #44 bool
INFO  04:29:47,746 - #44 z
INFO  04:29:47,747 - #33 ;
INFO  04:29:47,748 - #44 bool
INFO  04:29:47,748 - #44 k
INFO  04:29:47,748 - #33 ;
INFO  04:29:47,748 - #40 {
INFO  04:29:47,748 - #44 int
INFO  04:29:47,749 - #44 x
INFO  04:29:47,749 - #36 (
INFO  04:29:47,749 - #44 int
INFO  04:29:47,749 - #44 z
INFO  04:29:47,749 - #34 ,
INFO  04:29:47,749 - #44 int
INFO  04:29:47,750 - #44 p
INFO  04:29:47,750 - #38 [
INFO  04:29:47,750 - #39 ]
INFO  04:29:47,750 - #37 )
INFO  04:29:47,751 - #44 int
INFO  04:29:47,752 - #44 i
INFO  04:29:47,752 - #33 ;
INFO  04:29:47,752 - #40 {
INFO  04:29:47,753 - #14 for
INFO  04:29:47,753 - #36 (
INFO  04:29:47,753 - #44 i
INFO  04:29:47,754 - #30 =
INFO  04:29:47,754 - #43 0
INFO  04:29:47,756 - #33 ;
INFO  04:29:47,756 - #44 i
INFO  04:29:47,757 - #33 ;
INFO  04:29:47,757 - #44 i
INFO  04:29:47,758 - #31 ++
INFO  04:29:47,758 - #37 )
INFO  04:29:47,758 - #16 continue
INFO  04:29:47,759 - #33 ;
INFO  04:29:47,759 - #12 return
INFO  04:29:47,760 - #44 i
INFO  04:29:47,760 - #33 ;
INFO  04:29:47,760 - #41 }
INFO  04:29:47,760 - #41 }
ERROR 04:29:47,788 - Error on line 18: Expression must be bool type.
INFO  04:29:56,752 - #2 program
INFO  04:29:56,753 - #44 prg
INFO  04:29:56,753 - #44 bool
INFO  04:29:56,754 - #44 z
INFO  04:29:56,755 - #33 ;
INFO  04:29:56,756 - #44 bool
INFO  04:29:56,756 - #44 k
INFO  04:29:56,756 - #33 ;
INFO  04:29:56,757 - #40 {
INFO  04:29:56,757 - #44 int
INFO  04:29:56,757 - #44 x
INFO  04:29:56,757 - #36 (
INFO  04:29:56,757 - #44 int
INFO  04:29:56,757 - #44 z
INFO  04:29:56,758 - #34 ,
INFO  04:29:56,758 - #44 int
INFO  04:29:56,758 - #44 p
INFO  04:29:56,758 - #38 [
INFO  04:29:56,758 - #39 ]
INFO  04:29:56,758 - #37 )
INFO  04:29:56,760 - #44 int
INFO  04:29:56,761 - #44 i
INFO  04:29:56,761 - #33 ;
INFO  04:29:56,761 - #40 {
INFO  04:29:56,762 - #14 for
INFO  04:29:56,762 - #36 (
INFO  04:29:56,762 - #44 i
INFO  04:29:56,762 - #30 =
INFO  04:29:56,763 - #43 0
INFO  04:29:56,764 - #33 ;
INFO  04:29:56,765 - #44 i
INFO  04:29:56,766 - #26 <
INFO  04:29:56,766 - #43 10
INFO  04:29:56,767 - #28 &&
INFO  04:29:56,768 - #44 i
INFO  04:29:56,768 - #24 >
INFO  04:29:56,768 - #43 20
INFO  04:29:56,768 - #33 ;
INFO  04:29:56,769 - #44 i
INFO  04:29:56,769 - #31 ++
INFO  04:29:56,769 - #37 )
INFO  04:29:56,769 - #16 continue
INFO  04:29:56,769 - #33 ;
INFO  04:29:56,769 - #12 return
INFO  04:29:56,770 - #44 i
INFO  04:29:56,770 - #33 ;
INFO  04:29:56,771 - #41 }
INFO  04:29:56,771 - #41 }
INFO  04:30:04,544 - #2 program
INFO  04:30:04,544 - #44 prg
INFO  04:30:04,545 - #44 bool
INFO  04:30:04,546 - #44 z
INFO  04:30:04,547 - #33 ;
INFO  04:30:04,548 - #44 bool
INFO  04:30:04,548 - #44 k
INFO  04:30:04,548 - #33 ;
INFO  04:30:04,549 - #40 {
INFO  04:30:04,549 - #44 int
INFO  04:30:04,549 - #44 x
INFO  04:30:04,549 - #36 (
INFO  04:30:04,549 - #44 int
INFO  04:30:04,550 - #44 z
INFO  04:30:04,550 - #34 ,
INFO  04:30:04,550 - #44 int
INFO  04:30:04,550 - #44 p
INFO  04:30:04,550 - #38 [
INFO  04:30:04,550 - #39 ]
INFO  04:30:04,550 - #37 )
INFO  04:30:04,551 - #44 int
INFO  04:30:04,552 - #44 i
INFO  04:30:04,552 - #33 ;
INFO  04:30:04,552 - #40 {
INFO  04:30:04,553 - #14 for
INFO  04:30:04,553 - #36 (
INFO  04:30:04,553 - #44 i
INFO  04:30:04,553 - #30 =
INFO  04:30:04,553 - #43 0
INFO  04:30:04,555 - #33 ;
INFO  04:30:04,556 - #44 k
INFO  04:30:04,556 - #33 ;
INFO  04:30:04,557 - #44 i
INFO  04:30:04,557 - #31 ++
INFO  04:30:04,557 - #37 )
INFO  04:30:04,558 - #16 continue
INFO  04:30:04,558 - #33 ;
INFO  04:30:04,558 - #12 return
INFO  04:30:04,559 - #44 i
INFO  04:30:04,559 - #33 ;
INFO  04:30:04,560 - #41 }
INFO  04:30:04,560 - #41 }
INFO  04:30:15,905 - #2 program
INFO  04:30:15,905 - #44 prg
INFO  04:30:15,905 - #44 bool
INFO  04:30:15,906 - #44 z
INFO  04:30:15,907 - #33 ;
INFO  04:30:15,908 - #44 bool
INFO  04:30:15,909 - #44 k
INFO  04:30:15,909 - #33 ;
INFO  04:30:15,909 - #40 {
INFO  04:30:15,909 - #44 int
INFO  04:30:15,909 - #44 x
INFO  04:30:15,910 - #36 (
INFO  04:30:15,910 - #44 int
INFO  04:30:15,910 - #44 z
INFO  04:30:15,910 - #34 ,
INFO  04:30:15,910 - #44 int
INFO  04:30:15,910 - #44 p
INFO  04:30:15,910 - #38 [
INFO  04:30:15,911 - #39 ]
INFO  04:30:15,911 - #37 )
INFO  04:30:15,912 - #44 int
INFO  04:30:15,913 - #44 i
INFO  04:30:15,913 - #33 ;
INFO  04:30:15,913 - #40 {
INFO  04:30:15,913 - #14 for
INFO  04:30:15,914 - #36 (
INFO  04:30:15,914 - #44 i
INFO  04:30:15,914 - #30 =
INFO  04:30:15,914 - #43 0
INFO  04:30:15,916 - #33 ;
INFO  04:30:15,917 - #44 l
INFO  04:30:15,917 - #33 ;
INFO  04:30:15,918 - #44 i
INFO  04:30:15,918 - #31 ++
INFO  04:30:15,918 - #37 )
INFO  04:30:15,918 - #16 continue
INFO  04:30:15,919 - #33 ;
INFO  04:30:15,919 - #12 return
INFO  04:30:15,920 - #44 i
INFO  04:30:15,920 - #33 ;
INFO  04:30:15,921 - #41 }
INFO  04:30:15,921 - #41 }
ERROR 04:30:15,946 - Error on line 11: Name l has not been declared.
ERROR 04:30:15,946 - Error on line 18: Expression must be bool type.
INFO  04:32:56,794 - #2 program
INFO  04:32:56,794 - #44 prg
INFO  04:32:56,794 - #44 bool
INFO  04:32:56,796 - #44 z
INFO  04:32:56,797 - #33 ;
INFO  04:32:56,798 - #44 bool
INFO  04:32:56,798 - #44 k
INFO  04:32:56,799 - #33 ;
INFO  04:32:56,799 - #40 {
INFO  04:32:56,799 - #44 int
INFO  04:32:56,799 - #44 x
INFO  04:32:56,800 - #36 (
INFO  04:32:56,800 - #44 int
INFO  04:32:56,800 - #44 z
INFO  04:32:56,800 - #34 ,
INFO  04:32:56,800 - #44 int
INFO  04:32:56,800 - #44 p
INFO  04:32:56,800 - #38 [
INFO  04:32:56,800 - #39 ]
INFO  04:32:56,800 - #37 )
INFO  04:32:56,802 - #44 int
INFO  04:32:56,803 - #44 i
INFO  04:32:56,803 - #33 ;
INFO  04:32:56,803 - #40 {
INFO  04:32:56,803 - #14 for
INFO  04:32:56,804 - #36 (
INFO  04:32:56,804 - #44 i
INFO  04:32:56,804 - #30 =
INFO  04:32:56,804 - #43 0
INFO  04:32:56,806 - #33 ;
INFO  04:32:56,807 - #33 ;
INFO  04:32:56,807 - #44 i
INFO  04:32:56,808 - #31 ++
INFO  04:32:56,808 - #37 )
INFO  04:32:56,808 - #16 continue
INFO  04:32:56,808 - #33 ;
INFO  04:32:56,808 - #12 return
INFO  04:32:56,809 - #44 i
INFO  04:32:56,809 - #33 ;
INFO  04:32:56,810 - #41 }
INFO  04:32:56,810 - #41 }
INFO  04:34:33,538 - #2 program
INFO  04:34:33,539 - #44 prg
INFO  04:34:33,539 - #44 bool
INFO  04:34:33,540 - #44 z
INFO  04:34:33,541 - #33 ;
INFO  04:34:33,542 - #44 bool
INFO  04:34:33,542 - #44 k
INFO  04:34:33,542 - #33 ;
INFO  04:34:33,542 - #40 {
INFO  04:34:33,543 - #44 int
INFO  04:34:33,543 - #44 x
INFO  04:34:33,543 - #36 (
INFO  04:34:33,544 - #44 int
INFO  04:34:33,544 - #44 z
INFO  04:34:33,544 - #34 ,
INFO  04:34:33,544 - #44 int
INFO  04:34:33,544 - #44 p
INFO  04:34:33,544 - #38 [
INFO  04:34:33,544 - #39 ]
INFO  04:34:33,544 - #37 )
INFO  04:34:33,546 - #44 int
INFO  04:34:33,547 - #44 i
INFO  04:34:33,547 - #33 ;
INFO  04:34:33,547 - #40 {
INFO  04:34:33,548 - #14 for
INFO  04:34:33,548 - #36 (
INFO  04:34:33,548 - #44 i
INFO  04:34:33,548 - #30 =
INFO  04:34:33,548 - #43 0
INFO  04:34:33,550 - #33 ;
INFO  04:34:33,551 - #33 ;
INFO  04:34:33,551 - #44 i
INFO  04:34:33,551 - #31 ++
INFO  04:34:33,551 - #37 )
INFO  04:34:33,552 - #16 continue
INFO  04:34:33,552 - #33 ;
INFO  04:34:33,552 - #16 continue
INFO  04:34:33,552 - #33 ;
INFO  04:34:33,552 - #12 return
INFO  04:34:33,553 - #44 i
INFO  04:34:33,553 - #33 ;
INFO  04:34:33,553 - #41 }
INFO  04:34:33,553 - #41 }
ERROR 04:34:33,574 - Error on line 0: Continue can only be called inside for loop.
INFO  04:34:41,834 - #2 program
INFO  04:34:41,835 - #44 prg
INFO  04:34:41,835 - #44 bool
INFO  04:34:41,837 - #44 z
INFO  04:34:41,838 - #33 ;
INFO  04:34:41,839 - #44 bool
INFO  04:34:41,840 - #44 k
INFO  04:34:41,840 - #33 ;
INFO  04:34:41,840 - #40 {
INFO  04:34:41,840 - #44 int
INFO  04:34:41,841 - #44 x
INFO  04:34:41,841 - #36 (
INFO  04:34:41,841 - #44 int
INFO  04:34:41,841 - #44 z
INFO  04:34:41,841 - #34 ,
INFO  04:34:41,841 - #44 int
INFO  04:34:41,841 - #44 p
INFO  04:34:41,841 - #38 [
INFO  04:34:41,842 - #39 ]
INFO  04:34:41,842 - #37 )
INFO  04:34:41,843 - #44 int
INFO  04:34:41,845 - #44 i
INFO  04:34:41,845 - #33 ;
INFO  04:34:41,845 - #40 {
INFO  04:34:41,845 - #14 for
INFO  04:34:41,845 - #36 (
INFO  04:34:41,846 - #44 i
INFO  04:34:41,846 - #30 =
INFO  04:34:41,846 - #43 0
INFO  04:34:41,848 - #33 ;
INFO  04:34:41,849 - #33 ;
INFO  04:34:41,849 - #44 i
INFO  04:34:41,850 - #31 ++
INFO  04:34:41,850 - #37 )
INFO  04:34:41,850 - #16 continue
INFO  04:34:41,850 - #33 ;
INFO  04:34:41,850 - #3 break
INFO  04:34:41,851 - #33 ;
INFO  04:34:41,851 - #12 return
INFO  04:34:41,852 - #44 i
INFO  04:34:41,852 - #33 ;
INFO  04:34:41,853 - #41 }
INFO  04:34:41,853 - #41 }
ERROR 04:34:41,877 - Error on line 0: Break can only be called inside for loop.
INFO  04:34:53,236 - #2 program
INFO  04:34:53,236 - #44 prg
INFO  04:34:53,236 - #44 bool
INFO  04:34:53,237 - #44 z
INFO  04:34:53,238 - #33 ;
INFO  04:34:53,240 - #44 bool
INFO  04:34:53,240 - #44 k
INFO  04:34:53,240 - #33 ;
INFO  04:34:53,240 - #40 {
INFO  04:34:53,240 - #44 int
INFO  04:34:53,241 - #44 x
INFO  04:34:53,241 - #36 (
INFO  04:34:53,241 - #44 int
INFO  04:34:53,241 - #44 z
INFO  04:34:53,241 - #34 ,
INFO  04:34:53,241 - #44 int
INFO  04:34:53,242 - #44 p
INFO  04:34:53,242 - #38 [
INFO  04:34:53,242 - #39 ]
INFO  04:34:53,242 - #37 )
INFO  04:34:53,243 - #44 int
INFO  04:34:53,244 - #44 i
INFO  04:34:53,244 - #33 ;
INFO  04:34:53,244 - #40 {
INFO  04:34:53,244 - #14 for
INFO  04:34:53,245 - #36 (
INFO  04:34:53,245 - #44 i
INFO  04:34:53,245 - #30 =
INFO  04:34:53,245 - #43 0
INFO  04:34:53,247 - #33 ;
INFO  04:34:53,248 - #33 ;
INFO  04:34:53,248 - #44 i
INFO  04:34:53,249 - #31 ++
INFO  04:34:53,249 - #37 )
INFO  04:34:53,249 - #40 {
INFO  04:34:53,249 - #16 continue
INFO  04:34:53,249 - #33 ;
INFO  04:34:53,250 - #3 break
INFO  04:34:53,250 - #33 ;
INFO  04:34:53,250 - #41 }
INFO  04:34:53,251 - #12 return
INFO  04:34:53,251 - #44 i
INFO  04:34:53,251 - #33 ;
INFO  04:34:53,252 - #41 }
INFO  04:34:53,252 - #41 }
INFO  04:35:18,640 - #2 program
INFO  04:35:18,641 - #44 prg
INFO  04:35:18,641 - #44 bool
INFO  04:35:18,642 - #44 z
INFO  04:35:18,643 - #33 ;
INFO  04:35:18,644 - #44 bool
INFO  04:35:18,644 - #44 k
INFO  04:35:18,644 - #33 ;
INFO  04:35:18,644 - #40 {
INFO  04:35:18,644 - #44 int
INFO  04:35:18,645 - #44 x
INFO  04:35:18,645 - #36 (
INFO  04:35:18,645 - #44 int
INFO  04:35:18,645 - #44 z
INFO  04:35:18,645 - #34 ,
INFO  04:35:18,646 - #44 int
INFO  04:35:18,646 - #44 p
INFO  04:35:18,646 - #38 [
INFO  04:35:18,646 - #39 ]
INFO  04:35:18,646 - #37 )
INFO  04:35:18,647 - #44 int
INFO  04:35:18,648 - #44 i
INFO  04:35:18,648 - #33 ;
INFO  04:35:18,648 - #40 {
INFO  04:35:18,648 - #14 for
INFO  04:35:18,649 - #36 (
INFO  04:35:18,649 - #44 i
INFO  04:35:18,649 - #30 =
INFO  04:35:18,649 - #43 0
INFO  04:35:18,651 - #33 ;
INFO  04:35:18,651 - #33 ;
INFO  04:35:18,652 - #44 i
INFO  04:35:18,652 - #31 ++
INFO  04:35:18,652 - #37 )
INFO  04:35:18,652 - #40 {
INFO  04:35:18,653 - #14 for
INFO  04:35:18,653 - #36 (
INFO  04:35:18,653 - #44 i
INFO  04:35:18,653 - #30 =
INFO  04:35:18,653 - #43 0
INFO  04:35:18,653 - #33 ;
INFO  04:35:18,653 - #44 i
INFO  04:35:18,654 - #26 <
INFO  04:35:18,654 - #43 5
INFO  04:35:18,655 - #33 ;
INFO  04:35:18,656 - #44 i
INFO  04:35:18,656 - #32 --
INFO  04:35:18,656 - #37 )
INFO  04:35:18,656 - #40 {
INFO  04:35:18,656 - #16 continue
INFO  04:35:18,656 - #33 ;
INFO  04:35:18,656 - #41 }
INFO  04:35:18,657 - #3 break
INFO  04:35:18,657 - #33 ;
INFO  04:35:18,658 - #41 }
INFO  04:35:18,658 - #12 return
INFO  04:35:18,658 - #44 i
INFO  04:35:18,658 - #33 ;
INFO  04:35:18,659 - #41 }
INFO  04:35:18,659 - #41 }
INFO  04:35:25,420 - #2 program
INFO  04:35:25,421 - #44 prg
INFO  04:35:25,421 - #44 bool
INFO  04:35:25,422 - #44 z
INFO  04:35:25,424 - #33 ;
INFO  04:35:25,425 - #44 bool
INFO  04:35:25,426 - #44 k
INFO  04:35:25,426 - #33 ;
INFO  04:35:25,426 - #40 {
INFO  04:35:25,426 - #44 int
INFO  04:35:25,427 - #44 x
INFO  04:35:25,427 - #36 (
INFO  04:35:25,427 - #44 int
INFO  04:35:25,427 - #44 z
INFO  04:35:25,427 - #34 ,
INFO  04:35:25,428 - #44 int
INFO  04:35:25,428 - #44 p
INFO  04:35:25,428 - #38 [
INFO  04:35:25,428 - #39 ]
INFO  04:35:25,428 - #37 )
INFO  04:35:25,430 - #44 int
INFO  04:35:25,432 - #44 i
INFO  04:35:25,432 - #33 ;
INFO  04:35:25,432 - #40 {
INFO  04:35:25,432 - #14 for
INFO  04:35:25,432 - #36 (
INFO  04:35:25,432 - #44 i
INFO  04:35:25,433 - #30 =
INFO  04:35:25,433 - #43 0
INFO  04:35:25,434 - #33 ;
INFO  04:35:25,435 - #33 ;
INFO  04:35:25,435 - #44 i
INFO  04:35:25,436 - #31 ++
INFO  04:35:25,436 - #37 )
INFO  04:35:25,436 - #40 {
INFO  04:35:25,436 - #14 for
INFO  04:35:25,436 - #36 (
INFO  04:35:25,436 - #44 i
INFO  04:35:25,436 - #30 =
INFO  04:35:25,436 - #43 0
INFO  04:35:25,436 - #33 ;
INFO  04:35:25,436 - #44 i
INFO  04:35:25,436 - #26 <
INFO  04:35:25,437 - #43 5
INFO  04:35:25,438 - #33 ;
INFO  04:35:25,439 - #44 i
INFO  04:35:25,439 - #32 --
INFO  04:35:25,439 - #37 )
INFO  04:35:25,439 - #40 {
INFO  04:35:25,439 - #16 continue
INFO  04:35:25,439 - #33 ;
INFO  04:35:25,439 - #41 }
INFO  04:35:25,440 - #3 break
INFO  04:35:25,441 - #33 ;
INFO  04:35:25,441 - #41 }
INFO  04:35:25,441 - #3 break
INFO  04:35:25,441 - #33 ;
INFO  04:35:25,442 - #12 return
INFO  04:35:25,442 - #44 i
INFO  04:35:25,442 - #33 ;
INFO  04:35:25,442 - #41 }
INFO  04:35:25,442 - #41 }
ERROR 04:35:25,471 - Error on line 0: Break can only be called inside for loop.
INFO  04:36:00,348 - #2 program
INFO  04:36:00,348 - #44 prg
INFO  04:36:00,348 - #44 bool
INFO  04:36:00,349 - #44 z
INFO  04:36:00,350 - #33 ;
INFO  04:36:00,351 - #44 bool
INFO  04:36:00,351 - #44 k
INFO  04:36:00,351 - #33 ;
INFO  04:36:00,352 - #40 {
INFO  04:36:00,352 - #44 int
INFO  04:36:00,352 - #44 x
INFO  04:36:00,352 - #36 (
INFO  04:36:00,353 - #44 int
INFO  04:36:00,353 - #44 z
INFO  04:36:00,353 - #34 ,
INFO  04:36:00,353 - #44 int
INFO  04:36:00,353 - #44 p
INFO  04:36:00,353 - #38 [
INFO  04:36:00,353 - #39 ]
INFO  04:36:00,353 - #37 )
INFO  04:36:00,354 - #44 int
INFO  04:36:00,356 - #44 i
INFO  04:36:00,356 - #33 ;
INFO  04:36:00,356 - #40 {
INFO  04:36:00,356 - #8 if
INFO  04:36:00,357 - #36 (
INFO  04:36:00,357 - #43 5
INFO  04:36:00,358 - #37 )
INFO  04:36:00,359 - #40 {
INFO  04:36:00,359 - #41 }
INFO  04:36:00,359 - #12 return
INFO  04:36:00,360 - #44 i
INFO  04:36:00,361 - #33 ;
INFO  04:36:00,361 - #41 }
INFO  04:36:00,361 - #41 }
ERROR 04:36:00,386 - Error on line 11: Expression must be bool type.
INFO  04:36:07,476 - #2 program
INFO  04:36:07,477 - #44 prg
INFO  04:36:07,477 - #44 bool
INFO  04:36:07,478 - #44 z
INFO  04:36:07,479 - #33 ;
INFO  04:36:07,480 - #44 bool
INFO  04:36:07,480 - #44 k
INFO  04:36:07,480 - #33 ;
INFO  04:36:07,481 - #40 {
INFO  04:36:07,481 - #44 int
INFO  04:36:07,481 - #44 x
INFO  04:36:07,482 - #36 (
INFO  04:36:07,482 - #44 int
INFO  04:36:07,482 - #44 z
INFO  04:36:07,482 - #34 ,
INFO  04:36:07,482 - #44 int
INFO  04:36:07,482 - #44 p
INFO  04:36:07,483 - #38 [
INFO  04:36:07,483 - #39 ]
INFO  04:36:07,483 - #37 )
INFO  04:36:07,484 - #44 int
INFO  04:36:07,486 - #44 i
INFO  04:36:07,486 - #33 ;
INFO  04:36:07,486 - #40 {
INFO  04:36:07,486 - #8 if
INFO  04:36:07,487 - #36 (
INFO  04:36:07,487 - #44 k
INFO  04:36:07,488 - #37 )
INFO  04:36:07,489 - #40 {
INFO  04:36:07,489 - #41 }
INFO  04:36:07,489 - #12 return
INFO  04:36:07,490 - #44 i
INFO  04:36:07,490 - #33 ;
INFO  04:36:07,491 - #41 }
INFO  04:36:07,491 - #41 }
INFO  04:36:14,276 - #2 program
INFO  04:36:14,277 - #44 prg
INFO  04:36:14,277 - #44 bool
INFO  04:36:14,278 - #44 z
INFO  04:36:14,279 - #33 ;
INFO  04:36:14,280 - #44 bool
INFO  04:36:14,280 - #44 k
INFO  04:36:14,280 - #33 ;
INFO  04:36:14,280 - #40 {
INFO  04:36:14,280 - #44 int
INFO  04:36:14,281 - #44 x
INFO  04:36:14,281 - #36 (
INFO  04:36:14,282 - #44 int
INFO  04:36:14,282 - #44 z
INFO  04:36:14,282 - #34 ,
INFO  04:36:14,282 - #44 int
INFO  04:36:14,282 - #44 p
INFO  04:36:14,282 - #38 [
INFO  04:36:14,282 - #39 ]
INFO  04:36:14,283 - #37 )
INFO  04:36:14,284 - #44 int
INFO  04:36:14,285 - #44 i
INFO  04:36:14,286 - #33 ;
INFO  04:36:14,286 - #40 {
INFO  04:36:14,286 - #8 if
INFO  04:36:14,287 - #36 (
INFO  04:36:14,287 - #37 )
ERROR 04:36:14,287 - 
Sintaksna greska na liniji 11
INFO  04:36:14,287 - #40 {
INFO  04:36:14,294 - #41 }
INFO  04:36:14,295 - #12 return
INFO  04:36:14,295 - #44 i
INFO  04:36:14,295 - #33 ;
INFO  04:36:14,295 - #41 }
ERROR 04:36:14,295 - Izvrsen oporavak u liniji 4
INFO  04:36:14,296 - #41 }
ERROR 04:36:14,318 - Error on line 6: Missing return statement.
INFO  04:36:26,500 - #2 program
INFO  04:36:26,501 - #44 prg
INFO  04:36:26,501 - #44 bool
INFO  04:36:26,502 - #44 z
INFO  04:36:26,504 - #33 ;
INFO  04:36:26,505 - #44 bool
INFO  04:36:26,505 - #44 k
INFO  04:36:26,505 - #33 ;
INFO  04:36:26,505 - #40 {
INFO  04:36:26,505 - #44 int
INFO  04:36:26,506 - #44 x
INFO  04:36:26,506 - #36 (
INFO  04:36:26,506 - #44 int
INFO  04:36:26,507 - #44 z
INFO  04:36:26,507 - #34 ,
INFO  04:36:26,507 - #44 int
INFO  04:36:26,507 - #44 p
INFO  04:36:26,507 - #38 [
INFO  04:36:26,507 - #39 ]
INFO  04:36:26,507 - #37 )
INFO  04:36:26,509 - #44 int
INFO  04:36:26,511 - #44 i
INFO  04:36:26,511 - #33 ;
INFO  04:36:26,511 - #40 {
INFO  04:36:26,511 - #8 if
INFO  04:36:26,512 - #36 (
INFO  04:36:26,512 - #43 5
INFO  04:36:26,514 - #24 >
INFO  04:36:26,514 - #43 5
INFO  04:36:26,515 - #37 )
INFO  04:36:26,516 - #40 {
INFO  04:36:26,516 - #41 }
INFO  04:36:26,516 - #12 return
INFO  04:36:26,517 - #44 i
INFO  04:36:26,517 - #33 ;
INFO  04:36:26,518 - #41 }
INFO  04:36:26,518 - #41 }
INFO  04:36:35,520 - #2 program
INFO  04:36:35,521 - #44 prg
INFO  04:36:35,521 - #44 bool
INFO  04:36:35,522 - #44 z
INFO  04:36:35,524 - #33 ;
INFO  04:36:35,525 - #44 bool
INFO  04:36:35,526 - #44 k
INFO  04:36:35,526 - #33 ;
INFO  04:36:35,526 - #40 {
INFO  04:36:35,527 - #44 int
INFO  04:36:35,527 - #44 x
INFO  04:36:35,528 - #36 (
INFO  04:36:35,528 - #44 int
INFO  04:36:35,528 - #44 z
INFO  04:36:35,528 - #34 ,
INFO  04:36:35,528 - #44 int
INFO  04:36:35,529 - #44 p
INFO  04:36:35,529 - #38 [
INFO  04:36:35,529 - #39 ]
INFO  04:36:35,529 - #37 )
INFO  04:36:35,531 - #44 int
INFO  04:36:35,533 - #44 i
INFO  04:36:35,533 - #33 ;
INFO  04:36:35,533 - #40 {
INFO  04:36:35,534 - #8 if
INFO  04:36:35,535 - #36 (
INFO  04:36:35,535 - #44 k
INFO  04:36:35,537 - #23 !=
INFO  04:36:35,537 - #44 z
INFO  04:36:35,539 - #37 )
INFO  04:36:35,539 - #40 {
INFO  04:36:35,539 - #41 }
INFO  04:36:35,540 - #12 return
INFO  04:36:35,541 - #44 i
INFO  04:36:35,541 - #33 ;
INFO  04:36:35,541 - #41 }
INFO  04:36:35,541 - #41 }
ERROR 04:36:35,566 - Error on line 11: Expression types are not compatible.
INFO  04:36:58,711 - #2 program
INFO  04:36:58,711 - #44 prg
INFO  04:36:58,711 - #44 bool
INFO  04:36:58,713 - #44 z
INFO  04:36:58,714 - #33 ;
INFO  04:36:58,715 - #44 bool
INFO  04:36:58,716 - #44 k
INFO  04:36:58,716 - #33 ;
INFO  04:36:58,716 - #40 {
INFO  04:36:58,716 - #44 int
INFO  04:36:58,717 - #44 x
INFO  04:36:58,717 - #36 (
INFO  04:36:58,717 - #44 int
INFO  04:36:58,717 - #44 z
INFO  04:36:58,717 - #34 ,
INFO  04:36:58,717 - #44 int
INFO  04:36:58,717 - #44 p
INFO  04:36:58,717 - #38 [
INFO  04:36:58,717 - #39 ]
INFO  04:36:58,718 - #37 )
INFO  04:36:58,719 - #44 int
INFO  04:36:58,721 - #44 i
INFO  04:36:58,721 - #33 ;
INFO  04:36:58,721 - #40 {
INFO  04:36:58,721 - #8 if
INFO  04:36:58,722 - #36 (
INFO  04:36:58,722 - #44 k
INFO  04:36:58,723 - #23 !=
INFO  04:36:58,724 - #42 true
INFO  04:36:58,725 - #37 )
INFO  04:36:58,726 - #40 {
INFO  04:36:58,726 - #41 }
INFO  04:36:58,726 - #12 return
INFO  04:36:58,727 - #44 i
INFO  04:36:58,727 - #33 ;
INFO  04:36:58,727 - #41 }
INFO  04:36:58,728 - #41 }
INFO  04:50:44,429 - #2 program
INFO  04:50:44,430 - #44 prg
INFO  04:50:44,430 - #44 bool
INFO  04:50:44,432 - #44 z
INFO  04:50:44,433 - #33 ;
INFO  04:50:44,435 - #44 bool
INFO  04:50:44,435 - #44 k
INFO  04:50:44,435 - #33 ;
INFO  04:50:44,435 - #40 {
INFO  04:50:44,435 - #13 void
INFO  04:50:44,436 - #44 proba
INFO  04:50:44,437 - #36 (
INFO  04:50:44,437 - #37 )
INFO  04:50:44,438 - #40 {
INFO  04:50:44,439 - #41 }
INFO  04:50:44,439 - #44 int
INFO  04:50:44,439 - #44 x
INFO  04:50:44,440 - #36 (
INFO  04:50:44,440 - #44 int
INFO  04:50:44,440 - #44 z
INFO  04:50:44,440 - #34 ,
INFO  04:50:44,440 - #44 int
INFO  04:50:44,440 - #44 p
INFO  04:50:44,440 - #38 [
INFO  04:50:44,441 - #39 ]
INFO  04:50:44,441 - #37 )
INFO  04:50:44,442 - #44 int
INFO  04:50:44,442 - #44 i
INFO  04:50:44,443 - #33 ;
INFO  04:50:44,443 - #40 {
INFO  04:50:44,443 - #44 k
INFO  04:50:44,443 - #36 (
INFO  04:50:44,445 - #43 5
INFO  04:50:44,446 - #34 ,
INFO  04:50:44,447 - #43 2
INFO  04:50:44,447 - #37 )
INFO  04:50:44,447 - #33 ;
INFO  04:50:44,447 - #41 }
INFO  04:50:44,447 - #41 }
ERROR 04:50:44,469 - Error on line 15: Designator must be function or method type.
ERROR 04:50:44,469 - Error on line 11: Missing return statement.
INFO  04:50:55,096 - #2 program
INFO  04:50:55,097 - #44 prg
INFO  04:50:55,097 - #44 bool
INFO  04:50:55,098 - #44 z
INFO  04:50:55,099 - #33 ;
INFO  04:50:55,100 - #44 bool
INFO  04:50:55,100 - #44 k
INFO  04:50:55,100 - #33 ;
INFO  04:50:55,100 - #40 {
INFO  04:50:55,100 - #13 void
INFO  04:50:55,101 - #44 proba
INFO  04:50:55,101 - #36 (
INFO  04:50:55,101 - #37 )
INFO  04:50:55,102 - #40 {
INFO  04:50:55,103 - #41 }
INFO  04:50:55,103 - #44 int
INFO  04:50:55,104 - #44 x
INFO  04:50:55,104 - #36 (
INFO  04:50:55,104 - #44 int
INFO  04:50:55,104 - #44 z
INFO  04:50:55,104 - #34 ,
INFO  04:50:55,105 - #44 int
INFO  04:50:55,105 - #44 p
INFO  04:50:55,105 - #38 [
INFO  04:50:55,105 - #39 ]
INFO  04:50:55,105 - #37 )
INFO  04:50:55,106 - #44 int
INFO  04:50:55,107 - #44 i
INFO  04:50:55,107 - #33 ;
INFO  04:50:55,107 - #40 {
INFO  04:50:55,107 - #44 k
INFO  04:50:55,107 - #36 (
INFO  04:50:55,108 - #43 5
INFO  04:50:55,109 - #34 ,
INFO  04:50:55,110 - #43 2
INFO  04:50:55,110 - #37 )
INFO  04:50:55,111 - #33 ;
INFO  04:50:55,111 - #12 return
INFO  04:50:55,111 - #44 i
INFO  04:50:55,112 - #33 ;
INFO  04:50:55,112 - #41 }
INFO  04:50:55,112 - #41 }
ERROR 04:50:55,134 - Error on line 15: Designator must be function or method type.
INFO  04:51:02,882 - #2 program
INFO  04:51:02,883 - #44 prg
INFO  04:51:02,883 - #44 bool
INFO  04:51:02,884 - #44 z
INFO  04:51:02,885 - #33 ;
INFO  04:51:02,887 - #44 bool
INFO  04:51:02,887 - #44 k
INFO  04:51:02,887 - #33 ;
INFO  04:51:02,887 - #40 {
INFO  04:51:02,888 - #13 void
INFO  04:51:02,889 - #44 proba
INFO  04:51:02,890 - #36 (
INFO  04:51:02,890 - #37 )
INFO  04:51:02,891 - #40 {
INFO  04:51:02,892 - #41 }
INFO  04:51:02,893 - #44 int
INFO  04:51:02,893 - #44 x
INFO  04:51:02,893 - #36 (
INFO  04:51:02,893 - #44 int
INFO  04:51:02,893 - #44 z
INFO  04:51:02,893 - #34 ,
INFO  04:51:02,894 - #44 int
INFO  04:51:02,894 - #44 p
INFO  04:51:02,894 - #38 [
INFO  04:51:02,894 - #39 ]
INFO  04:51:02,894 - #37 )
INFO  04:51:02,895 - #44 int
INFO  04:51:02,895 - #44 i
INFO  04:51:02,895 - #33 ;
INFO  04:51:02,895 - #40 {
INFO  04:51:02,895 - #44 proba
INFO  04:51:02,895 - #36 (
INFO  04:51:02,896 - #43 5
INFO  04:51:02,897 - #34 ,
INFO  04:51:02,898 - #43 2
INFO  04:51:02,898 - #37 )
INFO  04:51:02,898 - #33 ;
INFO  04:51:02,898 - #12 return
INFO  04:51:02,898 - #44 i
INFO  04:51:02,899 - #33 ;
INFO  04:51:02,899 - #41 }
INFO  04:51:02,899 - #41 }
INFO  04:51:10,603 - #2 program
INFO  04:51:10,603 - #44 prg
INFO  04:51:10,603 - #44 bool
INFO  04:51:10,605 - #44 z
INFO  04:51:10,607 - #33 ;
INFO  04:51:10,608 - #44 bool
INFO  04:51:10,609 - #44 k
INFO  04:51:10,609 - #33 ;
INFO  04:51:10,609 - #40 {
INFO  04:51:10,609 - #13 void
INFO  04:51:10,610 - #44 proba
INFO  04:51:10,610 - #36 (
INFO  04:51:10,610 - #37 )
INFO  04:51:10,611 - #40 {
INFO  04:51:10,612 - #41 }
INFO  04:51:10,612 - #44 int
INFO  04:51:10,613 - #44 x
INFO  04:51:10,613 - #36 (
INFO  04:51:10,613 - #44 int
INFO  04:51:10,613 - #44 z
INFO  04:51:10,613 - #34 ,
INFO  04:51:10,613 - #44 int
INFO  04:51:10,613 - #44 p
INFO  04:51:10,613 - #38 [
INFO  04:51:10,614 - #39 ]
INFO  04:51:10,614 - #37 )
INFO  04:51:10,615 - #44 int
INFO  04:51:10,615 - #44 i
INFO  04:51:10,615 - #33 ;
INFO  04:51:10,616 - #40 {
INFO  04:51:10,616 - #44 x
INFO  04:51:10,616 - #36 (
INFO  04:51:10,617 - #43 5
INFO  04:51:10,619 - #34 ,
INFO  04:51:10,619 - #43 2
INFO  04:51:10,619 - #37 )
INFO  04:51:10,620 - #33 ;
INFO  04:51:10,620 - #12 return
INFO  04:51:10,621 - #44 i
INFO  04:51:10,621 - #33 ;
INFO  04:51:10,621 - #41 }
INFO  04:51:10,621 - #41 }
INFO  04:51:28,877 - #2 program
INFO  04:51:28,877 - #44 prg
INFO  04:51:28,877 - #44 bool
INFO  04:51:28,879 - #44 z
INFO  04:51:28,880 - #33 ;
INFO  04:51:28,881 - #44 bool
INFO  04:51:28,882 - #44 k
INFO  04:51:28,882 - #33 ;
INFO  04:51:28,882 - #40 {
INFO  04:51:28,882 - #13 void
INFO  04:51:28,883 - #44 p
INFO  04:51:28,883 - #36 (
INFO  04:51:28,884 - #37 )
INFO  04:51:28,884 - #40 {
INFO  04:51:28,886 - #41 }
INFO  04:51:28,887 - #44 int
INFO  04:51:28,888 - #44 x
INFO  04:51:28,888 - #36 (
INFO  04:51:28,888 - #44 int
INFO  04:51:28,888 - #44 z
INFO  04:51:28,888 - #34 ,
INFO  04:51:28,888 - #44 int
INFO  04:51:28,888 - #44 p
INFO  04:51:28,889 - #38 [
INFO  04:51:28,890 - #39 ]
INFO  04:51:28,890 - #37 )
INFO  04:51:28,892 - #44 int
INFO  04:51:28,892 - #44 i
INFO  04:51:28,892 - #33 ;
INFO  04:51:28,892 - #40 {
INFO  04:51:28,892 - #44 x
INFO  04:51:28,893 - #36 (
INFO  04:51:28,894 - #43 5
INFO  04:51:28,895 - #34 ,
INFO  04:51:28,896 - #43 2
INFO  04:51:28,896 - #37 )
INFO  04:51:28,897 - #33 ;
INFO  04:51:28,897 - #12 return
INFO  04:51:28,897 - #44 i
INFO  04:51:28,898 - #33 ;
INFO  04:51:28,898 - #41 }
INFO  04:51:28,898 - #41 }
INFO  04:51:36,618 - #2 program
INFO  04:51:36,618 - #44 prg
INFO  04:51:36,619 - #44 bool
INFO  04:51:36,620 - #44 z
INFO  04:51:36,621 - #33 ;
INFO  04:51:36,622 - #44 bool
INFO  04:51:36,622 - #44 k
INFO  04:51:36,623 - #33 ;
INFO  04:51:36,623 - #40 {
INFO  04:51:36,623 - #13 void
INFO  04:51:36,624 - #44 p
INFO  04:51:36,624 - #36 (
INFO  04:51:36,625 - #37 )
INFO  04:51:36,625 - #40 {
INFO  04:51:36,627 - #41 }
INFO  04:51:36,627 - #44 int
INFO  04:51:36,628 - #44 x
INFO  04:51:36,628 - #36 (
INFO  04:51:36,628 - #44 int
INFO  04:51:36,628 - #44 z
INFO  04:51:36,628 - #34 ,
INFO  04:51:36,628 - #44 int
INFO  04:51:36,628 - #44 p
INFO  04:51:36,628 - #38 [
INFO  04:51:36,629 - #39 ]
INFO  04:51:36,629 - #37 )
INFO  04:51:36,630 - #44 int
INFO  04:51:36,630 - #44 i
INFO  04:51:36,630 - #33 ;
INFO  04:51:36,630 - #40 {
INFO  04:51:36,631 - #44 p
INFO  04:51:36,631 - #36 (
INFO  04:51:36,631 - #43 5
INFO  04:51:36,632 - #34 ,
INFO  04:51:36,633 - #43 2
INFO  04:51:36,633 - #37 )
INFO  04:51:36,633 - #33 ;
INFO  04:51:36,634 - #12 return
INFO  04:51:36,634 - #44 i
INFO  04:51:36,634 - #33 ;
INFO  04:51:36,634 - #41 }
INFO  04:51:36,634 - #41 }
ERROR 04:51:36,658 - Error on line 15: Designator must be function or method type.
INFO  04:54:52,969 - #2 program
INFO  04:54:52,970 - #44 prg
INFO  04:54:52,970 - #44 bool
INFO  04:54:52,971 - #44 z
INFO  04:54:52,973 - #33 ;
INFO  04:54:52,974 - #44 bool
INFO  04:54:52,974 - #44 k
INFO  04:54:52,974 - #33 ;
INFO  04:54:52,975 - #40 {
INFO  04:54:52,975 - #13 void
INFO  04:54:52,975 - #44 p
INFO  04:54:52,976 - #36 (
INFO  04:54:52,976 - #37 )
INFO  04:54:52,977 - #40 {
INFO  04:54:52,978 - #41 }
INFO  04:54:52,979 - #44 int
INFO  04:54:52,979 - #44 x
INFO  04:54:52,980 - #36 (
INFO  04:54:52,980 - #44 int
INFO  04:54:52,980 - #44 z
INFO  04:54:52,980 - #34 ,
INFO  04:54:52,980 - #44 int
INFO  04:54:52,980 - #44 p
INFO  04:54:52,980 - #38 [
INFO  04:54:52,981 - #39 ]
INFO  04:54:52,981 - #37 )
INFO  04:54:52,982 - #44 int
INFO  04:54:52,982 - #44 i
INFO  04:54:52,982 - #33 ;
INFO  04:54:52,983 - #40 {
INFO  04:54:52,983 - #44 p
INFO  04:54:52,983 - #36 (
INFO  04:54:52,984 - #43 5
INFO  04:54:52,985 - #34 ,
INFO  04:54:52,986 - #43 2
INFO  04:54:52,986 - #37 )
INFO  04:54:52,986 - #33 ;
INFO  04:54:52,987 - #12 return
INFO  04:54:52,987 - #44 i
INFO  04:54:52,987 - #33 ;
INFO  04:54:52,988 - #41 }
INFO  04:54:52,988 - #41 }
ERROR 04:54:53,011 - Error on line 15: Designator must be function or method type.
INFO  05:06:44,482 - #2 program
INFO  05:06:44,483 - #44 prg
INFO  05:06:44,483 - #44 bool
INFO  05:06:44,485 - #44 z
INFO  05:06:44,486 - #33 ;
INFO  05:06:44,488 - #44 bool
INFO  05:06:44,488 - #44 k
INFO  05:06:44,488 - #33 ;
INFO  05:06:44,489 - #40 {
INFO  05:06:44,489 - #13 void
INFO  05:06:44,490 - #44 p
INFO  05:06:44,490 - #36 (
INFO  05:06:44,491 - #37 )
INFO  05:06:44,491 - #40 {
INFO  05:06:44,493 - #41 }
INFO  05:06:44,494 - #44 int
INFO  05:06:44,494 - #44 x
INFO  05:06:44,495 - #36 (
INFO  05:06:44,495 - #44 int
INFO  05:06:44,495 - #44 z
INFO  05:06:44,495 - #34 ,
INFO  05:06:44,495 - #44 int
INFO  05:06:44,495 - #44 p
INFO  05:06:44,496 - #38 [
INFO  05:06:44,496 - #39 ]
INFO  05:06:44,496 - #37 )
INFO  05:06:44,497 - #44 int
INFO  05:06:44,498 - #44 i
INFO  05:06:44,498 - #33 ;
INFO  05:06:44,498 - #40 {
INFO  05:06:44,498 - #44 p
INFO  05:06:44,498 - #36 (
INFO  05:06:44,499 - #43 5
INFO  05:06:44,500 - #34 ,
INFO  05:06:44,501 - #43 2
INFO  05:06:44,501 - #37 )
INFO  05:06:44,501 - #33 ;
INFO  05:06:44,501 - #12 return
INFO  05:06:44,501 - #44 i
INFO  05:06:44,502 - #33 ;
INFO  05:06:44,502 - #41 }
INFO  05:06:44,502 - #41 }
ERROR 05:06:44,525 - Error on line 15: Designator must be function or method type.
ERROR 05:06:44,526 - Error on line 9: More actual parameters than expected.
ERROR 05:06:44,526 - Error on line 11: More actual parameters than expected.
ERROR 05:06:44,526 - Error on line 15: Not enough parameters for function call.
INFO  05:07:26,206 - #2 program
INFO  05:07:26,207 - #44 prg
INFO  05:07:26,207 - #44 bool
INFO  05:07:26,209 - #44 z
INFO  05:07:26,210 - #33 ;
INFO  05:07:26,212 - #44 bool
INFO  05:07:26,212 - #44 k
INFO  05:07:26,212 - #33 ;
INFO  05:07:26,212 - #40 {
INFO  05:07:26,212 - #13 void
INFO  05:07:26,214 - #44 proba
INFO  05:07:26,214 - #36 (
INFO  05:07:26,215 - #37 )
INFO  05:07:26,215 - #40 {
INFO  05:07:26,217 - #41 }
INFO  05:07:26,218 - #44 int
INFO  05:07:26,218 - #44 x
INFO  05:07:26,219 - #36 (
INFO  05:07:26,219 - #44 int
INFO  05:07:26,219 - #44 z
INFO  05:07:26,219 - #34 ,
INFO  05:07:26,219 - #44 int
INFO  05:07:26,219 - #44 p
INFO  05:07:26,220 - #38 [
INFO  05:07:26,220 - #39 ]
INFO  05:07:26,220 - #37 )
INFO  05:07:26,221 - #44 int
INFO  05:07:26,222 - #44 i
INFO  05:07:26,222 - #33 ;
INFO  05:07:26,222 - #40 {
INFO  05:07:26,222 - #44 proba
INFO  05:07:26,222 - #36 (
INFO  05:07:26,223 - #37 )
INFO  05:07:26,224 - #33 ;
INFO  05:07:26,224 - #12 return
INFO  05:07:26,225 - #44 i
INFO  05:07:26,226 - #33 ;
INFO  05:07:26,227 - #41 }
INFO  05:07:26,227 - #41 }
INFO  05:07:34,338 - #2 program
INFO  05:07:34,339 - #44 prg
INFO  05:07:34,339 - #44 bool
INFO  05:07:34,340 - #44 z
INFO  05:07:34,341 - #33 ;
INFO  05:07:34,342 - #44 bool
INFO  05:07:34,343 - #44 k
INFO  05:07:34,343 - #33 ;
INFO  05:07:34,343 - #40 {
INFO  05:07:34,343 - #13 void
INFO  05:07:34,344 - #44 proba
INFO  05:07:34,345 - #36 (
INFO  05:07:34,345 - #37 )
INFO  05:07:34,346 - #40 {
INFO  05:07:34,347 - #41 }
INFO  05:07:34,348 - #44 int
INFO  05:07:34,348 - #44 x
INFO  05:07:34,348 - #36 (
INFO  05:07:34,348 - #44 int
INFO  05:07:34,348 - #44 z
INFO  05:07:34,349 - #34 ,
INFO  05:07:34,349 - #44 int
INFO  05:07:34,349 - #44 p
INFO  05:07:34,349 - #38 [
INFO  05:07:34,349 - #39 ]
INFO  05:07:34,349 - #37 )
INFO  05:07:34,351 - #44 int
INFO  05:07:34,351 - #44 i
INFO  05:07:34,351 - #33 ;
INFO  05:07:34,351 - #40 {
INFO  05:07:34,352 - #44 proba
INFO  05:07:34,352 - #36 (
INFO  05:07:34,352 - #44 i
INFO  05:07:34,354 - #37 )
INFO  05:07:34,355 - #33 ;
INFO  05:07:34,355 - #12 return
INFO  05:07:34,356 - #44 i
INFO  05:07:34,356 - #33 ;
INFO  05:07:34,356 - #41 }
INFO  05:07:34,356 - #41 }
ERROR 05:07:34,381 - Error on line 13: More actual parameters than expected.
ERROR 05:07:34,381 - Error on line 15: Not enough parameters for function call.
INFO  05:08:45,083 - #2 program
INFO  05:08:45,084 - #44 prg
INFO  05:08:45,084 - #44 bool
INFO  05:08:45,085 - #44 z
INFO  05:08:45,086 - #33 ;
INFO  05:08:45,088 - #44 bool
INFO  05:08:45,088 - #44 k
INFO  05:08:45,088 - #33 ;
INFO  05:08:45,089 - #40 {
INFO  05:08:45,089 - #13 void
INFO  05:08:45,089 - #44 proba
INFO  05:08:45,090 - #36 (
INFO  05:08:45,090 - #37 )
INFO  05:08:45,090 - #40 {
INFO  05:08:45,091 - #41 }
INFO  05:08:45,092 - #44 int
INFO  05:08:45,092 - #44 x
INFO  05:08:45,092 - #36 (
INFO  05:08:45,092 - #44 int
INFO  05:08:45,092 - #44 z
INFO  05:08:45,092 - #34 ,
INFO  05:08:45,093 - #44 int
INFO  05:08:45,093 - #44 p
INFO  05:08:45,093 - #38 [
INFO  05:08:45,093 - #39 ]
INFO  05:08:45,093 - #37 )
INFO  05:08:45,094 - #44 int
INFO  05:08:45,094 - #44 i
INFO  05:08:45,094 - #33 ;
INFO  05:08:45,094 - #40 {
INFO  05:08:45,094 - #44 proba
INFO  05:08:45,095 - #36 (
INFO  05:08:45,095 - #44 i
INFO  05:08:45,096 - #37 )
INFO  05:08:45,097 - #33 ;
INFO  05:08:45,097 - #12 return
INFO  05:08:45,097 - #44 i
INFO  05:08:45,097 - #33 ;
INFO  05:08:45,097 - #41 }
INFO  05:08:45,097 - #41 }
ERROR 05:08:45,119 - Error on line 13: More actual parameters than formal parameters.
INFO  05:09:11,679 - #2 program
INFO  05:09:11,680 - #44 prg
INFO  05:09:11,680 - #44 bool
INFO  05:09:11,681 - #44 z
INFO  05:09:11,683 - #33 ;
INFO  05:09:11,684 - #44 bool
INFO  05:09:11,684 - #44 k
INFO  05:09:11,685 - #33 ;
INFO  05:09:11,685 - #40 {
INFO  05:09:11,685 - #13 void
INFO  05:09:11,685 - #44 proba
INFO  05:09:11,686 - #36 (
INFO  05:09:11,686 - #44 bool
INFO  05:09:11,686 - #44 x
INFO  05:09:11,686 - #34 ,
INFO  05:09:11,687 - #44 int
INFO  05:09:11,687 - #44 y
INFO  05:09:11,687 - #38 [
INFO  05:09:11,687 - #39 ]
INFO  05:09:11,687 - #34 ,
INFO  05:09:11,688 - #44 char
INFO  05:09:11,688 - #44 z
INFO  05:09:11,688 - #37 )
INFO  05:09:11,689 - #40 {
INFO  05:09:11,690 - #41 }
INFO  05:09:11,691 - #44 int
INFO  05:09:11,691 - #44 x
INFO  05:09:11,691 - #36 (
INFO  05:09:11,691 - #44 int
INFO  05:09:11,691 - #44 z
INFO  05:09:11,691 - #34 ,
INFO  05:09:11,691 - #44 int
INFO  05:09:11,691 - #44 p
INFO  05:09:11,692 - #38 [
INFO  05:09:11,692 - #39 ]
INFO  05:09:11,692 - #37 )
INFO  05:09:11,692 - #44 int
INFO  05:09:11,692 - #44 i
INFO  05:09:11,692 - #33 ;
INFO  05:09:11,692 - #40 {
INFO  05:09:11,692 - #44 proba
INFO  05:09:11,692 - #36 (
INFO  05:09:11,693 - #44 i
INFO  05:09:11,694 - #37 )
INFO  05:09:11,695 - #33 ;
INFO  05:09:11,695 - #12 return
INFO  05:09:11,695 - #44 i
INFO  05:09:11,695 - #33 ;
INFO  05:09:11,695 - #41 }
INFO  05:09:11,696 - #41 }
ERROR 05:09:11,720 - Error on line 13: Type mismatch in function call for parameter x.
ERROR 05:09:11,720 - Error on line 15: Not enough actual parameters.
INFO  05:09:25,623 - #2 program
INFO  05:09:25,623 - #44 prg
INFO  05:09:25,623 - #44 bool
INFO  05:09:25,624 - #44 z
INFO  05:09:25,625 - #33 ;
INFO  05:09:25,626 - #44 bool
INFO  05:09:25,627 - #44 k
INFO  05:09:25,627 - #33 ;
INFO  05:09:25,627 - #40 {
INFO  05:09:25,627 - #13 void
INFO  05:09:25,628 - #44 proba
INFO  05:09:25,629 - #36 (
INFO  05:09:25,629 - #44 bool
INFO  05:09:25,629 - #44 x
INFO  05:09:25,629 - #34 ,
INFO  05:09:25,629 - #44 int
INFO  05:09:25,629 - #44 y
INFO  05:09:25,630 - #38 [
INFO  05:09:25,630 - #39 ]
INFO  05:09:25,630 - #34 ,
INFO  05:09:25,630 - #44 char
INFO  05:09:25,630 - #44 z
INFO  05:09:25,631 - #37 )
INFO  05:09:25,631 - #40 {
INFO  05:09:25,632 - #41 }
INFO  05:09:25,633 - #44 int
INFO  05:09:25,633 - #44 x
INFO  05:09:25,633 - #36 (
INFO  05:09:25,633 - #44 int
INFO  05:09:25,633 - #44 z
INFO  05:09:25,634 - #34 ,
INFO  05:09:25,634 - #44 int
INFO  05:09:25,634 - #44 p
INFO  05:09:25,634 - #38 [
INFO  05:09:25,634 - #39 ]
INFO  05:09:25,634 - #37 )
INFO  05:09:25,634 - #44 int
INFO  05:09:25,634 - #44 i
INFO  05:09:25,634 - #33 ;
INFO  05:09:25,634 - #40 {
INFO  05:09:25,635 - #44 proba
INFO  05:09:25,635 - #36 (
INFO  05:09:25,635 - #44 i
INFO  05:09:25,636 - #34 ,
INFO  05:09:25,637 - #44 k
INFO  05:09:25,637 - #34 ,
INFO  05:09:25,637 - #44 k
INFO  05:09:25,637 - #37 )
INFO  05:09:25,637 - #33 ;
INFO  05:09:25,637 - #12 return
INFO  05:09:25,638 - #44 i
INFO  05:09:25,638 - #33 ;
INFO  05:09:25,638 - #41 }
INFO  05:09:25,638 - #41 }
ERROR 05:09:25,665 - Error on line 13: Type mismatch in function call for parameter x.
ERROR 05:09:25,665 - Error on line 15: Type mismatch in function call for parameter y.
ERROR 05:09:25,665 - Error on line 18: Type mismatch in function call for parameter z.
INFO  05:09:32,942 - #2 program
INFO  05:09:32,942 - #44 prg
INFO  05:09:32,942 - #44 bool
INFO  05:09:32,944 - #44 z
INFO  05:09:32,945 - #33 ;
INFO  05:09:32,947 - #44 bool
INFO  05:09:32,947 - #44 k
INFO  05:09:32,947 - #33 ;
INFO  05:09:32,948 - #40 {
INFO  05:09:32,948 - #13 void
INFO  05:09:32,948 - #44 proba
INFO  05:09:32,949 - #36 (
INFO  05:09:32,949 - #44 bool
INFO  05:09:32,949 - #44 x
INFO  05:09:32,949 - #34 ,
INFO  05:09:32,950 - #44 int
INFO  05:09:32,950 - #44 y
INFO  05:09:32,950 - #38 [
INFO  05:09:32,950 - #39 ]
INFO  05:09:32,950 - #34 ,
INFO  05:09:32,951 - #44 char
INFO  05:09:32,951 - #44 z
INFO  05:09:32,951 - #37 )
INFO  05:09:32,952 - #40 {
INFO  05:09:32,953 - #41 }
INFO  05:09:32,955 - #44 int
INFO  05:09:32,956 - #44 x
INFO  05:09:32,956 - #36 (
INFO  05:09:32,956 - #44 int
INFO  05:09:32,956 - #44 z
INFO  05:09:32,956 - #34 ,
INFO  05:09:32,956 - #44 int
INFO  05:09:32,956 - #44 p
INFO  05:09:32,956 - #38 [
INFO  05:09:32,956 - #39 ]
INFO  05:09:32,956 - #37 )
INFO  05:09:32,957 - #44 int
INFO  05:09:32,957 - #44 i
INFO  05:09:32,957 - #33 ;
INFO  05:09:32,957 - #40 {
INFO  05:09:32,957 - #44 proba
INFO  05:09:32,957 - #36 (
INFO  05:09:32,958 - #44 i
INFO  05:09:32,959 - #34 ,
INFO  05:09:32,960 - #44 k
INFO  05:09:32,960 - #34 ,
INFO  05:09:32,960 - #44 k
INFO  05:09:32,960 - #34 ,
INFO  05:09:32,960 - #44 k
INFO  05:09:32,960 - #37 )
INFO  05:09:32,961 - #33 ;
INFO  05:09:32,961 - #12 return
INFO  05:09:32,961 - #44 i
INFO  05:09:32,961 - #33 ;
INFO  05:09:32,961 - #41 }
INFO  05:09:32,962 - #41 }
ERROR 05:09:32,984 - Error on line 13: Type mismatch in function call for parameter x.
ERROR 05:09:32,984 - Error on line 15: Type mismatch in function call for parameter y.
ERROR 05:09:32,985 - Error on line 18: Type mismatch in function call for parameter z.
ERROR 05:09:32,985 - Error on line 21: Type mismatch in function call for parameter z.
INFO  05:10:41,645 - #2 program
INFO  05:10:41,646 - #44 prg
INFO  05:10:41,646 - #44 bool
INFO  05:10:41,647 - #44 z
INFO  05:10:41,648 - #33 ;
INFO  05:10:41,649 - #44 bool
INFO  05:10:41,650 - #44 k
INFO  05:10:41,650 - #33 ;
INFO  05:10:41,650 - #40 {
INFO  05:10:41,650 - #13 void
INFO  05:10:41,651 - #44 proba
INFO  05:10:41,651 - #36 (
INFO  05:10:41,651 - #44 bool
INFO  05:10:41,651 - #44 x
INFO  05:10:41,652 - #34 ,
INFO  05:10:41,652 - #44 int
INFO  05:10:41,652 - #44 y
INFO  05:10:41,652 - #38 [
INFO  05:10:41,652 - #39 ]
INFO  05:10:41,652 - #34 ,
INFO  05:10:41,653 - #44 char
INFO  05:10:41,653 - #44 z
INFO  05:10:41,653 - #37 )
INFO  05:10:41,654 - #40 {
INFO  05:10:41,655 - #41 }
INFO  05:10:41,656 - #44 int
INFO  05:10:41,656 - #44 x
INFO  05:10:41,657 - #36 (
INFO  05:10:41,657 - #44 int
INFO  05:10:41,657 - #44 z
INFO  05:10:41,657 - #34 ,
INFO  05:10:41,657 - #44 int
INFO  05:10:41,657 - #44 p
INFO  05:10:41,657 - #38 [
INFO  05:10:41,657 - #39 ]
INFO  05:10:41,657 - #37 )
INFO  05:10:41,657 - #44 int
INFO  05:10:41,657 - #44 i
INFO  05:10:41,657 - #33 ;
INFO  05:10:41,658 - #40 {
INFO  05:10:41,658 - #44 proba
INFO  05:10:41,658 - #36 (
INFO  05:10:41,659 - #44 i
INFO  05:10:41,659 - #34 ,
INFO  05:10:41,660 - #44 k
INFO  05:10:41,660 - #34 ,
INFO  05:10:41,660 - #44 k
INFO  05:10:41,660 - #34 ,
INFO  05:10:41,660 - #44 k
INFO  05:10:41,660 - #37 )
INFO  05:10:41,661 - #33 ;
INFO  05:10:41,661 - #12 return
INFO  05:10:41,661 - #44 i
INFO  05:10:41,661 - #33 ;
INFO  05:10:41,662 - #41 }
INFO  05:10:41,662 - #41 }
ERROR 05:10:41,688 - Error on line 13: Type mismatch in function call for parameter x.
ERROR 05:10:41,688 - Error on line 15: Type mismatch in function call for parameter y.
ERROR 05:10:41,688 - Error on line 18: Type mismatch in function call for parameter z.
ERROR 05:10:41,688 - Error on line 21: Type mismatch in function call for parameter z.
INFO  05:13:13,962 - #2 program
INFO  05:13:13,963 - #44 prg
INFO  05:13:13,963 - #44 bool
INFO  05:13:13,965 - #44 z
INFO  05:13:13,966 - #33 ;
INFO  05:13:13,967 - #44 bool
INFO  05:13:13,968 - #44 k
INFO  05:13:13,968 - #33 ;
INFO  05:13:13,968 - #40 {
INFO  05:13:13,968 - #13 void
INFO  05:13:13,971 - #44 proba
INFO  05:13:13,972 - #36 (
INFO  05:13:13,973 - #44 bool
INFO  05:13:13,974 - #44 x
INFO  05:13:13,974 - #34 ,
INFO  05:13:13,974 - #44 int
INFO  05:13:13,974 - #44 y
INFO  05:13:13,974 - #38 [
INFO  05:13:13,975 - #39 ]
INFO  05:13:13,975 - #34 ,
INFO  05:13:13,976 - #44 char
INFO  05:13:13,976 - #44 z
INFO  05:13:13,976 - #37 )
INFO  05:13:13,977 - #40 {
INFO  05:13:13,979 - #41 }
INFO  05:13:13,980 - #44 int
INFO  05:13:13,981 - #44 x
INFO  05:13:13,981 - #36 (
INFO  05:13:13,981 - #44 int
INFO  05:13:13,981 - #44 z
INFO  05:13:13,981 - #34 ,
INFO  05:13:13,982 - #44 int
INFO  05:13:13,982 - #44 p
INFO  05:13:13,982 - #38 [
INFO  05:13:13,982 - #39 ]
INFO  05:13:13,982 - #37 )
INFO  05:13:13,982 - #44 int
INFO  05:13:13,982 - #44 i
INFO  05:13:13,982 - #33 ;
INFO  05:13:13,983 - #40 {
INFO  05:13:13,983 - #44 proba
INFO  05:13:13,983 - #36 (
INFO  05:13:13,984 - #44 i
INFO  05:13:13,985 - #34 ,
INFO  05:13:13,986 - #44 k
INFO  05:13:13,986 - #34 ,
INFO  05:13:13,987 - #44 k
INFO  05:13:13,987 - #34 ,
INFO  05:13:13,987 - #44 k
INFO  05:13:13,987 - #37 )
INFO  05:13:13,988 - #33 ;
INFO  05:13:13,988 - #12 return
INFO  05:13:13,988 - #44 i
INFO  05:13:13,988 - #33 ;
INFO  05:13:13,989 - #41 }
INFO  05:13:13,989 - #41 }
ERROR 05:13:14,018 - Error on line 13: Type mismatch in function call for parameter x.
ERROR 05:13:14,018 - Error on line 15: Type mismatch in function call for parameter y.
ERROR 05:13:14,019 - Error on line 18: Type mismatch in function call for parameter z.
ERROR 05:13:14,019 - Error on line 21: More actual parameters than formal parameters.
INFO  05:13:24,781 - #2 program
INFO  05:13:24,782 - #44 prg
INFO  05:13:24,782 - #44 bool
INFO  05:13:24,783 - #44 z
INFO  05:13:24,785 - #33 ;
INFO  05:13:24,786 - #44 bool
INFO  05:13:24,786 - #44 k
INFO  05:13:24,787 - #33 ;
INFO  05:13:24,787 - #40 {
INFO  05:13:24,787 - #13 void
INFO  05:13:24,787 - #44 proba
INFO  05:13:24,788 - #36 (
INFO  05:13:24,788 - #44 bool
INFO  05:13:24,788 - #44 x
INFO  05:13:24,788 - #34 ,
INFO  05:13:24,788 - #44 int
INFO  05:13:24,788 - #44 y
INFO  05:13:24,788 - #38 [
INFO  05:13:24,789 - #39 ]
INFO  05:13:24,789 - #34 ,
INFO  05:13:24,789 - #44 char
INFO  05:13:24,789 - #44 z
INFO  05:13:24,789 - #37 )
INFO  05:13:24,790 - #40 {
INFO  05:13:24,791 - #41 }
INFO  05:13:24,791 - #44 int
INFO  05:13:24,792 - #44 x
INFO  05:13:24,792 - #36 (
INFO  05:13:24,792 - #44 int
INFO  05:13:24,792 - #44 z
INFO  05:13:24,792 - #34 ,
INFO  05:13:24,792 - #44 int
INFO  05:13:24,792 - #44 p
INFO  05:13:24,792 - #38 [
INFO  05:13:24,792 - #39 ]
INFO  05:13:24,792 - #37 )
INFO  05:13:24,792 - #44 int
INFO  05:13:24,792 - #44 i
INFO  05:13:24,792 - #33 ;
INFO  05:13:24,792 - #40 {
INFO  05:13:24,793 - #44 proba
INFO  05:13:24,793 - #36 (
INFO  05:13:24,793 - #44 i
INFO  05:13:24,794 - #34 ,
INFO  05:13:24,795 - #44 k
INFO  05:13:24,795 - #37 )
INFO  05:13:24,795 - #33 ;
INFO  05:13:24,796 - #12 return
INFO  05:13:24,796 - #44 i
INFO  05:13:24,796 - #33 ;
INFO  05:13:24,796 - #41 }
INFO  05:13:24,796 - #41 }
ERROR 05:13:24,818 - Error on line 13: Type mismatch in function call for parameter x.
ERROR 05:13:24,818 - Error on line 15: Type mismatch in function call for parameter y.
ERROR 05:13:24,818 - Error on line 15: Not enough actual parameters.
INFO  05:13:55,925 - #2 program
INFO  05:13:55,925 - #44 prg
INFO  05:13:55,925 - #44 bool
INFO  05:13:55,927 - #44 z
INFO  05:13:55,928 - #33 ;
INFO  05:13:55,929 - #44 bool
INFO  05:13:55,930 - #44 k
INFO  05:13:55,930 - #33 ;
INFO  05:13:55,930 - #40 {
INFO  05:13:55,930 - #13 void
INFO  05:13:55,931 - #44 proba
INFO  05:13:55,932 - #36 (
INFO  05:13:55,932 - #44 bool
INFO  05:13:55,932 - #44 x
INFO  05:13:55,932 - #34 ,
INFO  05:13:55,932 - #44 int
INFO  05:13:55,932 - #44 y
INFO  05:13:55,932 - #38 [
INFO  05:13:55,932 - #39 ]
INFO  05:13:55,932 - #34 ,
INFO  05:13:55,933 - #44 char
INFO  05:13:55,933 - #44 z
INFO  05:13:55,933 - #37 )
INFO  05:13:55,934 - #40 {
INFO  05:13:55,935 - #41 }
INFO  05:13:55,936 - #44 int
INFO  05:13:55,936 - #44 x
INFO  05:13:55,936 - #36 (
INFO  05:13:55,936 - #44 int
INFO  05:13:55,936 - #44 z
INFO  05:13:55,936 - #34 ,
INFO  05:13:55,936 - #44 int
INFO  05:13:55,937 - #44 p
INFO  05:13:55,937 - #38 [
INFO  05:13:55,937 - #39 ]
INFO  05:13:55,937 - #37 )
INFO  05:13:55,937 - #44 int
INFO  05:13:55,937 - #44 i
INFO  05:13:55,937 - #33 ;
INFO  05:13:55,937 - #44 bool
INFO  05:13:55,937 - #44 b
INFO  05:13:55,937 - #33 ;
INFO  05:13:55,937 - #40 {
INFO  05:13:55,938 - #44 proba
INFO  05:13:55,938 - #36 (
INFO  05:13:55,938 - #44 b
INFO  05:13:55,939 - #34 ,
INFO  05:13:55,940 - #44 null
INFO  05:13:55,940 - #34 ,
INFO  05:13:55,940 - #45 c
INFO  05:13:55,940 - #37 )
INFO  05:13:55,940 - #33 ;
INFO  05:13:55,941 - #12 return
INFO  05:13:55,941 - #44 i
INFO  05:13:55,941 - #33 ;
INFO  05:13:55,941 - #41 }
INFO  05:13:55,941 - #41 }
INFO  05:14:10,755 - #2 program
INFO  05:14:10,756 - #44 prg
INFO  05:14:10,756 - #44 bool
INFO  05:14:10,757 - #44 z
INFO  05:14:10,758 - #33 ;
INFO  05:14:10,759 - #44 bool
INFO  05:14:10,759 - #44 k
INFO  05:14:10,760 - #33 ;
INFO  05:14:10,760 - #40 {
INFO  05:14:10,760 - #13 void
INFO  05:14:10,760 - #44 proba
INFO  05:14:10,761 - #36 (
INFO  05:14:10,761 - #44 bool
INFO  05:14:10,761 - #44 x
INFO  05:14:10,761 - #34 ,
INFO  05:14:10,761 - #44 int
INFO  05:14:10,761 - #44 y
INFO  05:14:10,762 - #38 [
INFO  05:14:10,762 - #39 ]
INFO  05:14:10,762 - #34 ,
INFO  05:14:10,762 - #44 char
INFO  05:14:10,762 - #44 z
INFO  05:14:10,762 - #37 )
INFO  05:14:10,763 - #40 {
INFO  05:14:10,764 - #41 }
INFO  05:14:10,765 - #44 int
INFO  05:14:10,765 - #44 x
INFO  05:14:10,765 - #36 (
INFO  05:14:10,765 - #44 int
INFO  05:14:10,765 - #44 z
INFO  05:14:10,765 - #34 ,
INFO  05:14:10,765 - #44 int
INFO  05:14:10,765 - #44 p
INFO  05:14:10,765 - #38 [
INFO  05:14:10,766 - #39 ]
INFO  05:14:10,766 - #37 )
INFO  05:14:10,766 - #44 int
INFO  05:14:10,766 - #44 i
INFO  05:14:10,766 - #33 ;
INFO  05:14:10,766 - #44 bool
INFO  05:14:10,766 - #44 b
INFO  05:14:10,766 - #33 ;
INFO  05:14:10,766 - #40 {
INFO  05:14:10,766 - #44 proba
INFO  05:14:10,766 - #36 (
INFO  05:14:10,767 - #42 true
INFO  05:14:10,768 - #34 ,
INFO  05:14:10,769 - #44 p
INFO  05:14:10,769 - #34 ,
INFO  05:14:10,769 - #45 c
INFO  05:14:10,769 - #37 )
INFO  05:14:10,769 - #33 ;
INFO  05:14:10,770 - #12 return
INFO  05:14:10,770 - #44 i
INFO  05:14:10,770 - #33 ;
INFO  05:14:10,770 - #41 }
INFO  05:14:10,770 - #41 }
