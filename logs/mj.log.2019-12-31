INFO  03:01:25,422 - #2 program
INFO  03:01:25,424 - #44 prg
INFO  03:01:25,424 - #40 {
INFO  03:01:25,425 - #44 int
INFO  03:01:25,426 - #44 main
INFO  03:01:25,427 - #36 (
INFO  03:01:25,427 - #37 )
INFO  03:01:25,427 - #40 {
INFO  03:01:25,428 - #41 }
INFO  03:01:25,429 - #41 }
ERROR 03:01:25,451 - Error on line 6: Missing return statement.
INFO  03:01:52,067 - #2 program
INFO  03:01:52,068 - #44 prg
INFO  03:01:52,068 - #40 {
INFO  03:01:52,069 - #44 int
INFO  03:01:52,070 - #44 main
INFO  03:01:52,071 - #36 (
INFO  03:01:52,071 - #37 )
INFO  03:01:52,072 - #40 {
INFO  03:01:52,073 - #41 }
INFO  03:01:52,074 - #41 }
ERROR 03:01:52,095 - Error on line 6: Main method cannot have return type.
ERROR 03:01:52,095 - Error on line 6: Missing return statement.
INFO  03:03:29,003 - #2 program
INFO  03:03:29,004 - #44 prg
INFO  03:03:29,004 - #44 int
INFO  03:03:29,005 - #44 x
INFO  03:03:29,006 - #33 ;
INFO  03:03:29,007 - #40 {
INFO  03:03:29,008 - #44 int
INFO  03:03:29,009 - #44 x
INFO  03:03:29,009 - #36 (
INFO  03:03:29,009 - #37 )
INFO  03:03:29,010 - #40 {
INFO  03:03:29,012 - #41 }
INFO  03:03:29,013 - #41 }
ERROR 03:03:29,038 - Error on line 6: Name x has already been declared.
ERROR 03:03:29,038 - Error on line 6: Missing return statement.
INFO  03:04:03,025 - #2 program
INFO  03:04:03,026 - #44 prg
INFO  03:04:03,026 - #44 int
INFO  03:04:03,028 - #44 x
INFO  03:04:03,030 - #33 ;
INFO  03:04:03,031 - #40 {
INFO  03:04:03,032 - #44 int
INFO  03:04:03,032 - #44 x
INFO  03:04:03,033 - #36 (
INFO  03:04:03,033 - #37 )
INFO  03:04:03,034 - #40 {
INFO  03:04:03,035 - #41 }
INFO  03:04:03,037 - #41 }
ERROR 03:04:03,065 - Error on line 6: Name x has already been declared.
ERROR 03:04:03,065 - Error on line 6: Missing return statement.
INFO  03:17:59,626 - #2 program
INFO  03:17:59,626 - #44 prg
INFO  03:17:59,627 - #44 int
INFO  03:17:59,628 - #44 x
INFO  03:17:59,629 - #33 ;
INFO  03:17:59,631 - #40 {
INFO  03:17:59,631 - #44 int
INFO  03:17:59,632 - #44 x
INFO  03:17:59,632 - #36 (
INFO  03:17:59,632 - #44 int
INFO  03:17:59,632 - #44 z
INFO  03:17:59,632 - #34 ,
INFO  03:17:59,633 - #44 int
INFO  03:17:59,633 - #44 p
INFO  03:17:59,633 - #38 [
INFO  03:17:59,633 - #39 ]
INFO  03:17:59,633 - #37 )
INFO  03:17:59,634 - #40 {
INFO  03:17:59,635 - #12 return
INFO  03:17:59,635 - #43 5
INFO  03:17:59,636 - #33 ;
INFO  03:17:59,637 - #41 }
INFO  03:17:59,637 - #41 }
ERROR 03:17:59,658 - Error on line 6: Name x has already been declared.
ERROR 03:17:59,659 - Error on line 8: Return type not compatible with function return type.
INFO  03:18:16,537 - #2 program
INFO  03:18:16,538 - #44 prg
INFO  03:18:16,538 - #40 {
INFO  03:18:16,540 - #44 int
INFO  03:18:16,540 - #44 x
INFO  03:18:16,541 - #36 (
INFO  03:18:16,542 - #44 int
INFO  03:18:16,542 - #44 z
INFO  03:18:16,542 - #34 ,
INFO  03:18:16,543 - #44 int
INFO  03:18:16,543 - #44 p
INFO  03:18:16,543 - #38 [
INFO  03:18:16,544 - #39 ]
INFO  03:18:16,544 - #37 )
INFO  03:18:16,545 - #40 {
INFO  03:18:16,547 - #12 return
INFO  03:18:16,547 - #43 5
INFO  03:18:16,549 - #33 ;
INFO  03:18:16,550 - #41 }
INFO  03:18:16,550 - #41 }
INFO  03:18:52,204 - #2 program
INFO  03:18:52,204 - #44 prg
INFO  03:18:52,205 - #40 {
INFO  03:18:52,208 - #44 int
INFO  03:18:52,210 - #44 x
INFO  03:18:52,218 - #36 (
INFO  03:18:52,218 - #44 int
INFO  03:18:52,218 - #44 z
INFO  03:18:52,218 - #34 ,
INFO  03:18:52,222 - #44 int
INFO  03:18:52,222 - #44 p
INFO  03:18:52,222 - #38 [
INFO  03:18:52,222 - #39 ]
INFO  03:18:52,223 - #37 )
INFO  03:18:52,225 - #40 {
INFO  03:18:52,227 - #12 return
INFO  03:18:52,228 - #43 5
INFO  03:18:52,231 - #33 ;
INFO  03:18:52,232 - #41 }
INFO  03:18:52,232 - #41 }
INFO  03:20:04,948 - #2 program
INFO  03:20:04,949 - #44 prg
INFO  03:20:04,949 - #40 {
INFO  03:20:04,950 - #44 int
INFO  03:20:04,951 - #44 x
INFO  03:20:04,951 - #36 (
INFO  03:20:04,952 - #44 int
INFO  03:20:04,952 - #44 z
INFO  03:20:04,952 - #34 ,
INFO  03:20:04,953 - #44 int
INFO  03:20:04,953 - #44 p
INFO  03:20:04,953 - #38 [
INFO  03:20:04,953 - #39 ]
INFO  03:20:04,953 - #37 )
INFO  03:20:04,954 - #40 {
INFO  03:20:04,955 - #12 return
INFO  03:20:04,956 - #43 5
INFO  03:20:04,957 - #33 ;
INFO  03:20:04,957 - #41 }
INFO  03:20:04,957 - #41 }
INFO  03:20:16,759 - #2 program
INFO  03:20:16,760 - #44 prg
INFO  03:20:16,760 - #44 int
INFO  03:20:16,762 - #44 x
INFO  03:20:16,763 - #33 ;
INFO  03:20:16,765 - #40 {
INFO  03:20:16,765 - #44 int
INFO  03:20:16,766 - #44 x
INFO  03:20:16,767 - #36 (
INFO  03:20:16,767 - #44 int
INFO  03:20:16,767 - #44 z
INFO  03:20:16,767 - #34 ,
INFO  03:20:16,767 - #44 int
INFO  03:20:16,767 - #44 p
INFO  03:20:16,768 - #38 [
INFO  03:20:16,768 - #39 ]
INFO  03:20:16,768 - #37 )
INFO  03:20:16,769 - #40 {
INFO  03:20:16,771 - #12 return
INFO  03:20:16,771 - #43 5
INFO  03:20:16,773 - #33 ;
INFO  03:20:16,773 - #41 }
INFO  03:20:16,774 - #41 }
ERROR 03:20:16,798 - Error on line 6: Name x has already been declared.
ERROR 03:20:16,799 - Error on line 8: Return type not compatible with function return type.
INFO  03:21:34,845 - #2 program
INFO  03:21:34,845 - #44 prg
INFO  03:21:34,845 - #44 int
INFO  03:21:34,847 - #44 x
INFO  03:21:34,848 - #33 ;
INFO  03:21:34,850 - #40 {
INFO  03:21:34,850 - #44 int
INFO  03:21:34,851 - #44 x
INFO  03:21:34,851 - #36 (
INFO  03:21:34,851 - #44 int
INFO  03:21:34,851 - #44 z
INFO  03:21:34,851 - #34 ,
INFO  03:21:34,852 - #44 int
INFO  03:21:34,852 - #44 p
INFO  03:21:34,852 - #38 [
INFO  03:21:34,852 - #39 ]
INFO  03:21:34,852 - #37 )
INFO  03:21:34,854 - #40 {
INFO  03:21:34,855 - #12 return
INFO  03:21:34,856 - #43 5
INFO  03:21:34,857 - #33 ;
INFO  03:21:34,857 - #41 }
INFO  03:21:34,858 - #41 }
ERROR 03:21:34,882 - Error on line 6: Name x has already been declared.
INFO  03:21:43,973 - #2 program
INFO  03:21:43,973 - #44 prg
INFO  03:21:43,974 - #40 {
INFO  03:21:43,975 - #44 int
INFO  03:21:43,976 - #44 x
INFO  03:21:43,977 - #36 (
INFO  03:21:43,977 - #44 int
INFO  03:21:43,977 - #44 z
INFO  03:21:43,977 - #34 ,
INFO  03:21:43,978 - #44 int
INFO  03:21:43,978 - #44 p
INFO  03:21:43,979 - #38 [
INFO  03:21:43,979 - #39 ]
INFO  03:21:43,979 - #37 )
INFO  03:21:43,980 - #40 {
INFO  03:21:43,981 - #12 return
INFO  03:21:43,981 - #43 5
INFO  03:21:43,982 - #33 ;
INFO  03:21:43,982 - #41 }
INFO  03:21:43,983 - #41 }
INFO  03:22:01,265 - #2 program
INFO  03:22:01,266 - #44 prg
INFO  03:22:01,266 - #40 {
INFO  03:22:01,267 - #44 int
INFO  03:22:01,267 - #44 x
INFO  03:22:01,268 - #36 (
INFO  03:22:01,269 - #44 int
INFO  03:22:01,269 - #44 z
INFO  03:22:01,269 - #34 ,
INFO  03:22:01,270 - #44 int
INFO  03:22:01,270 - #44 p
INFO  03:22:01,270 - #38 [
INFO  03:22:01,270 - #39 ]
INFO  03:22:01,270 - #37 )
INFO  03:22:01,272 - #40 {
INFO  03:22:01,273 - #44 p
INFO  03:22:01,273 - #30 =
INFO  03:22:01,273 - #43 5
INFO  03:22:01,275 - #33 ;
INFO  03:22:01,275 - #41 }
INFO  03:22:01,275 - #41 }
ERROR 03:22:01,301 - Error on line 7: Types are not compatible.
ERROR 03:22:01,301 - Error on line 5: Missing return statement.
INFO  03:22:13,592 - #2 program
INFO  03:22:13,593 - #44 prg
INFO  03:22:13,593 - #40 {
INFO  03:22:13,594 - #44 int
INFO  03:22:13,595 - #44 x
INFO  03:22:13,596 - #36 (
INFO  03:22:13,596 - #44 int
INFO  03:22:13,597 - #44 z
INFO  03:22:13,597 - #34 ,
INFO  03:22:13,598 - #44 int
INFO  03:22:13,598 - #44 p
INFO  03:22:13,598 - #38 [
INFO  03:22:13,598 - #39 ]
INFO  03:22:13,598 - #37 )
INFO  03:22:13,600 - #40 {
INFO  03:22:13,602 - #44 p
INFO  03:22:13,602 - #38 [
INFO  03:22:13,602 - #43 2
INFO  03:22:13,604 - #39 ]
INFO  03:22:13,604 - #30 =
INFO  03:22:13,604 - #43 5
INFO  03:22:13,605 - #33 ;
INFO  03:22:13,605 - #41 }
INFO  03:22:13,606 - #41 }
ERROR 03:22:13,630 - Error on line 5: Missing return statement.
INFO  03:22:22,538 - #2 program
INFO  03:22:22,539 - #44 prg
INFO  03:22:22,539 - #40 {
INFO  03:22:22,540 - #44 int
INFO  03:22:22,541 - #44 x
INFO  03:22:22,542 - #36 (
INFO  03:22:22,542 - #44 int
INFO  03:22:22,542 - #44 z
INFO  03:22:22,542 - #34 ,
INFO  03:22:22,544 - #44 int
INFO  03:22:22,544 - #44 z
INFO  03:22:22,544 - #38 [
INFO  03:22:22,544 - #39 ]
INFO  03:22:22,544 - #37 )
INFO  03:22:22,545 - #40 {
INFO  03:22:22,547 - #41 }
INFO  03:22:22,547 - #41 }
ERROR 03:22:22,570 - Error on line 5: Name z has already been declared.
ERROR 03:22:22,571 - Error on line 5: Missing return statement.
INFO  03:22:38,578 - #2 program
INFO  03:22:38,579 - #44 prg
INFO  03:22:38,579 - #44 bool
INFO  03:22:38,581 - #44 z
INFO  03:22:38,582 - #33 ;
INFO  03:22:38,584 - #40 {
INFO  03:22:38,584 - #44 int
INFO  03:22:38,585 - #44 x
INFO  03:22:38,585 - #36 (
INFO  03:22:38,586 - #44 int
INFO  03:22:38,586 - #44 z
INFO  03:22:38,586 - #34 ,
INFO  03:22:38,586 - #44 int
INFO  03:22:38,586 - #44 p
INFO  03:22:38,586 - #38 [
INFO  03:22:38,586 - #39 ]
INFO  03:22:38,586 - #37 )
INFO  03:22:38,588 - #40 {
INFO  03:22:38,590 - #12 return
INFO  03:22:38,590 - #43 5
INFO  03:22:38,591 - #33 ;
INFO  03:22:38,592 - #41 }
INFO  03:22:38,593 - #41 }
INFO  03:22:52,631 - #2 program
INFO  03:22:52,632 - #44 prg
INFO  03:22:52,632 - #44 bool
INFO  03:22:52,633 - #44 z
INFO  03:22:52,634 - #33 ;
INFO  03:22:52,636 - #44 bool
INFO  03:22:52,636 - #44 k
INFO  03:22:52,637 - #33 ;
INFO  03:22:52,637 - #40 {
INFO  03:22:52,637 - #44 int
INFO  03:22:52,638 - #44 x
INFO  03:22:52,638 - #36 (
INFO  03:22:52,638 - #44 int
INFO  03:22:52,638 - #44 z
INFO  03:22:52,638 - #34 ,
INFO  03:22:52,639 - #44 int
INFO  03:22:52,639 - #44 p
INFO  03:22:52,639 - #38 [
INFO  03:22:52,639 - #39 ]
INFO  03:22:52,639 - #37 )
INFO  03:22:52,641 - #40 {
INFO  03:22:52,642 - #44 k
INFO  03:22:52,643 - #30 =
INFO  03:22:52,643 - #43 10
INFO  03:22:52,644 - #33 ;
INFO  03:22:52,645 - #12 return
INFO  03:22:52,645 - #43 5
INFO  03:22:52,645 - #33 ;
INFO  03:22:52,646 - #41 }
INFO  03:22:52,646 - #41 }
ERROR 03:22:52,671 - Error on line 8: Types are not compatible.
INFO  03:22:59,439 - #2 program
INFO  03:22:59,439 - #44 prg
INFO  03:22:59,440 - #44 bool
INFO  03:22:59,441 - #44 z
INFO  03:22:59,442 - #33 ;
INFO  03:22:59,444 - #44 bool
INFO  03:22:59,444 - #44 k
INFO  03:22:59,444 - #33 ;
INFO  03:22:59,444 - #40 {
INFO  03:22:59,445 - #44 int
INFO  03:22:59,445 - #44 x
INFO  03:22:59,445 - #36 (
INFO  03:22:59,446 - #44 int
INFO  03:22:59,446 - #44 z
INFO  03:22:59,446 - #34 ,
INFO  03:22:59,446 - #44 int
INFO  03:22:59,447 - #44 p
INFO  03:22:59,447 - #38 [
INFO  03:22:59,447 - #39 ]
INFO  03:22:59,447 - #37 )
INFO  03:22:59,448 - #40 {
INFO  03:22:59,449 - #44 k
INFO  03:22:59,450 - #30 =
INFO  03:22:59,450 - #42 true
INFO  03:22:59,452 - #33 ;
INFO  03:22:59,452 - #12 return
INFO  03:22:59,453 - #43 5
INFO  03:22:59,453 - #33 ;
INFO  03:22:59,453 - #41 }
INFO  03:22:59,453 - #41 }
INFO  03:24:02,328 - #2 program
INFO  03:24:02,329 - #44 prg
INFO  03:24:02,329 - #44 bool
INFO  03:24:02,330 - #44 z
INFO  03:24:02,331 - #33 ;
INFO  03:24:02,333 - #44 bool
INFO  03:24:02,333 - #44 k
INFO  03:24:02,333 - #33 ;
INFO  03:24:02,333 - #40 {
INFO  03:24:02,333 - #44 int
INFO  03:24:02,334 - #44 x
INFO  03:24:02,334 - #36 (
INFO  03:24:02,334 - #44 int
INFO  03:24:02,334 - #44 z
INFO  03:24:02,335 - #34 ,
INFO  03:24:02,335 - #44 int
INFO  03:24:02,335 - #44 p
INFO  03:24:02,335 - #38 [
INFO  03:24:02,335 - #39 ]
INFO  03:24:02,335 - #37 )
INFO  03:24:02,337 - #40 {
INFO  03:24:02,338 - #44 k
INFO  03:24:02,339 - #30 =
INFO  03:24:02,339 - #42 true
INFO  03:24:02,341 - #33 ;
INFO  03:24:02,342 - #12 return
INFO  03:24:02,342 - #43 5
INFO  03:24:02,342 - #33 ;
INFO  03:24:02,342 - #41 }
INFO  03:24:02,343 - #41 }
INFO  03:59:52,687 - #2 program
INFO  03:59:52,688 - #44 prg
INFO  03:59:52,688 - #44 bool
INFO  03:59:52,689 - #44 z
INFO  03:59:52,690 - #33 ;
INFO  03:59:52,691 - #44 bool
INFO  03:59:52,691 - #44 k
INFO  03:59:52,691 - #33 ;
INFO  03:59:52,691 - #40 {
INFO  03:59:52,691 - #44 int
INFO  03:59:52,692 - #44 x
INFO  03:59:52,692 - #36 (
INFO  03:59:52,692 - #44 int
INFO  03:59:52,692 - #44 z
INFO  03:59:52,693 - #34 ,
INFO  03:59:52,693 - #44 int
INFO  03:59:52,693 - #44 p
INFO  03:59:52,693 - #38 [
INFO  03:59:52,693 - #39 ]
INFO  03:59:52,693 - #37 )
INFO  03:59:52,694 - #40 {
INFO  03:59:52,695 - #14 for
INFO  03:59:52,696 - #36 (
INFO  03:59:52,696 - #44 x
INFO  03:59:52,696 - #30 =
INFO  03:59:52,696 - #43 0
INFO  03:59:52,697 - #33 ;
INFO  03:59:52,698 - #44 x
INFO  03:59:52,698 - #26 <
INFO  03:59:52,698 - #43 10
INFO  03:59:52,699 - #33 ;
INFO  03:59:52,701 - #44 x
INFO  03:59:52,701 - #31 ++
INFO  03:59:52,701 - #37 )
INFO  03:59:52,701 - #40 {
INFO  03:59:52,701 - #41 }
INFO  03:59:52,702 - #41 }
INFO  03:59:52,702 - #41 }
ERROR 03:59:52,723 - Error on line 8: Value can be assigned to variable, array element or class field.
ERROR 03:59:52,723 - Error on line 8: Cannot use function names as variables.
ERROR 03:59:52,723 - Error on line 18: Expression types are not compatible.
ERROR 03:59:52,723 - Error on line 8: Designator must be variable, array element or class field.
ERROR 03:59:52,723 - Error on line 6: Missing return statement.
INFO  04:00:21,954 - #2 program
INFO  04:00:21,955 - #44 prg
INFO  04:00:21,955 - #44 bool
INFO  04:00:21,956 - #44 z
INFO  04:00:21,959 - #33 ;
INFO  04:00:21,960 - #44 bool
INFO  04:00:21,961 - #44 k
INFO  04:00:21,961 - #33 ;
INFO  04:00:21,961 - #40 {
INFO  04:00:21,961 - #44 int
INFO  04:00:21,962 - #44 x
INFO  04:00:21,962 - #36 (
INFO  04:00:21,962 - #44 int
INFO  04:00:21,962 - #44 z
INFO  04:00:21,963 - #34 ,
INFO  04:00:21,963 - #44 int
INFO  04:00:21,963 - #44 p
INFO  04:00:21,963 - #38 [
INFO  04:00:21,963 - #39 ]
INFO  04:00:21,964 - #37 )
INFO  04:00:21,965 - #40 {
INFO  04:00:21,967 - #14 for
INFO  04:00:21,967 - #36 (
INFO  04:00:21,967 - #44 int
INFO  04:00:21,968 - #44 i
ERROR 04:00:21,968 - 
Sintaksna greska na liniji 8
INFO  04:00:21,968 - #30 =
INFO  04:00:21,975 - #43 0
INFO  04:00:21,975 - #33 ;
INFO  04:00:21,975 - #44 x
ERROR 04:00:21,975 - Izvrsen oporavak u liniji 8
INFO  04:00:21,976 - #26 <
INFO  04:00:21,978 - #43 10
INFO  04:00:21,979 - #33 ;
INFO  04:00:21,982 - #44 x
INFO  04:00:21,982 - #31 ++
INFO  04:00:21,982 - #37 )
INFO  04:00:21,983 - #40 {
INFO  04:00:21,983 - #41 }
INFO  04:00:21,983 - #41 }
INFO  04:00:21,983 - #41 }
ERROR 04:00:22,002 - Error on line 8: Cannot use function names as variables.
ERROR 04:00:22,003 - Error on line 22: Expression types are not compatible.
ERROR 04:00:22,003 - Error on line 8: Designator must be variable, array element or class field.
ERROR 04:00:22,003 - Error on line 6: Missing return statement.
INFO  04:00:46,358 - #2 program
INFO  04:00:46,358 - #44 prg
INFO  04:00:46,358 - #44 bool
INFO  04:00:46,370 - #44 z
INFO  04:00:46,385 - #33 ;
INFO  04:00:46,396 - #44 bool
INFO  04:00:46,396 - #44 k
INFO  04:00:46,396 - #33 ;
INFO  04:00:46,396 - #40 {
INFO  04:00:46,397 - #44 int
INFO  04:00:46,402 - #44 x
INFO  04:00:46,402 - #36 (
INFO  04:00:46,403 - #44 int
INFO  04:00:46,403 - #44 z
INFO  04:00:46,403 - #34 ,
INFO  04:00:46,403 - #44 int
INFO  04:00:46,403 - #44 p
INFO  04:00:46,403 - #38 [
INFO  04:00:46,403 - #39 ]
INFO  04:00:46,403 - #37 )
INFO  04:00:46,415 - #40 {
INFO  04:00:46,426 - #14 for
INFO  04:00:46,432 - #36 (
INFO  04:00:46,432 - #44 int
INFO  04:00:46,432 - #44 i
ERROR 04:00:46,433 - 
Sintaksna greska na liniji 8
INFO  04:00:46,433 - #30 =
INFO  04:00:46,439 - #43 0
INFO  04:00:46,439 - #33 ;
INFO  04:00:46,439 - #44 i
ERROR 04:00:46,439 - Izvrsen oporavak u liniji 8
INFO  04:00:46,456 - #26 <
INFO  04:00:46,457 - #43 10
INFO  04:00:46,468 - #33 ;
INFO  04:00:46,493 - #44 i
INFO  04:00:46,493 - #31 ++
INFO  04:00:46,493 - #37 )
INFO  04:00:46,493 - #40 {
INFO  04:00:46,493 - #41 }
INFO  04:00:46,493 - #41 }
INFO  04:00:46,494 - #41 }
ERROR 04:00:46,542 - Error on line 8: Name i has not been declared.
ERROR 04:00:46,547 - Error on line 22: Expression types are not compatible.
ERROR 04:00:46,548 - Error on line 8: Name i has not been declared.
ERROR 04:00:46,548 - Error on line 8: Operator ++ must be used on int type designator.
ERROR 04:00:46,548 - Error on line 6: Missing return statement.
INFO  04:01:09,505 - #2 program
INFO  04:01:09,506 - #44 prg
INFO  04:01:09,506 - #44 bool
INFO  04:01:09,507 - #44 z
INFO  04:01:09,509 - #33 ;
INFO  04:01:09,511 - #44 bool
INFO  04:01:09,511 - #44 k
INFO  04:01:09,511 - #33 ;
INFO  04:01:09,512 - #40 {
INFO  04:01:09,512 - #44 int
INFO  04:01:09,512 - #44 x
INFO  04:01:09,513 - #36 (
INFO  04:01:09,513 - #44 int
INFO  04:01:09,513 - #44 z
INFO  04:01:09,513 - #34 ,
INFO  04:01:09,514 - #44 int
INFO  04:01:09,514 - #44 p
INFO  04:01:09,514 - #38 [
INFO  04:01:09,514 - #39 ]
INFO  04:01:09,514 - #37 )
INFO  04:01:09,516 - #40 {
INFO  04:01:09,517 - #44 int
INFO  04:01:09,518 - #44 i
ERROR 04:01:09,518 - 
Sintaksna greska na liniji 8
INFO  04:01:09,518 - #33 ;
INFO  04:01:09,525 - #14 for
ERROR 04:01:09,525 - Izvrsen oporavak u liniji 25
INFO  04:01:09,526 - #36 (
INFO  04:01:09,526 - #44 i
INFO  04:01:09,526 - #30 =
INFO  04:01:09,527 - #43 0
INFO  04:01:09,536 - #33 ;
INFO  04:01:09,536 - #44 i
INFO  04:01:09,536 - #26 <
INFO  04:01:09,537 - #43 10
INFO  04:01:09,538 - #33 ;
INFO  04:01:09,540 - #44 i
INFO  04:01:09,540 - #31 ++
INFO  04:01:09,540 - #37 )
INFO  04:01:09,541 - #40 {
INFO  04:01:09,541 - #41 }
INFO  04:01:09,541 - #41 }
INFO  04:01:09,541 - #41 }
ERROR 04:01:09,557 - Error on line 10: Name i has not been declared.
ERROR 04:01:09,558 - Error on line 10: Types are not compatible.
ERROR 04:01:09,558 - Error on line 10: Name i has not been declared.
ERROR 04:01:09,558 - Error on line 18: Expression types are not compatible.
ERROR 04:01:09,558 - Error on line 10: Name i has not been declared.
ERROR 04:01:09,558 - Error on line 10: Operator ++ must be used on int type designator.
ERROR 04:01:09,558 - Error on line 6: Missing return statement.
INFO  04:01:49,678 - #2 program
INFO  04:01:49,679 - #44 prg
INFO  04:01:49,679 - #44 bool
INFO  04:01:49,680 - #44 z
INFO  04:01:49,681 - #33 ;
INFO  04:01:49,683 - #44 bool
INFO  04:01:49,683 - #44 k
INFO  04:01:49,683 - #33 ;
INFO  04:01:49,683 - #40 {
INFO  04:01:49,683 - #44 int
INFO  04:01:49,684 - #44 x
INFO  04:01:49,685 - #36 (
INFO  04:01:49,685 - #44 int
INFO  04:01:49,685 - #44 z
INFO  04:01:49,685 - #34 ,
INFO  04:01:49,686 - #44 int
INFO  04:01:49,686 - #44 p
INFO  04:01:49,686 - #38 [
INFO  04:01:49,686 - #39 ]
INFO  04:01:49,686 - #37 )
INFO  04:01:49,687 - #44 int
INFO  04:01:49,690 - #44 i
INFO  04:01:49,690 - #33 ;
INFO  04:01:49,690 - #40 {
INFO  04:01:49,690 - #14 for
INFO  04:01:49,691 - #36 (
INFO  04:01:49,691 - #44 i
INFO  04:01:49,691 - #30 =
INFO  04:01:49,691 - #43 0
INFO  04:01:49,693 - #33 ;
INFO  04:01:49,694 - #44 i
INFO  04:01:49,694 - #26 <
INFO  04:01:49,694 - #43 10
INFO  04:01:49,695 - #33 ;
INFO  04:01:49,698 - #44 i
INFO  04:01:49,699 - #31 ++
INFO  04:01:49,699 - #37 )
INFO  04:01:49,699 - #40 {
INFO  04:01:49,699 - #41 }
INFO  04:01:49,699 - #12 return
INFO  04:01:49,700 - #44 i
INFO  04:01:49,700 - #33 ;
INFO  04:01:49,700 - #41 }
INFO  04:01:49,700 - #41 }
INFO  04:02:00,204 - #2 program
INFO  04:02:00,205 - #44 prg
INFO  04:02:00,205 - #44 bool
INFO  04:02:00,206 - #44 z
INFO  04:02:00,208 - #33 ;
INFO  04:02:00,209 - #44 bool
INFO  04:02:00,210 - #44 k
INFO  04:02:00,210 - #33 ;
INFO  04:02:00,210 - #40 {
INFO  04:02:00,210 - #44 int
INFO  04:02:00,211 - #44 x
INFO  04:02:00,211 - #36 (
INFO  04:02:00,211 - #44 int
INFO  04:02:00,211 - #44 z
INFO  04:02:00,211 - #34 ,
INFO  04:02:00,212 - #44 int
INFO  04:02:00,212 - #44 p
INFO  04:02:00,212 - #38 [
INFO  04:02:00,212 - #39 ]
INFO  04:02:00,212 - #37 )
INFO  04:02:00,213 - #44 int
INFO  04:02:00,214 - #44 i
INFO  04:02:00,214 - #33 ;
INFO  04:02:00,214 - #40 {
INFO  04:02:00,214 - #14 for
INFO  04:02:00,215 - #36 (
INFO  04:02:00,215 - #44 i
INFO  04:02:00,215 - #30 =
INFO  04:02:00,215 - #43 0
INFO  04:02:00,216 - #33 ;
INFO  04:02:00,217 - #44 i
INFO  04:02:00,217 - #26 <
INFO  04:02:00,217 - #43 10
INFO  04:02:00,219 - #33 ;
INFO  04:02:00,222 - #44 i
INFO  04:02:00,222 - #31 ++
INFO  04:02:00,222 - #37 )
INFO  04:02:00,222 - #40 {
INFO  04:02:00,222 - #41 }
INFO  04:02:00,222 - #12 return
INFO  04:02:00,223 - #44 i
INFO  04:02:00,223 - #33 ;
INFO  04:02:00,223 - #41 }
INFO  04:02:00,223 - #41 }
INFO  04:04:41,576 - #2 program
INFO  04:04:41,576 - #44 prg
INFO  04:04:41,576 - #44 bool
INFO  04:04:41,577 - #44 z
INFO  04:04:41,578 - #33 ;
INFO  04:04:41,579 - #44 bool
INFO  04:04:41,580 - #44 k
INFO  04:04:41,580 - #33 ;
INFO  04:04:41,580 - #40 {
INFO  04:04:41,580 - #44 int
INFO  04:04:41,581 - #44 x
INFO  04:04:41,581 - #36 (
INFO  04:04:41,581 - #44 int
INFO  04:04:41,581 - #44 z
INFO  04:04:41,581 - #34 ,
INFO  04:04:41,582 - #44 int
INFO  04:04:41,582 - #44 p
INFO  04:04:41,582 - #38 [
INFO  04:04:41,582 - #39 ]
INFO  04:04:41,582 - #37 )
INFO  04:04:41,583 - #44 int
INFO  04:04:41,585 - #44 i
INFO  04:04:41,585 - #33 ;
INFO  04:04:41,585 - #40 {
INFO  04:04:41,585 - #14 for
INFO  04:04:41,586 - #36 (
INFO  04:04:41,586 - #44 i
INFO  04:04:41,586 - #30 =
INFO  04:04:41,587 - #43 0
INFO  04:04:41,588 - #33 ;
INFO  04:04:41,589 - #44 i
INFO  04:04:41,590 - #26 <
INFO  04:04:41,590 - #43 10
INFO  04:04:41,591 - #33 ;
INFO  04:04:41,594 - #44 i
INFO  04:04:41,594 - #31 ++
INFO  04:04:41,594 - #37 )
INFO  04:04:41,594 - #16 continue
INFO  04:04:41,594 - #33 ;
INFO  04:04:41,594 - #12 return
INFO  04:04:41,602 - #44 i
INFO  04:04:41,602 - #33 ;
INFO  04:04:41,602 - #41 }
INFO  04:04:41,602 - #41 }
INFO  04:29:36,729 - #2 program
INFO  04:29:36,730 - #44 prg
INFO  04:29:36,730 - #44 bool
INFO  04:29:36,731 - #44 z
INFO  04:29:36,732 - #33 ;
INFO  04:29:36,733 - #44 bool
INFO  04:29:36,733 - #44 k
INFO  04:29:36,733 - #33 ;
INFO  04:29:36,734 - #40 {
INFO  04:29:36,734 - #44 int
INFO  04:29:36,734 - #44 x
INFO  04:29:36,734 - #36 (
INFO  04:29:36,735 - #44 int
INFO  04:29:36,735 - #44 z
INFO  04:29:36,735 - #34 ,
INFO  04:29:36,735 - #44 int
INFO  04:29:36,735 - #44 p
INFO  04:29:36,735 - #38 [
INFO  04:29:36,735 - #39 ]
INFO  04:29:36,735 - #37 )
INFO  04:29:36,736 - #44 int
INFO  04:29:36,737 - #44 i
INFO  04:29:36,737 - #33 ;
INFO  04:29:36,738 - #40 {
INFO  04:29:36,738 - #14 for
INFO  04:29:36,738 - #36 (
INFO  04:29:36,738 - #44 i
INFO  04:29:36,738 - #30 =
INFO  04:29:36,739 - #43 0
INFO  04:29:36,740 - #33 ;
INFO  04:29:36,741 - #43 5
INFO  04:29:36,741 - #33 ;
INFO  04:29:36,742 - #44 i
INFO  04:29:36,742 - #31 ++
INFO  04:29:36,742 - #37 )
INFO  04:29:36,743 - #16 continue
INFO  04:29:36,743 - #33 ;
INFO  04:29:36,743 - #12 return
INFO  04:29:36,744 - #44 i
INFO  04:29:36,744 - #33 ;
INFO  04:29:36,744 - #41 }
INFO  04:29:36,744 - #41 }
ERROR 04:29:36,770 - Error on line 18: Expression must be bool type.
INFO  04:29:47,745 - #2 program
INFO  04:29:47,745 - #44 prg
INFO  04:29:47,745 - #44 bool
INFO  04:29:47,746 - #44 z
INFO  04:29:47,747 - #33 ;
INFO  04:29:47,748 - #44 bool
INFO  04:29:47,748 - #44 k
INFO  04:29:47,748 - #33 ;
INFO  04:29:47,748 - #40 {
INFO  04:29:47,748 - #44 int
INFO  04:29:47,749 - #44 x
INFO  04:29:47,749 - #36 (
INFO  04:29:47,749 - #44 int
INFO  04:29:47,749 - #44 z
INFO  04:29:47,749 - #34 ,
INFO  04:29:47,749 - #44 int
INFO  04:29:47,750 - #44 p
INFO  04:29:47,750 - #38 [
INFO  04:29:47,750 - #39 ]
INFO  04:29:47,750 - #37 )
INFO  04:29:47,751 - #44 int
INFO  04:29:47,752 - #44 i
INFO  04:29:47,752 - #33 ;
INFO  04:29:47,752 - #40 {
INFO  04:29:47,753 - #14 for
INFO  04:29:47,753 - #36 (
INFO  04:29:47,753 - #44 i
INFO  04:29:47,754 - #30 =
INFO  04:29:47,754 - #43 0
INFO  04:29:47,756 - #33 ;
INFO  04:29:47,756 - #44 i
INFO  04:29:47,757 - #33 ;
INFO  04:29:47,757 - #44 i
INFO  04:29:47,758 - #31 ++
INFO  04:29:47,758 - #37 )
INFO  04:29:47,758 - #16 continue
INFO  04:29:47,759 - #33 ;
INFO  04:29:47,759 - #12 return
INFO  04:29:47,760 - #44 i
INFO  04:29:47,760 - #33 ;
INFO  04:29:47,760 - #41 }
INFO  04:29:47,760 - #41 }
ERROR 04:29:47,788 - Error on line 18: Expression must be bool type.
INFO  04:29:56,752 - #2 program
INFO  04:29:56,753 - #44 prg
INFO  04:29:56,753 - #44 bool
INFO  04:29:56,754 - #44 z
INFO  04:29:56,755 - #33 ;
INFO  04:29:56,756 - #44 bool
INFO  04:29:56,756 - #44 k
INFO  04:29:56,756 - #33 ;
INFO  04:29:56,757 - #40 {
INFO  04:29:56,757 - #44 int
INFO  04:29:56,757 - #44 x
INFO  04:29:56,757 - #36 (
INFO  04:29:56,757 - #44 int
INFO  04:29:56,757 - #44 z
INFO  04:29:56,758 - #34 ,
INFO  04:29:56,758 - #44 int
INFO  04:29:56,758 - #44 p
INFO  04:29:56,758 - #38 [
INFO  04:29:56,758 - #39 ]
INFO  04:29:56,758 - #37 )
INFO  04:29:56,760 - #44 int
INFO  04:29:56,761 - #44 i
INFO  04:29:56,761 - #33 ;
INFO  04:29:56,761 - #40 {
INFO  04:29:56,762 - #14 for
INFO  04:29:56,762 - #36 (
INFO  04:29:56,762 - #44 i
INFO  04:29:56,762 - #30 =
INFO  04:29:56,763 - #43 0
INFO  04:29:56,764 - #33 ;
INFO  04:29:56,765 - #44 i
INFO  04:29:56,766 - #26 <
INFO  04:29:56,766 - #43 10
INFO  04:29:56,767 - #28 &&
INFO  04:29:56,768 - #44 i
INFO  04:29:56,768 - #24 >
INFO  04:29:56,768 - #43 20
INFO  04:29:56,768 - #33 ;
INFO  04:29:56,769 - #44 i
INFO  04:29:56,769 - #31 ++
INFO  04:29:56,769 - #37 )
INFO  04:29:56,769 - #16 continue
INFO  04:29:56,769 - #33 ;
INFO  04:29:56,769 - #12 return
INFO  04:29:56,770 - #44 i
INFO  04:29:56,770 - #33 ;
INFO  04:29:56,771 - #41 }
INFO  04:29:56,771 - #41 }
INFO  04:30:04,544 - #2 program
INFO  04:30:04,544 - #44 prg
INFO  04:30:04,545 - #44 bool
INFO  04:30:04,546 - #44 z
INFO  04:30:04,547 - #33 ;
INFO  04:30:04,548 - #44 bool
INFO  04:30:04,548 - #44 k
INFO  04:30:04,548 - #33 ;
INFO  04:30:04,549 - #40 {
INFO  04:30:04,549 - #44 int
INFO  04:30:04,549 - #44 x
INFO  04:30:04,549 - #36 (
INFO  04:30:04,549 - #44 int
INFO  04:30:04,550 - #44 z
INFO  04:30:04,550 - #34 ,
INFO  04:30:04,550 - #44 int
INFO  04:30:04,550 - #44 p
INFO  04:30:04,550 - #38 [
INFO  04:30:04,550 - #39 ]
INFO  04:30:04,550 - #37 )
INFO  04:30:04,551 - #44 int
INFO  04:30:04,552 - #44 i
INFO  04:30:04,552 - #33 ;
INFO  04:30:04,552 - #40 {
INFO  04:30:04,553 - #14 for
INFO  04:30:04,553 - #36 (
INFO  04:30:04,553 - #44 i
INFO  04:30:04,553 - #30 =
INFO  04:30:04,553 - #43 0
INFO  04:30:04,555 - #33 ;
INFO  04:30:04,556 - #44 k
INFO  04:30:04,556 - #33 ;
INFO  04:30:04,557 - #44 i
INFO  04:30:04,557 - #31 ++
INFO  04:30:04,557 - #37 )
INFO  04:30:04,558 - #16 continue
INFO  04:30:04,558 - #33 ;
INFO  04:30:04,558 - #12 return
INFO  04:30:04,559 - #44 i
INFO  04:30:04,559 - #33 ;
INFO  04:30:04,560 - #41 }
INFO  04:30:04,560 - #41 }
INFO  04:30:15,905 - #2 program
INFO  04:30:15,905 - #44 prg
INFO  04:30:15,905 - #44 bool
INFO  04:30:15,906 - #44 z
INFO  04:30:15,907 - #33 ;
INFO  04:30:15,908 - #44 bool
INFO  04:30:15,909 - #44 k
INFO  04:30:15,909 - #33 ;
INFO  04:30:15,909 - #40 {
INFO  04:30:15,909 - #44 int
INFO  04:30:15,909 - #44 x
INFO  04:30:15,910 - #36 (
INFO  04:30:15,910 - #44 int
INFO  04:30:15,910 - #44 z
INFO  04:30:15,910 - #34 ,
INFO  04:30:15,910 - #44 int
INFO  04:30:15,910 - #44 p
INFO  04:30:15,910 - #38 [
INFO  04:30:15,911 - #39 ]
INFO  04:30:15,911 - #37 )
INFO  04:30:15,912 - #44 int
INFO  04:30:15,913 - #44 i
INFO  04:30:15,913 - #33 ;
INFO  04:30:15,913 - #40 {
INFO  04:30:15,913 - #14 for
INFO  04:30:15,914 - #36 (
INFO  04:30:15,914 - #44 i
INFO  04:30:15,914 - #30 =
INFO  04:30:15,914 - #43 0
INFO  04:30:15,916 - #33 ;
INFO  04:30:15,917 - #44 l
INFO  04:30:15,917 - #33 ;
INFO  04:30:15,918 - #44 i
INFO  04:30:15,918 - #31 ++
INFO  04:30:15,918 - #37 )
INFO  04:30:15,918 - #16 continue
INFO  04:30:15,919 - #33 ;
INFO  04:30:15,919 - #12 return
INFO  04:30:15,920 - #44 i
INFO  04:30:15,920 - #33 ;
INFO  04:30:15,921 - #41 }
INFO  04:30:15,921 - #41 }
ERROR 04:30:15,946 - Error on line 11: Name l has not been declared.
ERROR 04:30:15,946 - Error on line 18: Expression must be bool type.
INFO  04:32:56,794 - #2 program
INFO  04:32:56,794 - #44 prg
INFO  04:32:56,794 - #44 bool
INFO  04:32:56,796 - #44 z
INFO  04:32:56,797 - #33 ;
INFO  04:32:56,798 - #44 bool
INFO  04:32:56,798 - #44 k
INFO  04:32:56,799 - #33 ;
INFO  04:32:56,799 - #40 {
INFO  04:32:56,799 - #44 int
INFO  04:32:56,799 - #44 x
INFO  04:32:56,800 - #36 (
INFO  04:32:56,800 - #44 int
INFO  04:32:56,800 - #44 z
INFO  04:32:56,800 - #34 ,
INFO  04:32:56,800 - #44 int
INFO  04:32:56,800 - #44 p
INFO  04:32:56,800 - #38 [
INFO  04:32:56,800 - #39 ]
INFO  04:32:56,800 - #37 )
INFO  04:32:56,802 - #44 int
INFO  04:32:56,803 - #44 i
INFO  04:32:56,803 - #33 ;
INFO  04:32:56,803 - #40 {
INFO  04:32:56,803 - #14 for
INFO  04:32:56,804 - #36 (
INFO  04:32:56,804 - #44 i
INFO  04:32:56,804 - #30 =
INFO  04:32:56,804 - #43 0
INFO  04:32:56,806 - #33 ;
INFO  04:32:56,807 - #33 ;
INFO  04:32:56,807 - #44 i
INFO  04:32:56,808 - #31 ++
INFO  04:32:56,808 - #37 )
INFO  04:32:56,808 - #16 continue
INFO  04:32:56,808 - #33 ;
INFO  04:32:56,808 - #12 return
INFO  04:32:56,809 - #44 i
INFO  04:32:56,809 - #33 ;
INFO  04:32:56,810 - #41 }
INFO  04:32:56,810 - #41 }
INFO  04:34:33,538 - #2 program
INFO  04:34:33,539 - #44 prg
INFO  04:34:33,539 - #44 bool
INFO  04:34:33,540 - #44 z
INFO  04:34:33,541 - #33 ;
INFO  04:34:33,542 - #44 bool
INFO  04:34:33,542 - #44 k
INFO  04:34:33,542 - #33 ;
INFO  04:34:33,542 - #40 {
INFO  04:34:33,543 - #44 int
INFO  04:34:33,543 - #44 x
INFO  04:34:33,543 - #36 (
INFO  04:34:33,544 - #44 int
INFO  04:34:33,544 - #44 z
INFO  04:34:33,544 - #34 ,
INFO  04:34:33,544 - #44 int
INFO  04:34:33,544 - #44 p
INFO  04:34:33,544 - #38 [
INFO  04:34:33,544 - #39 ]
INFO  04:34:33,544 - #37 )
INFO  04:34:33,546 - #44 int
INFO  04:34:33,547 - #44 i
INFO  04:34:33,547 - #33 ;
INFO  04:34:33,547 - #40 {
INFO  04:34:33,548 - #14 for
INFO  04:34:33,548 - #36 (
INFO  04:34:33,548 - #44 i
INFO  04:34:33,548 - #30 =
INFO  04:34:33,548 - #43 0
INFO  04:34:33,550 - #33 ;
INFO  04:34:33,551 - #33 ;
INFO  04:34:33,551 - #44 i
INFO  04:34:33,551 - #31 ++
INFO  04:34:33,551 - #37 )
INFO  04:34:33,552 - #16 continue
INFO  04:34:33,552 - #33 ;
INFO  04:34:33,552 - #16 continue
INFO  04:34:33,552 - #33 ;
INFO  04:34:33,552 - #12 return
INFO  04:34:33,553 - #44 i
INFO  04:34:33,553 - #33 ;
INFO  04:34:33,553 - #41 }
INFO  04:34:33,553 - #41 }
ERROR 04:34:33,574 - Error on line 0: Continue can only be called inside for loop.
INFO  04:34:41,834 - #2 program
INFO  04:34:41,835 - #44 prg
INFO  04:34:41,835 - #44 bool
INFO  04:34:41,837 - #44 z
INFO  04:34:41,838 - #33 ;
INFO  04:34:41,839 - #44 bool
INFO  04:34:41,840 - #44 k
INFO  04:34:41,840 - #33 ;
INFO  04:34:41,840 - #40 {
INFO  04:34:41,840 - #44 int
INFO  04:34:41,841 - #44 x
INFO  04:34:41,841 - #36 (
INFO  04:34:41,841 - #44 int
INFO  04:34:41,841 - #44 z
INFO  04:34:41,841 - #34 ,
INFO  04:34:41,841 - #44 int
INFO  04:34:41,841 - #44 p
INFO  04:34:41,841 - #38 [
INFO  04:34:41,842 - #39 ]
INFO  04:34:41,842 - #37 )
INFO  04:34:41,843 - #44 int
INFO  04:34:41,845 - #44 i
INFO  04:34:41,845 - #33 ;
INFO  04:34:41,845 - #40 {
INFO  04:34:41,845 - #14 for
INFO  04:34:41,845 - #36 (
INFO  04:34:41,846 - #44 i
INFO  04:34:41,846 - #30 =
INFO  04:34:41,846 - #43 0
INFO  04:34:41,848 - #33 ;
INFO  04:34:41,849 - #33 ;
INFO  04:34:41,849 - #44 i
INFO  04:34:41,850 - #31 ++
INFO  04:34:41,850 - #37 )
INFO  04:34:41,850 - #16 continue
INFO  04:34:41,850 - #33 ;
INFO  04:34:41,850 - #3 break
INFO  04:34:41,851 - #33 ;
INFO  04:34:41,851 - #12 return
INFO  04:34:41,852 - #44 i
INFO  04:34:41,852 - #33 ;
INFO  04:34:41,853 - #41 }
INFO  04:34:41,853 - #41 }
ERROR 04:34:41,877 - Error on line 0: Break can only be called inside for loop.
INFO  04:34:53,236 - #2 program
INFO  04:34:53,236 - #44 prg
INFO  04:34:53,236 - #44 bool
INFO  04:34:53,237 - #44 z
INFO  04:34:53,238 - #33 ;
INFO  04:34:53,240 - #44 bool
INFO  04:34:53,240 - #44 k
INFO  04:34:53,240 - #33 ;
INFO  04:34:53,240 - #40 {
INFO  04:34:53,240 - #44 int
INFO  04:34:53,241 - #44 x
INFO  04:34:53,241 - #36 (
INFO  04:34:53,241 - #44 int
INFO  04:34:53,241 - #44 z
INFO  04:34:53,241 - #34 ,
INFO  04:34:53,241 - #44 int
INFO  04:34:53,242 - #44 p
INFO  04:34:53,242 - #38 [
INFO  04:34:53,242 - #39 ]
INFO  04:34:53,242 - #37 )
INFO  04:34:53,243 - #44 int
INFO  04:34:53,244 - #44 i
INFO  04:34:53,244 - #33 ;
INFO  04:34:53,244 - #40 {
INFO  04:34:53,244 - #14 for
INFO  04:34:53,245 - #36 (
INFO  04:34:53,245 - #44 i
INFO  04:34:53,245 - #30 =
INFO  04:34:53,245 - #43 0
INFO  04:34:53,247 - #33 ;
INFO  04:34:53,248 - #33 ;
INFO  04:34:53,248 - #44 i
INFO  04:34:53,249 - #31 ++
INFO  04:34:53,249 - #37 )
INFO  04:34:53,249 - #40 {
INFO  04:34:53,249 - #16 continue
INFO  04:34:53,249 - #33 ;
INFO  04:34:53,250 - #3 break
INFO  04:34:53,250 - #33 ;
INFO  04:34:53,250 - #41 }
INFO  04:34:53,251 - #12 return
INFO  04:34:53,251 - #44 i
INFO  04:34:53,251 - #33 ;
INFO  04:34:53,252 - #41 }
INFO  04:34:53,252 - #41 }
INFO  04:35:18,640 - #2 program
INFO  04:35:18,641 - #44 prg
INFO  04:35:18,641 - #44 bool
INFO  04:35:18,642 - #44 z
INFO  04:35:18,643 - #33 ;
INFO  04:35:18,644 - #44 bool
INFO  04:35:18,644 - #44 k
INFO  04:35:18,644 - #33 ;
INFO  04:35:18,644 - #40 {
INFO  04:35:18,644 - #44 int
INFO  04:35:18,645 - #44 x
INFO  04:35:18,645 - #36 (
INFO  04:35:18,645 - #44 int
INFO  04:35:18,645 - #44 z
INFO  04:35:18,645 - #34 ,
INFO  04:35:18,646 - #44 int
INFO  04:35:18,646 - #44 p
INFO  04:35:18,646 - #38 [
INFO  04:35:18,646 - #39 ]
INFO  04:35:18,646 - #37 )
INFO  04:35:18,647 - #44 int
INFO  04:35:18,648 - #44 i
INFO  04:35:18,648 - #33 ;
INFO  04:35:18,648 - #40 {
INFO  04:35:18,648 - #14 for
INFO  04:35:18,649 - #36 (
INFO  04:35:18,649 - #44 i
INFO  04:35:18,649 - #30 =
INFO  04:35:18,649 - #43 0
INFO  04:35:18,651 - #33 ;
INFO  04:35:18,651 - #33 ;
INFO  04:35:18,652 - #44 i
INFO  04:35:18,652 - #31 ++
INFO  04:35:18,652 - #37 )
INFO  04:35:18,652 - #40 {
INFO  04:35:18,653 - #14 for
INFO  04:35:18,653 - #36 (
INFO  04:35:18,653 - #44 i
INFO  04:35:18,653 - #30 =
INFO  04:35:18,653 - #43 0
INFO  04:35:18,653 - #33 ;
INFO  04:35:18,653 - #44 i
INFO  04:35:18,654 - #26 <
INFO  04:35:18,654 - #43 5
INFO  04:35:18,655 - #33 ;
INFO  04:35:18,656 - #44 i
INFO  04:35:18,656 - #32 --
INFO  04:35:18,656 - #37 )
INFO  04:35:18,656 - #40 {
INFO  04:35:18,656 - #16 continue
INFO  04:35:18,656 - #33 ;
INFO  04:35:18,656 - #41 }
INFO  04:35:18,657 - #3 break
INFO  04:35:18,657 - #33 ;
INFO  04:35:18,658 - #41 }
INFO  04:35:18,658 - #12 return
INFO  04:35:18,658 - #44 i
INFO  04:35:18,658 - #33 ;
INFO  04:35:18,659 - #41 }
INFO  04:35:18,659 - #41 }
INFO  04:35:25,420 - #2 program
INFO  04:35:25,421 - #44 prg
INFO  04:35:25,421 - #44 bool
INFO  04:35:25,422 - #44 z
INFO  04:35:25,424 - #33 ;
INFO  04:35:25,425 - #44 bool
INFO  04:35:25,426 - #44 k
INFO  04:35:25,426 - #33 ;
INFO  04:35:25,426 - #40 {
INFO  04:35:25,426 - #44 int
INFO  04:35:25,427 - #44 x
INFO  04:35:25,427 - #36 (
INFO  04:35:25,427 - #44 int
INFO  04:35:25,427 - #44 z
INFO  04:35:25,427 - #34 ,
INFO  04:35:25,428 - #44 int
INFO  04:35:25,428 - #44 p
INFO  04:35:25,428 - #38 [
INFO  04:35:25,428 - #39 ]
INFO  04:35:25,428 - #37 )
INFO  04:35:25,430 - #44 int
INFO  04:35:25,432 - #44 i
INFO  04:35:25,432 - #33 ;
INFO  04:35:25,432 - #40 {
INFO  04:35:25,432 - #14 for
INFO  04:35:25,432 - #36 (
INFO  04:35:25,432 - #44 i
INFO  04:35:25,433 - #30 =
INFO  04:35:25,433 - #43 0
INFO  04:35:25,434 - #33 ;
INFO  04:35:25,435 - #33 ;
INFO  04:35:25,435 - #44 i
INFO  04:35:25,436 - #31 ++
INFO  04:35:25,436 - #37 )
INFO  04:35:25,436 - #40 {
INFO  04:35:25,436 - #14 for
INFO  04:35:25,436 - #36 (
INFO  04:35:25,436 - #44 i
INFO  04:35:25,436 - #30 =
INFO  04:35:25,436 - #43 0
INFO  04:35:25,436 - #33 ;
INFO  04:35:25,436 - #44 i
INFO  04:35:25,436 - #26 <
INFO  04:35:25,437 - #43 5
INFO  04:35:25,438 - #33 ;
INFO  04:35:25,439 - #44 i
INFO  04:35:25,439 - #32 --
INFO  04:35:25,439 - #37 )
INFO  04:35:25,439 - #40 {
INFO  04:35:25,439 - #16 continue
INFO  04:35:25,439 - #33 ;
INFO  04:35:25,439 - #41 }
INFO  04:35:25,440 - #3 break
INFO  04:35:25,441 - #33 ;
INFO  04:35:25,441 - #41 }
INFO  04:35:25,441 - #3 break
INFO  04:35:25,441 - #33 ;
INFO  04:35:25,442 - #12 return
INFO  04:35:25,442 - #44 i
INFO  04:35:25,442 - #33 ;
INFO  04:35:25,442 - #41 }
INFO  04:35:25,442 - #41 }
ERROR 04:35:25,471 - Error on line 0: Break can only be called inside for loop.
INFO  04:36:00,348 - #2 program
INFO  04:36:00,348 - #44 prg
INFO  04:36:00,348 - #44 bool
INFO  04:36:00,349 - #44 z
INFO  04:36:00,350 - #33 ;
INFO  04:36:00,351 - #44 bool
INFO  04:36:00,351 - #44 k
INFO  04:36:00,351 - #33 ;
INFO  04:36:00,352 - #40 {
INFO  04:36:00,352 - #44 int
INFO  04:36:00,352 - #44 x
INFO  04:36:00,352 - #36 (
INFO  04:36:00,353 - #44 int
INFO  04:36:00,353 - #44 z
INFO  04:36:00,353 - #34 ,
INFO  04:36:00,353 - #44 int
INFO  04:36:00,353 - #44 p
INFO  04:36:00,353 - #38 [
INFO  04:36:00,353 - #39 ]
INFO  04:36:00,353 - #37 )
INFO  04:36:00,354 - #44 int
INFO  04:36:00,356 - #44 i
INFO  04:36:00,356 - #33 ;
INFO  04:36:00,356 - #40 {
INFO  04:36:00,356 - #8 if
INFO  04:36:00,357 - #36 (
INFO  04:36:00,357 - #43 5
INFO  04:36:00,358 - #37 )
INFO  04:36:00,359 - #40 {
INFO  04:36:00,359 - #41 }
INFO  04:36:00,359 - #12 return
INFO  04:36:00,360 - #44 i
INFO  04:36:00,361 - #33 ;
INFO  04:36:00,361 - #41 }
INFO  04:36:00,361 - #41 }
ERROR 04:36:00,386 - Error on line 11: Expression must be bool type.
INFO  04:36:07,476 - #2 program
INFO  04:36:07,477 - #44 prg
INFO  04:36:07,477 - #44 bool
INFO  04:36:07,478 - #44 z
INFO  04:36:07,479 - #33 ;
INFO  04:36:07,480 - #44 bool
INFO  04:36:07,480 - #44 k
INFO  04:36:07,480 - #33 ;
INFO  04:36:07,481 - #40 {
INFO  04:36:07,481 - #44 int
INFO  04:36:07,481 - #44 x
INFO  04:36:07,482 - #36 (
INFO  04:36:07,482 - #44 int
INFO  04:36:07,482 - #44 z
INFO  04:36:07,482 - #34 ,
INFO  04:36:07,482 - #44 int
INFO  04:36:07,482 - #44 p
INFO  04:36:07,483 - #38 [
INFO  04:36:07,483 - #39 ]
INFO  04:36:07,483 - #37 )
INFO  04:36:07,484 - #44 int
INFO  04:36:07,486 - #44 i
INFO  04:36:07,486 - #33 ;
INFO  04:36:07,486 - #40 {
INFO  04:36:07,486 - #8 if
INFO  04:36:07,487 - #36 (
INFO  04:36:07,487 - #44 k
INFO  04:36:07,488 - #37 )
INFO  04:36:07,489 - #40 {
INFO  04:36:07,489 - #41 }
INFO  04:36:07,489 - #12 return
INFO  04:36:07,490 - #44 i
INFO  04:36:07,490 - #33 ;
INFO  04:36:07,491 - #41 }
INFO  04:36:07,491 - #41 }
INFO  04:36:14,276 - #2 program
INFO  04:36:14,277 - #44 prg
INFO  04:36:14,277 - #44 bool
INFO  04:36:14,278 - #44 z
INFO  04:36:14,279 - #33 ;
INFO  04:36:14,280 - #44 bool
INFO  04:36:14,280 - #44 k
INFO  04:36:14,280 - #33 ;
INFO  04:36:14,280 - #40 {
INFO  04:36:14,280 - #44 int
INFO  04:36:14,281 - #44 x
INFO  04:36:14,281 - #36 (
INFO  04:36:14,282 - #44 int
INFO  04:36:14,282 - #44 z
INFO  04:36:14,282 - #34 ,
INFO  04:36:14,282 - #44 int
INFO  04:36:14,282 - #44 p
INFO  04:36:14,282 - #38 [
INFO  04:36:14,282 - #39 ]
INFO  04:36:14,283 - #37 )
INFO  04:36:14,284 - #44 int
INFO  04:36:14,285 - #44 i
INFO  04:36:14,286 - #33 ;
INFO  04:36:14,286 - #40 {
INFO  04:36:14,286 - #8 if
INFO  04:36:14,287 - #36 (
INFO  04:36:14,287 - #37 )
ERROR 04:36:14,287 - 
Sintaksna greska na liniji 11
INFO  04:36:14,287 - #40 {
INFO  04:36:14,294 - #41 }
INFO  04:36:14,295 - #12 return
INFO  04:36:14,295 - #44 i
INFO  04:36:14,295 - #33 ;
INFO  04:36:14,295 - #41 }
ERROR 04:36:14,295 - Izvrsen oporavak u liniji 4
INFO  04:36:14,296 - #41 }
ERROR 04:36:14,318 - Error on line 6: Missing return statement.
INFO  04:36:26,500 - #2 program
INFO  04:36:26,501 - #44 prg
INFO  04:36:26,501 - #44 bool
INFO  04:36:26,502 - #44 z
INFO  04:36:26,504 - #33 ;
INFO  04:36:26,505 - #44 bool
INFO  04:36:26,505 - #44 k
INFO  04:36:26,505 - #33 ;
INFO  04:36:26,505 - #40 {
INFO  04:36:26,505 - #44 int
INFO  04:36:26,506 - #44 x
INFO  04:36:26,506 - #36 (
INFO  04:36:26,506 - #44 int
INFO  04:36:26,507 - #44 z
INFO  04:36:26,507 - #34 ,
INFO  04:36:26,507 - #44 int
INFO  04:36:26,507 - #44 p
INFO  04:36:26,507 - #38 [
INFO  04:36:26,507 - #39 ]
INFO  04:36:26,507 - #37 )
INFO  04:36:26,509 - #44 int
INFO  04:36:26,511 - #44 i
INFO  04:36:26,511 - #33 ;
INFO  04:36:26,511 - #40 {
INFO  04:36:26,511 - #8 if
INFO  04:36:26,512 - #36 (
INFO  04:36:26,512 - #43 5
INFO  04:36:26,514 - #24 >
INFO  04:36:26,514 - #43 5
INFO  04:36:26,515 - #37 )
INFO  04:36:26,516 - #40 {
INFO  04:36:26,516 - #41 }
INFO  04:36:26,516 - #12 return
INFO  04:36:26,517 - #44 i
INFO  04:36:26,517 - #33 ;
INFO  04:36:26,518 - #41 }
INFO  04:36:26,518 - #41 }
INFO  04:36:35,520 - #2 program
INFO  04:36:35,521 - #44 prg
INFO  04:36:35,521 - #44 bool
INFO  04:36:35,522 - #44 z
INFO  04:36:35,524 - #33 ;
INFO  04:36:35,525 - #44 bool
INFO  04:36:35,526 - #44 k
INFO  04:36:35,526 - #33 ;
INFO  04:36:35,526 - #40 {
INFO  04:36:35,527 - #44 int
INFO  04:36:35,527 - #44 x
INFO  04:36:35,528 - #36 (
INFO  04:36:35,528 - #44 int
INFO  04:36:35,528 - #44 z
INFO  04:36:35,528 - #34 ,
INFO  04:36:35,528 - #44 int
INFO  04:36:35,529 - #44 p
INFO  04:36:35,529 - #38 [
INFO  04:36:35,529 - #39 ]
INFO  04:36:35,529 - #37 )
INFO  04:36:35,531 - #44 int
INFO  04:36:35,533 - #44 i
INFO  04:36:35,533 - #33 ;
INFO  04:36:35,533 - #40 {
INFO  04:36:35,534 - #8 if
INFO  04:36:35,535 - #36 (
INFO  04:36:35,535 - #44 k
INFO  04:36:35,537 - #23 !=
INFO  04:36:35,537 - #44 z
INFO  04:36:35,539 - #37 )
INFO  04:36:35,539 - #40 {
INFO  04:36:35,539 - #41 }
INFO  04:36:35,540 - #12 return
INFO  04:36:35,541 - #44 i
INFO  04:36:35,541 - #33 ;
INFO  04:36:35,541 - #41 }
INFO  04:36:35,541 - #41 }
ERROR 04:36:35,566 - Error on line 11: Expression types are not compatible.
INFO  04:36:58,711 - #2 program
INFO  04:36:58,711 - #44 prg
INFO  04:36:58,711 - #44 bool
INFO  04:36:58,713 - #44 z
INFO  04:36:58,714 - #33 ;
INFO  04:36:58,715 - #44 bool
INFO  04:36:58,716 - #44 k
INFO  04:36:58,716 - #33 ;
INFO  04:36:58,716 - #40 {
INFO  04:36:58,716 - #44 int
INFO  04:36:58,717 - #44 x
INFO  04:36:58,717 - #36 (
INFO  04:36:58,717 - #44 int
INFO  04:36:58,717 - #44 z
INFO  04:36:58,717 - #34 ,
INFO  04:36:58,717 - #44 int
INFO  04:36:58,717 - #44 p
INFO  04:36:58,717 - #38 [
INFO  04:36:58,717 - #39 ]
INFO  04:36:58,718 - #37 )
INFO  04:36:58,719 - #44 int
INFO  04:36:58,721 - #44 i
INFO  04:36:58,721 - #33 ;
INFO  04:36:58,721 - #40 {
INFO  04:36:58,721 - #8 if
INFO  04:36:58,722 - #36 (
INFO  04:36:58,722 - #44 k
INFO  04:36:58,723 - #23 !=
INFO  04:36:58,724 - #42 true
INFO  04:36:58,725 - #37 )
INFO  04:36:58,726 - #40 {
INFO  04:36:58,726 - #41 }
INFO  04:36:58,726 - #12 return
INFO  04:36:58,727 - #44 i
INFO  04:36:58,727 - #33 ;
INFO  04:36:58,727 - #41 }
INFO  04:36:58,728 - #41 }
INFO  04:50:44,429 - #2 program
INFO  04:50:44,430 - #44 prg
INFO  04:50:44,430 - #44 bool
INFO  04:50:44,432 - #44 z
INFO  04:50:44,433 - #33 ;
INFO  04:50:44,435 - #44 bool
INFO  04:50:44,435 - #44 k
INFO  04:50:44,435 - #33 ;
INFO  04:50:44,435 - #40 {
INFO  04:50:44,435 - #13 void
INFO  04:50:44,436 - #44 proba
INFO  04:50:44,437 - #36 (
INFO  04:50:44,437 - #37 )
INFO  04:50:44,438 - #40 {
INFO  04:50:44,439 - #41 }
INFO  04:50:44,439 - #44 int
INFO  04:50:44,439 - #44 x
INFO  04:50:44,440 - #36 (
INFO  04:50:44,440 - #44 int
INFO  04:50:44,440 - #44 z
INFO  04:50:44,440 - #34 ,
INFO  04:50:44,440 - #44 int
INFO  04:50:44,440 - #44 p
INFO  04:50:44,440 - #38 [
INFO  04:50:44,441 - #39 ]
INFO  04:50:44,441 - #37 )
INFO  04:50:44,442 - #44 int
INFO  04:50:44,442 - #44 i
INFO  04:50:44,443 - #33 ;
INFO  04:50:44,443 - #40 {
INFO  04:50:44,443 - #44 k
INFO  04:50:44,443 - #36 (
INFO  04:50:44,445 - #43 5
INFO  04:50:44,446 - #34 ,
INFO  04:50:44,447 - #43 2
INFO  04:50:44,447 - #37 )
INFO  04:50:44,447 - #33 ;
INFO  04:50:44,447 - #41 }
INFO  04:50:44,447 - #41 }
ERROR 04:50:44,469 - Error on line 15: Designator must be function or method type.
ERROR 04:50:44,469 - Error on line 11: Missing return statement.
INFO  04:50:55,096 - #2 program
INFO  04:50:55,097 - #44 prg
INFO  04:50:55,097 - #44 bool
INFO  04:50:55,098 - #44 z
INFO  04:50:55,099 - #33 ;
INFO  04:50:55,100 - #44 bool
INFO  04:50:55,100 - #44 k
INFO  04:50:55,100 - #33 ;
INFO  04:50:55,100 - #40 {
INFO  04:50:55,100 - #13 void
INFO  04:50:55,101 - #44 proba
INFO  04:50:55,101 - #36 (
INFO  04:50:55,101 - #37 )
INFO  04:50:55,102 - #40 {
INFO  04:50:55,103 - #41 }
INFO  04:50:55,103 - #44 int
INFO  04:50:55,104 - #44 x
INFO  04:50:55,104 - #36 (
INFO  04:50:55,104 - #44 int
INFO  04:50:55,104 - #44 z
INFO  04:50:55,104 - #34 ,
INFO  04:50:55,105 - #44 int
INFO  04:50:55,105 - #44 p
INFO  04:50:55,105 - #38 [
INFO  04:50:55,105 - #39 ]
INFO  04:50:55,105 - #37 )
INFO  04:50:55,106 - #44 int
INFO  04:50:55,107 - #44 i
INFO  04:50:55,107 - #33 ;
INFO  04:50:55,107 - #40 {
INFO  04:50:55,107 - #44 k
INFO  04:50:55,107 - #36 (
INFO  04:50:55,108 - #43 5
INFO  04:50:55,109 - #34 ,
INFO  04:50:55,110 - #43 2
INFO  04:50:55,110 - #37 )
INFO  04:50:55,111 - #33 ;
INFO  04:50:55,111 - #12 return
INFO  04:50:55,111 - #44 i
INFO  04:50:55,112 - #33 ;
INFO  04:50:55,112 - #41 }
INFO  04:50:55,112 - #41 }
ERROR 04:50:55,134 - Error on line 15: Designator must be function or method type.
INFO  04:51:02,882 - #2 program
INFO  04:51:02,883 - #44 prg
INFO  04:51:02,883 - #44 bool
INFO  04:51:02,884 - #44 z
INFO  04:51:02,885 - #33 ;
INFO  04:51:02,887 - #44 bool
INFO  04:51:02,887 - #44 k
INFO  04:51:02,887 - #33 ;
INFO  04:51:02,887 - #40 {
INFO  04:51:02,888 - #13 void
INFO  04:51:02,889 - #44 proba
INFO  04:51:02,890 - #36 (
INFO  04:51:02,890 - #37 )
INFO  04:51:02,891 - #40 {
INFO  04:51:02,892 - #41 }
INFO  04:51:02,893 - #44 int
INFO  04:51:02,893 - #44 x
INFO  04:51:02,893 - #36 (
INFO  04:51:02,893 - #44 int
INFO  04:51:02,893 - #44 z
INFO  04:51:02,893 - #34 ,
INFO  04:51:02,894 - #44 int
INFO  04:51:02,894 - #44 p
INFO  04:51:02,894 - #38 [
INFO  04:51:02,894 - #39 ]
INFO  04:51:02,894 - #37 )
INFO  04:51:02,895 - #44 int
INFO  04:51:02,895 - #44 i
INFO  04:51:02,895 - #33 ;
INFO  04:51:02,895 - #40 {
INFO  04:51:02,895 - #44 proba
INFO  04:51:02,895 - #36 (
INFO  04:51:02,896 - #43 5
INFO  04:51:02,897 - #34 ,
INFO  04:51:02,898 - #43 2
INFO  04:51:02,898 - #37 )
INFO  04:51:02,898 - #33 ;
INFO  04:51:02,898 - #12 return
INFO  04:51:02,898 - #44 i
INFO  04:51:02,899 - #33 ;
INFO  04:51:02,899 - #41 }
INFO  04:51:02,899 - #41 }
INFO  04:51:10,603 - #2 program
INFO  04:51:10,603 - #44 prg
INFO  04:51:10,603 - #44 bool
INFO  04:51:10,605 - #44 z
INFO  04:51:10,607 - #33 ;
INFO  04:51:10,608 - #44 bool
INFO  04:51:10,609 - #44 k
INFO  04:51:10,609 - #33 ;
INFO  04:51:10,609 - #40 {
INFO  04:51:10,609 - #13 void
INFO  04:51:10,610 - #44 proba
INFO  04:51:10,610 - #36 (
INFO  04:51:10,610 - #37 )
INFO  04:51:10,611 - #40 {
INFO  04:51:10,612 - #41 }
INFO  04:51:10,612 - #44 int
INFO  04:51:10,613 - #44 x
INFO  04:51:10,613 - #36 (
INFO  04:51:10,613 - #44 int
INFO  04:51:10,613 - #44 z
INFO  04:51:10,613 - #34 ,
INFO  04:51:10,613 - #44 int
INFO  04:51:10,613 - #44 p
INFO  04:51:10,613 - #38 [
INFO  04:51:10,614 - #39 ]
INFO  04:51:10,614 - #37 )
INFO  04:51:10,615 - #44 int
INFO  04:51:10,615 - #44 i
INFO  04:51:10,615 - #33 ;
INFO  04:51:10,616 - #40 {
INFO  04:51:10,616 - #44 x
INFO  04:51:10,616 - #36 (
INFO  04:51:10,617 - #43 5
INFO  04:51:10,619 - #34 ,
INFO  04:51:10,619 - #43 2
INFO  04:51:10,619 - #37 )
INFO  04:51:10,620 - #33 ;
INFO  04:51:10,620 - #12 return
INFO  04:51:10,621 - #44 i
INFO  04:51:10,621 - #33 ;
INFO  04:51:10,621 - #41 }
INFO  04:51:10,621 - #41 }
INFO  04:51:28,877 - #2 program
INFO  04:51:28,877 - #44 prg
INFO  04:51:28,877 - #44 bool
INFO  04:51:28,879 - #44 z
INFO  04:51:28,880 - #33 ;
INFO  04:51:28,881 - #44 bool
INFO  04:51:28,882 - #44 k
INFO  04:51:28,882 - #33 ;
INFO  04:51:28,882 - #40 {
INFO  04:51:28,882 - #13 void
INFO  04:51:28,883 - #44 p
INFO  04:51:28,883 - #36 (
INFO  04:51:28,884 - #37 )
INFO  04:51:28,884 - #40 {
INFO  04:51:28,886 - #41 }
INFO  04:51:28,887 - #44 int
INFO  04:51:28,888 - #44 x
INFO  04:51:28,888 - #36 (
INFO  04:51:28,888 - #44 int
INFO  04:51:28,888 - #44 z
INFO  04:51:28,888 - #34 ,
INFO  04:51:28,888 - #44 int
INFO  04:51:28,888 - #44 p
INFO  04:51:28,889 - #38 [
INFO  04:51:28,890 - #39 ]
INFO  04:51:28,890 - #37 )
INFO  04:51:28,892 - #44 int
INFO  04:51:28,892 - #44 i
INFO  04:51:28,892 - #33 ;
INFO  04:51:28,892 - #40 {
INFO  04:51:28,892 - #44 x
INFO  04:51:28,893 - #36 (
INFO  04:51:28,894 - #43 5
INFO  04:51:28,895 - #34 ,
INFO  04:51:28,896 - #43 2
INFO  04:51:28,896 - #37 )
INFO  04:51:28,897 - #33 ;
INFO  04:51:28,897 - #12 return
INFO  04:51:28,897 - #44 i
INFO  04:51:28,898 - #33 ;
INFO  04:51:28,898 - #41 }
INFO  04:51:28,898 - #41 }
INFO  04:51:36,618 - #2 program
INFO  04:51:36,618 - #44 prg
INFO  04:51:36,619 - #44 bool
INFO  04:51:36,620 - #44 z
INFO  04:51:36,621 - #33 ;
INFO  04:51:36,622 - #44 bool
INFO  04:51:36,622 - #44 k
INFO  04:51:36,623 - #33 ;
INFO  04:51:36,623 - #40 {
INFO  04:51:36,623 - #13 void
INFO  04:51:36,624 - #44 p
INFO  04:51:36,624 - #36 (
INFO  04:51:36,625 - #37 )
INFO  04:51:36,625 - #40 {
INFO  04:51:36,627 - #41 }
INFO  04:51:36,627 - #44 int
INFO  04:51:36,628 - #44 x
INFO  04:51:36,628 - #36 (
INFO  04:51:36,628 - #44 int
INFO  04:51:36,628 - #44 z
INFO  04:51:36,628 - #34 ,
INFO  04:51:36,628 - #44 int
INFO  04:51:36,628 - #44 p
INFO  04:51:36,628 - #38 [
INFO  04:51:36,629 - #39 ]
INFO  04:51:36,629 - #37 )
INFO  04:51:36,630 - #44 int
INFO  04:51:36,630 - #44 i
INFO  04:51:36,630 - #33 ;
INFO  04:51:36,630 - #40 {
INFO  04:51:36,631 - #44 p
INFO  04:51:36,631 - #36 (
INFO  04:51:36,631 - #43 5
INFO  04:51:36,632 - #34 ,
INFO  04:51:36,633 - #43 2
INFO  04:51:36,633 - #37 )
INFO  04:51:36,633 - #33 ;
INFO  04:51:36,634 - #12 return
INFO  04:51:36,634 - #44 i
INFO  04:51:36,634 - #33 ;
INFO  04:51:36,634 - #41 }
INFO  04:51:36,634 - #41 }
ERROR 04:51:36,658 - Error on line 15: Designator must be function or method type.
INFO  04:54:52,969 - #2 program
INFO  04:54:52,970 - #44 prg
INFO  04:54:52,970 - #44 bool
INFO  04:54:52,971 - #44 z
INFO  04:54:52,973 - #33 ;
INFO  04:54:52,974 - #44 bool
INFO  04:54:52,974 - #44 k
INFO  04:54:52,974 - #33 ;
INFO  04:54:52,975 - #40 {
INFO  04:54:52,975 - #13 void
INFO  04:54:52,975 - #44 p
INFO  04:54:52,976 - #36 (
INFO  04:54:52,976 - #37 )
INFO  04:54:52,977 - #40 {
INFO  04:54:52,978 - #41 }
INFO  04:54:52,979 - #44 int
INFO  04:54:52,979 - #44 x
INFO  04:54:52,980 - #36 (
INFO  04:54:52,980 - #44 int
INFO  04:54:52,980 - #44 z
INFO  04:54:52,980 - #34 ,
INFO  04:54:52,980 - #44 int
INFO  04:54:52,980 - #44 p
INFO  04:54:52,980 - #38 [
INFO  04:54:52,981 - #39 ]
INFO  04:54:52,981 - #37 )
INFO  04:54:52,982 - #44 int
INFO  04:54:52,982 - #44 i
INFO  04:54:52,982 - #33 ;
INFO  04:54:52,983 - #40 {
INFO  04:54:52,983 - #44 p
INFO  04:54:52,983 - #36 (
INFO  04:54:52,984 - #43 5
INFO  04:54:52,985 - #34 ,
INFO  04:54:52,986 - #43 2
INFO  04:54:52,986 - #37 )
INFO  04:54:52,986 - #33 ;
INFO  04:54:52,987 - #12 return
INFO  04:54:52,987 - #44 i
INFO  04:54:52,987 - #33 ;
INFO  04:54:52,988 - #41 }
INFO  04:54:52,988 - #41 }
ERROR 04:54:53,011 - Error on line 15: Designator must be function or method type.
INFO  05:06:44,482 - #2 program
INFO  05:06:44,483 - #44 prg
INFO  05:06:44,483 - #44 bool
INFO  05:06:44,485 - #44 z
INFO  05:06:44,486 - #33 ;
INFO  05:06:44,488 - #44 bool
INFO  05:06:44,488 - #44 k
INFO  05:06:44,488 - #33 ;
INFO  05:06:44,489 - #40 {
INFO  05:06:44,489 - #13 void
INFO  05:06:44,490 - #44 p
INFO  05:06:44,490 - #36 (
INFO  05:06:44,491 - #37 )
INFO  05:06:44,491 - #40 {
INFO  05:06:44,493 - #41 }
INFO  05:06:44,494 - #44 int
INFO  05:06:44,494 - #44 x
INFO  05:06:44,495 - #36 (
INFO  05:06:44,495 - #44 int
INFO  05:06:44,495 - #44 z
INFO  05:06:44,495 - #34 ,
INFO  05:06:44,495 - #44 int
INFO  05:06:44,495 - #44 p
INFO  05:06:44,496 - #38 [
INFO  05:06:44,496 - #39 ]
INFO  05:06:44,496 - #37 )
INFO  05:06:44,497 - #44 int
INFO  05:06:44,498 - #44 i
INFO  05:06:44,498 - #33 ;
INFO  05:06:44,498 - #40 {
INFO  05:06:44,498 - #44 p
INFO  05:06:44,498 - #36 (
INFO  05:06:44,499 - #43 5
INFO  05:06:44,500 - #34 ,
INFO  05:06:44,501 - #43 2
INFO  05:06:44,501 - #37 )
INFO  05:06:44,501 - #33 ;
INFO  05:06:44,501 - #12 return
INFO  05:06:44,501 - #44 i
INFO  05:06:44,502 - #33 ;
INFO  05:06:44,502 - #41 }
INFO  05:06:44,502 - #41 }
ERROR 05:06:44,525 - Error on line 15: Designator must be function or method type.
ERROR 05:06:44,526 - Error on line 9: More actual parameters than expected.
ERROR 05:06:44,526 - Error on line 11: More actual parameters than expected.
ERROR 05:06:44,526 - Error on line 15: Not enough parameters for function call.
INFO  05:07:26,206 - #2 program
INFO  05:07:26,207 - #44 prg
INFO  05:07:26,207 - #44 bool
INFO  05:07:26,209 - #44 z
INFO  05:07:26,210 - #33 ;
INFO  05:07:26,212 - #44 bool
INFO  05:07:26,212 - #44 k
INFO  05:07:26,212 - #33 ;
INFO  05:07:26,212 - #40 {
INFO  05:07:26,212 - #13 void
INFO  05:07:26,214 - #44 proba
INFO  05:07:26,214 - #36 (
INFO  05:07:26,215 - #37 )
INFO  05:07:26,215 - #40 {
INFO  05:07:26,217 - #41 }
INFO  05:07:26,218 - #44 int
INFO  05:07:26,218 - #44 x
INFO  05:07:26,219 - #36 (
INFO  05:07:26,219 - #44 int
INFO  05:07:26,219 - #44 z
INFO  05:07:26,219 - #34 ,
INFO  05:07:26,219 - #44 int
INFO  05:07:26,219 - #44 p
INFO  05:07:26,220 - #38 [
INFO  05:07:26,220 - #39 ]
INFO  05:07:26,220 - #37 )
INFO  05:07:26,221 - #44 int
INFO  05:07:26,222 - #44 i
INFO  05:07:26,222 - #33 ;
INFO  05:07:26,222 - #40 {
INFO  05:07:26,222 - #44 proba
INFO  05:07:26,222 - #36 (
INFO  05:07:26,223 - #37 )
INFO  05:07:26,224 - #33 ;
INFO  05:07:26,224 - #12 return
INFO  05:07:26,225 - #44 i
INFO  05:07:26,226 - #33 ;
INFO  05:07:26,227 - #41 }
INFO  05:07:26,227 - #41 }
INFO  05:07:34,338 - #2 program
INFO  05:07:34,339 - #44 prg
INFO  05:07:34,339 - #44 bool
INFO  05:07:34,340 - #44 z
INFO  05:07:34,341 - #33 ;
INFO  05:07:34,342 - #44 bool
INFO  05:07:34,343 - #44 k
INFO  05:07:34,343 - #33 ;
INFO  05:07:34,343 - #40 {
INFO  05:07:34,343 - #13 void
INFO  05:07:34,344 - #44 proba
INFO  05:07:34,345 - #36 (
INFO  05:07:34,345 - #37 )
INFO  05:07:34,346 - #40 {
INFO  05:07:34,347 - #41 }
INFO  05:07:34,348 - #44 int
INFO  05:07:34,348 - #44 x
INFO  05:07:34,348 - #36 (
INFO  05:07:34,348 - #44 int
INFO  05:07:34,348 - #44 z
INFO  05:07:34,349 - #34 ,
INFO  05:07:34,349 - #44 int
INFO  05:07:34,349 - #44 p
INFO  05:07:34,349 - #38 [
INFO  05:07:34,349 - #39 ]
INFO  05:07:34,349 - #37 )
INFO  05:07:34,351 - #44 int
INFO  05:07:34,351 - #44 i
INFO  05:07:34,351 - #33 ;
INFO  05:07:34,351 - #40 {
INFO  05:07:34,352 - #44 proba
INFO  05:07:34,352 - #36 (
INFO  05:07:34,352 - #44 i
INFO  05:07:34,354 - #37 )
INFO  05:07:34,355 - #33 ;
INFO  05:07:34,355 - #12 return
INFO  05:07:34,356 - #44 i
INFO  05:07:34,356 - #33 ;
INFO  05:07:34,356 - #41 }
INFO  05:07:34,356 - #41 }
ERROR 05:07:34,381 - Error on line 13: More actual parameters than expected.
ERROR 05:07:34,381 - Error on line 15: Not enough parameters for function call.
INFO  05:08:45,083 - #2 program
INFO  05:08:45,084 - #44 prg
INFO  05:08:45,084 - #44 bool
INFO  05:08:45,085 - #44 z
INFO  05:08:45,086 - #33 ;
INFO  05:08:45,088 - #44 bool
INFO  05:08:45,088 - #44 k
INFO  05:08:45,088 - #33 ;
INFO  05:08:45,089 - #40 {
INFO  05:08:45,089 - #13 void
INFO  05:08:45,089 - #44 proba
INFO  05:08:45,090 - #36 (
INFO  05:08:45,090 - #37 )
INFO  05:08:45,090 - #40 {
INFO  05:08:45,091 - #41 }
INFO  05:08:45,092 - #44 int
INFO  05:08:45,092 - #44 x
INFO  05:08:45,092 - #36 (
INFO  05:08:45,092 - #44 int
INFO  05:08:45,092 - #44 z
INFO  05:08:45,092 - #34 ,
INFO  05:08:45,093 - #44 int
INFO  05:08:45,093 - #44 p
INFO  05:08:45,093 - #38 [
INFO  05:08:45,093 - #39 ]
INFO  05:08:45,093 - #37 )
INFO  05:08:45,094 - #44 int
INFO  05:08:45,094 - #44 i
INFO  05:08:45,094 - #33 ;
INFO  05:08:45,094 - #40 {
INFO  05:08:45,094 - #44 proba
INFO  05:08:45,095 - #36 (
INFO  05:08:45,095 - #44 i
INFO  05:08:45,096 - #37 )
INFO  05:08:45,097 - #33 ;
INFO  05:08:45,097 - #12 return
INFO  05:08:45,097 - #44 i
INFO  05:08:45,097 - #33 ;
INFO  05:08:45,097 - #41 }
INFO  05:08:45,097 - #41 }
ERROR 05:08:45,119 - Error on line 13: More actual parameters than formal parameters.
INFO  05:09:11,679 - #2 program
INFO  05:09:11,680 - #44 prg
INFO  05:09:11,680 - #44 bool
INFO  05:09:11,681 - #44 z
INFO  05:09:11,683 - #33 ;
INFO  05:09:11,684 - #44 bool
INFO  05:09:11,684 - #44 k
INFO  05:09:11,685 - #33 ;
INFO  05:09:11,685 - #40 {
INFO  05:09:11,685 - #13 void
INFO  05:09:11,685 - #44 proba
INFO  05:09:11,686 - #36 (
INFO  05:09:11,686 - #44 bool
INFO  05:09:11,686 - #44 x
INFO  05:09:11,686 - #34 ,
INFO  05:09:11,687 - #44 int
INFO  05:09:11,687 - #44 y
INFO  05:09:11,687 - #38 [
INFO  05:09:11,687 - #39 ]
INFO  05:09:11,687 - #34 ,
INFO  05:09:11,688 - #44 char
INFO  05:09:11,688 - #44 z
INFO  05:09:11,688 - #37 )
INFO  05:09:11,689 - #40 {
INFO  05:09:11,690 - #41 }
INFO  05:09:11,691 - #44 int
INFO  05:09:11,691 - #44 x
INFO  05:09:11,691 - #36 (
INFO  05:09:11,691 - #44 int
INFO  05:09:11,691 - #44 z
INFO  05:09:11,691 - #34 ,
INFO  05:09:11,691 - #44 int
INFO  05:09:11,691 - #44 p
INFO  05:09:11,692 - #38 [
INFO  05:09:11,692 - #39 ]
INFO  05:09:11,692 - #37 )
INFO  05:09:11,692 - #44 int
INFO  05:09:11,692 - #44 i
INFO  05:09:11,692 - #33 ;
INFO  05:09:11,692 - #40 {
INFO  05:09:11,692 - #44 proba
INFO  05:09:11,692 - #36 (
INFO  05:09:11,693 - #44 i
INFO  05:09:11,694 - #37 )
INFO  05:09:11,695 - #33 ;
INFO  05:09:11,695 - #12 return
INFO  05:09:11,695 - #44 i
INFO  05:09:11,695 - #33 ;
INFO  05:09:11,695 - #41 }
INFO  05:09:11,696 - #41 }
ERROR 05:09:11,720 - Error on line 13: Type mismatch in function call for parameter x.
ERROR 05:09:11,720 - Error on line 15: Not enough actual parameters.
INFO  05:09:25,623 - #2 program
INFO  05:09:25,623 - #44 prg
INFO  05:09:25,623 - #44 bool
INFO  05:09:25,624 - #44 z
INFO  05:09:25,625 - #33 ;
INFO  05:09:25,626 - #44 bool
INFO  05:09:25,627 - #44 k
INFO  05:09:25,627 - #33 ;
INFO  05:09:25,627 - #40 {
INFO  05:09:25,627 - #13 void
INFO  05:09:25,628 - #44 proba
INFO  05:09:25,629 - #36 (
INFO  05:09:25,629 - #44 bool
INFO  05:09:25,629 - #44 x
INFO  05:09:25,629 - #34 ,
INFO  05:09:25,629 - #44 int
INFO  05:09:25,629 - #44 y
INFO  05:09:25,630 - #38 [
INFO  05:09:25,630 - #39 ]
INFO  05:09:25,630 - #34 ,
INFO  05:09:25,630 - #44 char
INFO  05:09:25,630 - #44 z
INFO  05:09:25,631 - #37 )
INFO  05:09:25,631 - #40 {
INFO  05:09:25,632 - #41 }
INFO  05:09:25,633 - #44 int
INFO  05:09:25,633 - #44 x
INFO  05:09:25,633 - #36 (
INFO  05:09:25,633 - #44 int
INFO  05:09:25,633 - #44 z
INFO  05:09:25,634 - #34 ,
INFO  05:09:25,634 - #44 int
INFO  05:09:25,634 - #44 p
INFO  05:09:25,634 - #38 [
INFO  05:09:25,634 - #39 ]
INFO  05:09:25,634 - #37 )
INFO  05:09:25,634 - #44 int
INFO  05:09:25,634 - #44 i
INFO  05:09:25,634 - #33 ;
INFO  05:09:25,634 - #40 {
INFO  05:09:25,635 - #44 proba
INFO  05:09:25,635 - #36 (
INFO  05:09:25,635 - #44 i
INFO  05:09:25,636 - #34 ,
INFO  05:09:25,637 - #44 k
INFO  05:09:25,637 - #34 ,
INFO  05:09:25,637 - #44 k
INFO  05:09:25,637 - #37 )
INFO  05:09:25,637 - #33 ;
INFO  05:09:25,637 - #12 return
INFO  05:09:25,638 - #44 i
INFO  05:09:25,638 - #33 ;
INFO  05:09:25,638 - #41 }
INFO  05:09:25,638 - #41 }
ERROR 05:09:25,665 - Error on line 13: Type mismatch in function call for parameter x.
ERROR 05:09:25,665 - Error on line 15: Type mismatch in function call for parameter y.
ERROR 05:09:25,665 - Error on line 18: Type mismatch in function call for parameter z.
INFO  05:09:32,942 - #2 program
INFO  05:09:32,942 - #44 prg
INFO  05:09:32,942 - #44 bool
INFO  05:09:32,944 - #44 z
INFO  05:09:32,945 - #33 ;
INFO  05:09:32,947 - #44 bool
INFO  05:09:32,947 - #44 k
INFO  05:09:32,947 - #33 ;
INFO  05:09:32,948 - #40 {
INFO  05:09:32,948 - #13 void
INFO  05:09:32,948 - #44 proba
INFO  05:09:32,949 - #36 (
INFO  05:09:32,949 - #44 bool
INFO  05:09:32,949 - #44 x
INFO  05:09:32,949 - #34 ,
INFO  05:09:32,950 - #44 int
INFO  05:09:32,950 - #44 y
INFO  05:09:32,950 - #38 [
INFO  05:09:32,950 - #39 ]
INFO  05:09:32,950 - #34 ,
INFO  05:09:32,951 - #44 char
INFO  05:09:32,951 - #44 z
INFO  05:09:32,951 - #37 )
INFO  05:09:32,952 - #40 {
INFO  05:09:32,953 - #41 }
INFO  05:09:32,955 - #44 int
INFO  05:09:32,956 - #44 x
INFO  05:09:32,956 - #36 (
INFO  05:09:32,956 - #44 int
INFO  05:09:32,956 - #44 z
INFO  05:09:32,956 - #34 ,
INFO  05:09:32,956 - #44 int
INFO  05:09:32,956 - #44 p
INFO  05:09:32,956 - #38 [
INFO  05:09:32,956 - #39 ]
INFO  05:09:32,956 - #37 )
INFO  05:09:32,957 - #44 int
INFO  05:09:32,957 - #44 i
INFO  05:09:32,957 - #33 ;
INFO  05:09:32,957 - #40 {
INFO  05:09:32,957 - #44 proba
INFO  05:09:32,957 - #36 (
INFO  05:09:32,958 - #44 i
INFO  05:09:32,959 - #34 ,
INFO  05:09:32,960 - #44 k
INFO  05:09:32,960 - #34 ,
INFO  05:09:32,960 - #44 k
INFO  05:09:32,960 - #34 ,
INFO  05:09:32,960 - #44 k
INFO  05:09:32,960 - #37 )
INFO  05:09:32,961 - #33 ;
INFO  05:09:32,961 - #12 return
INFO  05:09:32,961 - #44 i
INFO  05:09:32,961 - #33 ;
INFO  05:09:32,961 - #41 }
INFO  05:09:32,962 - #41 }
ERROR 05:09:32,984 - Error on line 13: Type mismatch in function call for parameter x.
ERROR 05:09:32,984 - Error on line 15: Type mismatch in function call for parameter y.
ERROR 05:09:32,985 - Error on line 18: Type mismatch in function call for parameter z.
ERROR 05:09:32,985 - Error on line 21: Type mismatch in function call for parameter z.
INFO  05:10:41,645 - #2 program
INFO  05:10:41,646 - #44 prg
INFO  05:10:41,646 - #44 bool
INFO  05:10:41,647 - #44 z
INFO  05:10:41,648 - #33 ;
INFO  05:10:41,649 - #44 bool
INFO  05:10:41,650 - #44 k
INFO  05:10:41,650 - #33 ;
INFO  05:10:41,650 - #40 {
INFO  05:10:41,650 - #13 void
INFO  05:10:41,651 - #44 proba
INFO  05:10:41,651 - #36 (
INFO  05:10:41,651 - #44 bool
INFO  05:10:41,651 - #44 x
INFO  05:10:41,652 - #34 ,
INFO  05:10:41,652 - #44 int
INFO  05:10:41,652 - #44 y
INFO  05:10:41,652 - #38 [
INFO  05:10:41,652 - #39 ]
INFO  05:10:41,652 - #34 ,
INFO  05:10:41,653 - #44 char
INFO  05:10:41,653 - #44 z
INFO  05:10:41,653 - #37 )
INFO  05:10:41,654 - #40 {
INFO  05:10:41,655 - #41 }
INFO  05:10:41,656 - #44 int
INFO  05:10:41,656 - #44 x
INFO  05:10:41,657 - #36 (
INFO  05:10:41,657 - #44 int
INFO  05:10:41,657 - #44 z
INFO  05:10:41,657 - #34 ,
INFO  05:10:41,657 - #44 int
INFO  05:10:41,657 - #44 p
INFO  05:10:41,657 - #38 [
INFO  05:10:41,657 - #39 ]
INFO  05:10:41,657 - #37 )
INFO  05:10:41,657 - #44 int
INFO  05:10:41,657 - #44 i
INFO  05:10:41,657 - #33 ;
INFO  05:10:41,658 - #40 {
INFO  05:10:41,658 - #44 proba
INFO  05:10:41,658 - #36 (
INFO  05:10:41,659 - #44 i
INFO  05:10:41,659 - #34 ,
INFO  05:10:41,660 - #44 k
INFO  05:10:41,660 - #34 ,
INFO  05:10:41,660 - #44 k
INFO  05:10:41,660 - #34 ,
INFO  05:10:41,660 - #44 k
INFO  05:10:41,660 - #37 )
INFO  05:10:41,661 - #33 ;
INFO  05:10:41,661 - #12 return
INFO  05:10:41,661 - #44 i
INFO  05:10:41,661 - #33 ;
INFO  05:10:41,662 - #41 }
INFO  05:10:41,662 - #41 }
ERROR 05:10:41,688 - Error on line 13: Type mismatch in function call for parameter x.
ERROR 05:10:41,688 - Error on line 15: Type mismatch in function call for parameter y.
ERROR 05:10:41,688 - Error on line 18: Type mismatch in function call for parameter z.
ERROR 05:10:41,688 - Error on line 21: Type mismatch in function call for parameter z.
INFO  05:13:13,962 - #2 program
INFO  05:13:13,963 - #44 prg
INFO  05:13:13,963 - #44 bool
INFO  05:13:13,965 - #44 z
INFO  05:13:13,966 - #33 ;
INFO  05:13:13,967 - #44 bool
INFO  05:13:13,968 - #44 k
INFO  05:13:13,968 - #33 ;
INFO  05:13:13,968 - #40 {
INFO  05:13:13,968 - #13 void
INFO  05:13:13,971 - #44 proba
INFO  05:13:13,972 - #36 (
INFO  05:13:13,973 - #44 bool
INFO  05:13:13,974 - #44 x
INFO  05:13:13,974 - #34 ,
INFO  05:13:13,974 - #44 int
INFO  05:13:13,974 - #44 y
INFO  05:13:13,974 - #38 [
INFO  05:13:13,975 - #39 ]
INFO  05:13:13,975 - #34 ,
INFO  05:13:13,976 - #44 char
INFO  05:13:13,976 - #44 z
INFO  05:13:13,976 - #37 )
INFO  05:13:13,977 - #40 {
INFO  05:13:13,979 - #41 }
INFO  05:13:13,980 - #44 int
INFO  05:13:13,981 - #44 x
INFO  05:13:13,981 - #36 (
INFO  05:13:13,981 - #44 int
INFO  05:13:13,981 - #44 z
INFO  05:13:13,981 - #34 ,
INFO  05:13:13,982 - #44 int
INFO  05:13:13,982 - #44 p
INFO  05:13:13,982 - #38 [
INFO  05:13:13,982 - #39 ]
INFO  05:13:13,982 - #37 )
INFO  05:13:13,982 - #44 int
INFO  05:13:13,982 - #44 i
INFO  05:13:13,982 - #33 ;
INFO  05:13:13,983 - #40 {
INFO  05:13:13,983 - #44 proba
INFO  05:13:13,983 - #36 (
INFO  05:13:13,984 - #44 i
INFO  05:13:13,985 - #34 ,
INFO  05:13:13,986 - #44 k
INFO  05:13:13,986 - #34 ,
INFO  05:13:13,987 - #44 k
INFO  05:13:13,987 - #34 ,
INFO  05:13:13,987 - #44 k
INFO  05:13:13,987 - #37 )
INFO  05:13:13,988 - #33 ;
INFO  05:13:13,988 - #12 return
INFO  05:13:13,988 - #44 i
INFO  05:13:13,988 - #33 ;
INFO  05:13:13,989 - #41 }
INFO  05:13:13,989 - #41 }
ERROR 05:13:14,018 - Error on line 13: Type mismatch in function call for parameter x.
ERROR 05:13:14,018 - Error on line 15: Type mismatch in function call for parameter y.
ERROR 05:13:14,019 - Error on line 18: Type mismatch in function call for parameter z.
ERROR 05:13:14,019 - Error on line 21: More actual parameters than formal parameters.
INFO  05:13:24,781 - #2 program
INFO  05:13:24,782 - #44 prg
INFO  05:13:24,782 - #44 bool
INFO  05:13:24,783 - #44 z
INFO  05:13:24,785 - #33 ;
INFO  05:13:24,786 - #44 bool
INFO  05:13:24,786 - #44 k
INFO  05:13:24,787 - #33 ;
INFO  05:13:24,787 - #40 {
INFO  05:13:24,787 - #13 void
INFO  05:13:24,787 - #44 proba
INFO  05:13:24,788 - #36 (
INFO  05:13:24,788 - #44 bool
INFO  05:13:24,788 - #44 x
INFO  05:13:24,788 - #34 ,
INFO  05:13:24,788 - #44 int
INFO  05:13:24,788 - #44 y
INFO  05:13:24,788 - #38 [
INFO  05:13:24,789 - #39 ]
INFO  05:13:24,789 - #34 ,
INFO  05:13:24,789 - #44 char
INFO  05:13:24,789 - #44 z
INFO  05:13:24,789 - #37 )
INFO  05:13:24,790 - #40 {
INFO  05:13:24,791 - #41 }
INFO  05:13:24,791 - #44 int
INFO  05:13:24,792 - #44 x
INFO  05:13:24,792 - #36 (
INFO  05:13:24,792 - #44 int
INFO  05:13:24,792 - #44 z
INFO  05:13:24,792 - #34 ,
INFO  05:13:24,792 - #44 int
INFO  05:13:24,792 - #44 p
INFO  05:13:24,792 - #38 [
INFO  05:13:24,792 - #39 ]
INFO  05:13:24,792 - #37 )
INFO  05:13:24,792 - #44 int
INFO  05:13:24,792 - #44 i
INFO  05:13:24,792 - #33 ;
INFO  05:13:24,792 - #40 {
INFO  05:13:24,793 - #44 proba
INFO  05:13:24,793 - #36 (
INFO  05:13:24,793 - #44 i
INFO  05:13:24,794 - #34 ,
INFO  05:13:24,795 - #44 k
INFO  05:13:24,795 - #37 )
INFO  05:13:24,795 - #33 ;
INFO  05:13:24,796 - #12 return
INFO  05:13:24,796 - #44 i
INFO  05:13:24,796 - #33 ;
INFO  05:13:24,796 - #41 }
INFO  05:13:24,796 - #41 }
ERROR 05:13:24,818 - Error on line 13: Type mismatch in function call for parameter x.
ERROR 05:13:24,818 - Error on line 15: Type mismatch in function call for parameter y.
ERROR 05:13:24,818 - Error on line 15: Not enough actual parameters.
INFO  05:13:55,925 - #2 program
INFO  05:13:55,925 - #44 prg
INFO  05:13:55,925 - #44 bool
INFO  05:13:55,927 - #44 z
INFO  05:13:55,928 - #33 ;
INFO  05:13:55,929 - #44 bool
INFO  05:13:55,930 - #44 k
INFO  05:13:55,930 - #33 ;
INFO  05:13:55,930 - #40 {
INFO  05:13:55,930 - #13 void
INFO  05:13:55,931 - #44 proba
INFO  05:13:55,932 - #36 (
INFO  05:13:55,932 - #44 bool
INFO  05:13:55,932 - #44 x
INFO  05:13:55,932 - #34 ,
INFO  05:13:55,932 - #44 int
INFO  05:13:55,932 - #44 y
INFO  05:13:55,932 - #38 [
INFO  05:13:55,932 - #39 ]
INFO  05:13:55,932 - #34 ,
INFO  05:13:55,933 - #44 char
INFO  05:13:55,933 - #44 z
INFO  05:13:55,933 - #37 )
INFO  05:13:55,934 - #40 {
INFO  05:13:55,935 - #41 }
INFO  05:13:55,936 - #44 int
INFO  05:13:55,936 - #44 x
INFO  05:13:55,936 - #36 (
INFO  05:13:55,936 - #44 int
INFO  05:13:55,936 - #44 z
INFO  05:13:55,936 - #34 ,
INFO  05:13:55,936 - #44 int
INFO  05:13:55,937 - #44 p
INFO  05:13:55,937 - #38 [
INFO  05:13:55,937 - #39 ]
INFO  05:13:55,937 - #37 )
INFO  05:13:55,937 - #44 int
INFO  05:13:55,937 - #44 i
INFO  05:13:55,937 - #33 ;
INFO  05:13:55,937 - #44 bool
INFO  05:13:55,937 - #44 b
INFO  05:13:55,937 - #33 ;
INFO  05:13:55,937 - #40 {
INFO  05:13:55,938 - #44 proba
INFO  05:13:55,938 - #36 (
INFO  05:13:55,938 - #44 b
INFO  05:13:55,939 - #34 ,
INFO  05:13:55,940 - #44 null
INFO  05:13:55,940 - #34 ,
INFO  05:13:55,940 - #45 c
INFO  05:13:55,940 - #37 )
INFO  05:13:55,940 - #33 ;
INFO  05:13:55,941 - #12 return
INFO  05:13:55,941 - #44 i
INFO  05:13:55,941 - #33 ;
INFO  05:13:55,941 - #41 }
INFO  05:13:55,941 - #41 }
INFO  05:14:10,755 - #2 program
INFO  05:14:10,756 - #44 prg
INFO  05:14:10,756 - #44 bool
INFO  05:14:10,757 - #44 z
INFO  05:14:10,758 - #33 ;
INFO  05:14:10,759 - #44 bool
INFO  05:14:10,759 - #44 k
INFO  05:14:10,760 - #33 ;
INFO  05:14:10,760 - #40 {
INFO  05:14:10,760 - #13 void
INFO  05:14:10,760 - #44 proba
INFO  05:14:10,761 - #36 (
INFO  05:14:10,761 - #44 bool
INFO  05:14:10,761 - #44 x
INFO  05:14:10,761 - #34 ,
INFO  05:14:10,761 - #44 int
INFO  05:14:10,761 - #44 y
INFO  05:14:10,762 - #38 [
INFO  05:14:10,762 - #39 ]
INFO  05:14:10,762 - #34 ,
INFO  05:14:10,762 - #44 char
INFO  05:14:10,762 - #44 z
INFO  05:14:10,762 - #37 )
INFO  05:14:10,763 - #40 {
INFO  05:14:10,764 - #41 }
INFO  05:14:10,765 - #44 int
INFO  05:14:10,765 - #44 x
INFO  05:14:10,765 - #36 (
INFO  05:14:10,765 - #44 int
INFO  05:14:10,765 - #44 z
INFO  05:14:10,765 - #34 ,
INFO  05:14:10,765 - #44 int
INFO  05:14:10,765 - #44 p
INFO  05:14:10,765 - #38 [
INFO  05:14:10,766 - #39 ]
INFO  05:14:10,766 - #37 )
INFO  05:14:10,766 - #44 int
INFO  05:14:10,766 - #44 i
INFO  05:14:10,766 - #33 ;
INFO  05:14:10,766 - #44 bool
INFO  05:14:10,766 - #44 b
INFO  05:14:10,766 - #33 ;
INFO  05:14:10,766 - #40 {
INFO  05:14:10,766 - #44 proba
INFO  05:14:10,766 - #36 (
INFO  05:14:10,767 - #42 true
INFO  05:14:10,768 - #34 ,
INFO  05:14:10,769 - #44 p
INFO  05:14:10,769 - #34 ,
INFO  05:14:10,769 - #45 c
INFO  05:14:10,769 - #37 )
INFO  05:14:10,769 - #33 ;
INFO  05:14:10,770 - #12 return
INFO  05:14:10,770 - #44 i
INFO  05:14:10,770 - #33 ;
INFO  05:14:10,770 - #41 }
INFO  05:14:10,770 - #41 }
INFO  13:26:12,089 - #2 program
INFO  13:26:12,090 - #44 prg
INFO  13:26:12,090 - #44 bool
INFO  13:26:12,092 - #44 z
INFO  13:26:12,093 - #33 ;
INFO  13:26:12,094 - #44 bool
INFO  13:26:12,095 - #44 k
INFO  13:26:12,095 - #33 ;
INFO  13:26:12,095 - #7 const
INFO  13:26:12,095 - #44 int
INFO  13:26:12,095 - #44 m
INFO  13:26:12,096 - #30 =
INFO  13:26:12,096 - #43 10
INFO  13:26:12,096 - #33 ;
INFO  13:26:12,097 - #40 {
INFO  13:26:12,098 - #13 void
INFO  13:26:12,099 - #44 proba
INFO  13:26:12,100 - #36 (
INFO  13:26:12,100 - #44 bool
INFO  13:26:12,100 - #44 x
INFO  13:26:12,100 - #34 ,
INFO  13:26:12,101 - #44 int
INFO  13:26:12,101 - #44 y
INFO  13:26:12,101 - #38 [
INFO  13:26:12,101 - #39 ]
INFO  13:26:12,101 - #34 ,
INFO  13:26:12,102 - #44 char
INFO  13:26:12,102 - #44 z
INFO  13:26:12,103 - #37 )
INFO  13:26:12,104 - #40 {
INFO  13:26:12,106 - #41 }
INFO  13:26:12,107 - #44 int
INFO  13:26:12,107 - #44 x
INFO  13:26:12,107 - #36 (
INFO  13:26:12,108 - #44 int
INFO  13:26:12,108 - #44 z
INFO  13:26:12,108 - #34 ,
INFO  13:26:12,108 - #44 int
INFO  13:26:12,108 - #44 p
INFO  13:26:12,108 - #38 [
INFO  13:26:12,108 - #39 ]
INFO  13:26:12,108 - #37 )
INFO  13:26:12,109 - #44 int
INFO  13:26:12,109 - #44 i
INFO  13:26:12,109 - #33 ;
INFO  13:26:12,109 - #44 bool
INFO  13:26:12,109 - #44 b
INFO  13:26:12,109 - #33 ;
INFO  13:26:12,110 - #40 {
INFO  13:26:12,110 - #44 proba
INFO  13:26:12,110 - #36 (
INFO  13:26:12,111 - #42 true
INFO  13:26:12,112 - #34 ,
INFO  13:26:12,113 - #44 p
INFO  13:26:12,114 - #34 ,
INFO  13:26:12,114 - #45 c
INFO  13:26:12,114 - #37 )
INFO  13:26:12,115 - #33 ;
INFO  13:26:12,115 - #12 return
INFO  13:26:12,115 - #44 m
INFO  13:26:12,115 - #33 ;
INFO  13:26:12,115 - #41 }
INFO  13:26:12,116 - #41 }
INFO  13:26:12,140 - Detektovano koriscenje simbolicke konstante m.
INFO  13:26:53,109 - #2 program
INFO  13:26:53,110 - #44 prg
INFO  13:26:53,110 - #44 bool
INFO  13:26:53,111 - #44 z
INFO  13:26:53,112 - #33 ;
INFO  13:26:53,113 - #44 bool
INFO  13:26:53,114 - #44 k
INFO  13:26:53,114 - #33 ;
INFO  13:26:53,114 - #7 const
INFO  13:26:53,114 - #44 int
INFO  13:26:53,114 - #44 m
INFO  13:26:53,115 - #30 =
INFO  13:26:53,115 - #43 10
INFO  13:26:53,115 - #33 ;
INFO  13:26:53,116 - #40 {
INFO  13:26:53,117 - #13 void
INFO  13:26:53,118 - #44 proba
INFO  13:26:53,119 - #36 (
INFO  13:26:53,119 - #44 bool
INFO  13:26:53,119 - #44 x
INFO  13:26:53,119 - #34 ,
INFO  13:26:53,119 - #44 int
INFO  13:26:53,119 - #44 y
INFO  13:26:53,119 - #38 [
INFO  13:26:53,119 - #39 ]
INFO  13:26:53,119 - #34 ,
INFO  13:26:53,121 - #44 char
INFO  13:26:53,121 - #44 z
INFO  13:26:53,121 - #37 )
INFO  13:26:53,122 - #40 {
INFO  13:26:53,124 - #41 }
INFO  13:26:53,125 - #44 int
INFO  13:26:53,125 - #44 x
INFO  13:26:53,125 - #36 (
INFO  13:26:53,125 - #44 int
INFO  13:26:53,125 - #44 z
INFO  13:26:53,126 - #34 ,
INFO  13:26:53,126 - #44 int
INFO  13:26:53,126 - #44 p
INFO  13:26:53,126 - #38 [
INFO  13:26:53,126 - #39 ]
INFO  13:26:53,126 - #37 )
INFO  13:26:53,126 - #44 int
INFO  13:26:53,126 - #44 i
INFO  13:26:53,126 - #33 ;
INFO  13:26:53,126 - #44 bool
INFO  13:26:53,127 - #44 b
INFO  13:26:53,127 - #33 ;
INFO  13:26:53,127 - #40 {
INFO  13:26:53,127 - #44 proba
INFO  13:26:53,127 - #36 (
INFO  13:26:53,128 - #42 true
INFO  13:26:53,130 - #34 ,
INFO  13:26:53,130 - #44 p
INFO  13:26:53,131 - #34 ,
INFO  13:26:53,131 - #45 c
INFO  13:26:53,131 - #37 )
INFO  13:26:53,132 - #33 ;
INFO  13:26:53,132 - #12 return
INFO  13:26:53,133 - #44 m
INFO  13:26:53,133 - #33 ;
INFO  13:26:53,133 - #41 }
INFO  13:26:53,133 - #41 }
INFO  13:26:53,166 - Info on line: 20: Detektovano koriscenje simbolicke konstante m.
INFO  13:27:35,715 - #2 program
INFO  13:27:35,717 - #44 prg
INFO  13:27:35,718 - #44 bool
INFO  13:27:35,719 - #44 z
INFO  13:27:35,720 - #33 ;
INFO  13:27:35,721 - #44 bool
INFO  13:27:35,721 - #44 k
INFO  13:27:35,722 - #33 ;
INFO  13:27:35,722 - #7 const
INFO  13:27:35,722 - #44 int
INFO  13:27:35,722 - #44 m
INFO  13:27:35,723 - #30 =
INFO  13:27:35,723 - #43 10
INFO  13:27:35,723 - #33 ;
INFO  13:27:35,724 - #40 {
INFO  13:27:35,725 - #13 void
INFO  13:27:35,726 - #44 proba
INFO  13:27:35,727 - #36 (
INFO  13:27:35,727 - #44 bool
INFO  13:27:35,728 - #44 x
INFO  13:27:35,728 - #34 ,
INFO  13:27:35,728 - #44 int
INFO  13:27:35,728 - #44 y
INFO  13:27:35,728 - #38 [
INFO  13:27:35,729 - #39 ]
INFO  13:27:35,729 - #34 ,
INFO  13:27:35,730 - #44 char
INFO  13:27:35,730 - #44 z
INFO  13:27:35,730 - #37 )
INFO  13:27:35,730 - #40 {
INFO  13:27:35,731 - #41 }
INFO  13:27:35,732 - #44 int
INFO  13:27:35,732 - #44 x
INFO  13:27:35,732 - #36 (
INFO  13:27:35,732 - #44 int
INFO  13:27:35,732 - #44 z
INFO  13:27:35,732 - #34 ,
INFO  13:27:35,732 - #44 int
INFO  13:27:35,733 - #44 p
INFO  13:27:35,733 - #38 [
INFO  13:27:35,733 - #39 ]
INFO  13:27:35,733 - #37 )
INFO  13:27:35,733 - #44 int
INFO  13:27:35,733 - #44 i
INFO  13:27:35,733 - #33 ;
INFO  13:27:35,733 - #44 bool
INFO  13:27:35,733 - #44 b
INFO  13:27:35,733 - #33 ;
INFO  13:27:35,734 - #40 {
INFO  13:27:35,734 - #44 proba
INFO  13:27:35,734 - #36 (
INFO  13:27:35,735 - #42 true
INFO  13:27:35,736 - #34 ,
INFO  13:27:35,737 - #44 p
INFO  13:27:35,737 - #34 ,
INFO  13:27:35,737 - #45 c
INFO  13:27:35,737 - #37 )
INFO  13:27:35,738 - #33 ;
INFO  13:27:35,738 - #14 for
INFO  13:27:35,738 - #36 (
INFO  13:27:35,738 - #44 int
INFO  13:27:35,738 - #44 g
ERROR 13:27:35,739 - 
Sintaksna greska na liniji 20
INFO  13:27:35,739 - #30 =
INFO  13:27:35,740 - #44 m
INFO  13:27:35,740 - #33 ;
INFO  13:27:35,745 - #44 g
ERROR 13:27:35,745 - Izvrsen oporavak u liniji 20
INFO  13:27:35,746 - #24 >
INFO  13:27:35,746 - #43 0
INFO  13:27:35,747 - #33 ;
INFO  13:27:35,748 - #44 g
INFO  13:27:35,748 - #31 ++
INFO  13:27:35,748 - #37 )
INFO  13:27:35,748 - #40 {
INFO  13:27:35,748 - #41 }
INFO  13:27:35,748 - #12 return
INFO  13:27:35,748 - #44 m
INFO  13:27:35,748 - #33 ;
INFO  13:27:35,748 - #41 }
INFO  13:27:35,748 - #41 }
ERROR 13:27:35,770 - Error on line 20: Name g has not been declared.
ERROR 13:27:35,770 - Error on line 22: Expression types are not compatible.
ERROR 13:27:35,771 - Error on line 20: Name g has not been declared.
ERROR 13:27:35,771 - Error on line 20: Operator ++ must be used on int type designator.
INFO  13:27:35,771 - Info on line: 24: Detektovano koriscenje simbolicke konstante m.
INFO  13:27:35,771 - Info on line: 24: Detektovano koriscenje simbolicke konstante m.
INFO  13:27:51,526 - #2 program
INFO  13:27:51,527 - #44 prg
INFO  13:27:51,527 - #44 bool
INFO  13:27:51,529 - #44 z
INFO  13:27:51,531 - #33 ;
INFO  13:27:51,532 - #44 bool
INFO  13:27:51,533 - #44 k
INFO  13:27:51,533 - #33 ;
INFO  13:27:51,533 - #7 const
INFO  13:27:51,533 - #44 int
INFO  13:27:51,533 - #44 m
INFO  13:27:51,534 - #30 =
INFO  13:27:51,534 - #43 10
INFO  13:27:51,534 - #33 ;
INFO  13:27:51,536 - #40 {
INFO  13:27:51,536 - #13 void
INFO  13:27:51,537 - #44 proba
INFO  13:27:51,538 - #36 (
INFO  13:27:51,539 - #44 bool
INFO  13:27:51,539 - #44 x
INFO  13:27:51,539 - #34 ,
INFO  13:27:51,539 - #44 int
INFO  13:27:51,539 - #44 y
INFO  13:27:51,539 - #38 [
INFO  13:27:51,539 - #39 ]
INFO  13:27:51,540 - #34 ,
INFO  13:27:51,540 - #44 char
INFO  13:27:51,540 - #44 z
INFO  13:27:51,540 - #37 )
INFO  13:27:51,541 - #40 {
INFO  13:27:51,542 - #41 }
INFO  13:27:51,543 - #44 int
INFO  13:27:51,543 - #44 x
INFO  13:27:51,543 - #36 (
INFO  13:27:51,543 - #44 int
INFO  13:27:51,543 - #44 z
INFO  13:27:51,544 - #34 ,
INFO  13:27:51,544 - #44 int
INFO  13:27:51,544 - #44 p
INFO  13:27:51,544 - #38 [
INFO  13:27:51,544 - #39 ]
INFO  13:27:51,544 - #37 )
INFO  13:27:51,544 - #44 int
INFO  13:27:51,544 - #44 i
INFO  13:27:51,544 - #33 ;
INFO  13:27:51,544 - #44 bool
INFO  13:27:51,545 - #44 b
INFO  13:27:51,545 - #33 ;
INFO  13:27:51,545 - #40 {
INFO  13:27:51,545 - #44 proba
INFO  13:27:51,545 - #36 (
INFO  13:27:51,546 - #42 true
INFO  13:27:51,547 - #34 ,
INFO  13:27:51,547 - #44 p
INFO  13:27:51,547 - #34 ,
INFO  13:27:51,547 - #45 c
INFO  13:27:51,548 - #37 )
INFO  13:27:51,548 - #33 ;
INFO  13:27:51,548 - #14 for
INFO  13:27:51,548 - #36 (
INFO  13:27:51,548 - #44 i
INFO  13:27:51,549 - #30 =
INFO  13:27:51,549 - #44 m
INFO  13:27:51,550 - #33 ;
INFO  13:27:51,550 - #44 i
INFO  13:27:51,550 - #24 >
INFO  13:27:51,550 - #43 0
INFO  13:27:51,552 - #33 ;
INFO  13:27:51,553 - #44 i
INFO  13:27:51,553 - #31 ++
INFO  13:27:51,553 - #37 )
INFO  13:27:51,553 - #40 {
INFO  13:27:51,554 - #41 }
INFO  13:27:51,554 - #12 return
INFO  13:27:51,554 - #44 m
INFO  13:27:51,554 - #33 ;
INFO  13:27:51,554 - #41 }
INFO  13:27:51,555 - #41 }
INFO  13:27:51,585 - Info on line: 20: Detektovano koriscenje simbolicke konstante m.
INFO  13:27:51,585 - Info on line: 20: Detektovano koriscenje simbolicke konstante m.
INFO  13:27:51,585 - Info on line: 24: Detektovano koriscenje simbolicke konstante m.
INFO  13:27:51,585 - Info on line: 24: Detektovano koriscenje simbolicke konstante m.
INFO  13:29:43,742 - #2 program
INFO  13:29:43,744 - #44 prg
INFO  13:29:43,744 - #44 bool
INFO  13:29:43,746 - #44 z
INFO  13:29:43,747 - #33 ;
INFO  13:29:43,748 - #44 bool
INFO  13:29:43,748 - #44 k
INFO  13:29:43,748 - #33 ;
INFO  13:29:43,749 - #7 const
INFO  13:29:43,749 - #44 int
INFO  13:29:43,749 - #44 m
INFO  13:29:43,749 - #30 =
INFO  13:29:43,749 - #43 10
INFO  13:29:43,749 - #33 ;
INFO  13:29:43,750 - #40 {
INFO  13:29:43,751 - #13 void
INFO  13:29:43,752 - #44 proba
INFO  13:29:43,753 - #36 (
INFO  13:29:43,753 - #44 bool
INFO  13:29:43,753 - #44 x
INFO  13:29:43,753 - #34 ,
INFO  13:29:43,753 - #44 int
INFO  13:29:43,753 - #44 y
INFO  13:29:43,754 - #38 [
INFO  13:29:43,754 - #39 ]
INFO  13:29:43,754 - #34 ,
INFO  13:29:43,755 - #44 char
INFO  13:29:43,755 - #44 z
INFO  13:29:43,755 - #37 )
INFO  13:29:43,755 - #40 {
INFO  13:29:43,756 - #41 }
INFO  13:29:43,757 - #44 int
INFO  13:29:43,757 - #44 x
INFO  13:29:43,758 - #36 (
INFO  13:29:43,758 - #44 int
INFO  13:29:43,758 - #44 z
INFO  13:29:43,758 - #34 ,
INFO  13:29:43,758 - #44 int
INFO  13:29:43,758 - #44 p
INFO  13:29:43,758 - #38 [
INFO  13:29:43,758 - #39 ]
INFO  13:29:43,759 - #37 )
INFO  13:29:43,759 - #44 int
INFO  13:29:43,759 - #44 i
INFO  13:29:43,759 - #33 ;
INFO  13:29:43,759 - #44 bool
INFO  13:29:43,759 - #44 b
INFO  13:29:43,759 - #33 ;
INFO  13:29:43,759 - #40 {
INFO  13:29:43,760 - #44 proba
INFO  13:29:43,761 - #36 (
INFO  13:29:43,761 - #42 true
INFO  13:29:43,762 - #34 ,
INFO  13:29:43,762 - #44 p
INFO  13:29:43,762 - #34 ,
INFO  13:29:43,762 - #45 c
INFO  13:29:43,762 - #37 )
INFO  13:29:43,764 - #33 ;
INFO  13:29:43,764 - #14 for
INFO  13:29:43,764 - #36 (
INFO  13:29:43,764 - #44 i
INFO  13:29:43,764 - #30 =
INFO  13:29:43,764 - #44 m
INFO  13:29:43,765 - #33 ;
INFO  13:29:43,765 - #44 i
INFO  13:29:43,765 - #24 >
INFO  13:29:43,771 - #43 0
INFO  13:29:43,772 - #33 ;
INFO  13:29:43,773 - #44 i
INFO  13:29:43,773 - #31 ++
INFO  13:29:43,773 - #37 )
INFO  13:29:43,773 - #40 {
INFO  13:29:43,773 - #41 }
INFO  13:29:43,773 - #12 return
INFO  13:29:43,773 - #44 m
INFO  13:29:43,773 - #33 ;
INFO  13:29:43,773 - #41 }
INFO  13:29:43,774 - #41 }
INFO  13:29:43,800 - Info on line: 20: Detected usage of symbolic constant m.
INFO  13:29:43,800 - Info on line: 24: Detected usage of symbolic constant m.
INFO  13:30:03,008 - #2 program
INFO  13:30:03,009 - #44 prg
INFO  13:30:03,009 - #44 bool
INFO  13:30:03,010 - #44 z
INFO  13:30:03,011 - #33 ;
INFO  13:30:03,012 - #44 bool
INFO  13:30:03,012 - #44 k
INFO  13:30:03,012 - #33 ;
INFO  13:30:03,013 - #7 const
INFO  13:30:03,013 - #44 int
INFO  13:30:03,013 - #44 m
INFO  13:30:03,014 - #30 =
INFO  13:30:03,014 - #43 10
INFO  13:30:03,014 - #33 ;
INFO  13:30:03,015 - #40 {
INFO  13:30:03,016 - #13 void
INFO  13:30:03,017 - #44 proba
INFO  13:30:03,017 - #36 (
INFO  13:30:03,017 - #44 bool
INFO  13:30:03,017 - #44 x
INFO  13:30:03,017 - #34 ,
INFO  13:30:03,018 - #44 int
INFO  13:30:03,018 - #44 y
INFO  13:30:03,018 - #38 [
INFO  13:30:03,018 - #39 ]
INFO  13:30:03,018 - #34 ,
INFO  13:30:03,019 - #44 char
INFO  13:30:03,019 - #44 z
INFO  13:30:03,019 - #37 )
INFO  13:30:03,020 - #40 {
INFO  13:30:03,023 - #41 }
INFO  13:30:03,023 - #44 int
INFO  13:30:03,024 - #44 x
INFO  13:30:03,024 - #36 (
INFO  13:30:03,024 - #44 int
INFO  13:30:03,024 - #44 z
INFO  13:30:03,024 - #34 ,
INFO  13:30:03,025 - #44 int
INFO  13:30:03,025 - #44 p
INFO  13:30:03,025 - #38 [
INFO  13:30:03,025 - #39 ]
INFO  13:30:03,025 - #37 )
INFO  13:30:03,025 - #44 int
INFO  13:30:03,025 - #44 i
INFO  13:30:03,025 - #33 ;
INFO  13:30:03,025 - #44 bool
INFO  13:30:03,025 - #44 b
INFO  13:30:03,026 - #33 ;
INFO  13:30:03,026 - #40 {
INFO  13:30:03,026 - #44 proba
INFO  13:30:03,026 - #36 (
INFO  13:30:03,027 - #42 true
INFO  13:30:03,028 - #34 ,
INFO  13:30:03,029 - #44 p
INFO  13:30:03,029 - #34 ,
INFO  13:30:03,030 - #45 c
INFO  13:30:03,030 - #37 )
INFO  13:30:03,030 - #33 ;
INFO  13:30:03,031 - #44 k
INFO  13:30:03,031 - #30 =
INFO  13:30:03,031 - #42 true
INFO  13:30:03,034 - #33 ;
INFO  13:30:03,034 - #12 return
INFO  13:30:03,034 - #44 m
INFO  13:30:03,034 - #33 ;
INFO  13:30:03,034 - #41 }
INFO  13:30:03,034 - #41 }
INFO  13:30:03,065 - Info on line: 20: Detected usage of variable k.
INFO  13:30:03,065 - Info on line: 22: Detected usage of symbolic constant m.
INFO  13:30:16,590 - #2 program
INFO  13:30:16,590 - #44 prg
INFO  13:30:16,590 - #44 bool
INFO  13:30:16,592 - #44 z
INFO  13:30:16,594 - #33 ;
INFO  13:30:16,595 - #44 bool
INFO  13:30:16,595 - #44 k
INFO  13:30:16,595 - #33 ;
INFO  13:30:16,595 - #7 const
INFO  13:30:16,595 - #44 int
INFO  13:30:16,595 - #44 m
INFO  13:30:16,596 - #30 =
INFO  13:30:16,596 - #43 10
INFO  13:30:16,596 - #33 ;
INFO  13:30:16,597 - #40 {
INFO  13:30:16,598 - #13 void
INFO  13:30:16,598 - #44 proba
INFO  13:30:16,599 - #36 (
INFO  13:30:16,599 - #44 bool
INFO  13:30:16,599 - #44 x
INFO  13:30:16,600 - #34 ,
INFO  13:30:16,600 - #44 int
INFO  13:30:16,600 - #44 y
INFO  13:30:16,600 - #38 [
INFO  13:30:16,600 - #39 ]
INFO  13:30:16,600 - #34 ,
INFO  13:30:16,601 - #44 char
INFO  13:30:16,601 - #44 z
INFO  13:30:16,601 - #37 )
INFO  13:30:16,603 - #40 {
INFO  13:30:16,604 - #41 }
INFO  13:30:16,604 - #44 int
INFO  13:30:16,606 - #44 x
INFO  13:30:16,606 - #36 (
INFO  13:30:16,606 - #44 int
INFO  13:30:16,606 - #44 z
INFO  13:30:16,606 - #34 ,
INFO  13:30:16,606 - #44 int
INFO  13:30:16,606 - #44 p
INFO  13:30:16,606 - #38 [
INFO  13:30:16,606 - #39 ]
INFO  13:30:16,606 - #37 )
INFO  13:30:16,606 - #44 int
INFO  13:30:16,606 - #44 i
INFO  13:30:16,607 - #33 ;
INFO  13:30:16,607 - #44 bool
INFO  13:30:16,607 - #44 b
INFO  13:30:16,607 - #33 ;
INFO  13:30:16,607 - #40 {
INFO  13:30:16,607 - #44 proba
INFO  13:30:16,607 - #36 (
INFO  13:30:16,607 - #42 true
INFO  13:30:16,608 - #34 ,
INFO  13:30:16,609 - #44 p
INFO  13:30:16,609 - #34 ,
INFO  13:30:16,609 - #45 c
INFO  13:30:16,609 - #37 )
INFO  13:30:16,609 - #33 ;
INFO  13:30:16,610 - #44 i
INFO  13:30:16,610 - #30 =
INFO  13:30:16,610 - #43 10
INFO  13:30:16,611 - #33 ;
INFO  13:30:16,611 - #12 return
INFO  13:30:16,611 - #44 m
INFO  13:30:16,611 - #33 ;
INFO  13:30:16,611 - #41 }
INFO  13:30:16,611 - #41 }
INFO  13:30:16,641 - Info on line: 22: Detected usage of symbolic constant m.
INFO  13:30:31,962 - #2 program
INFO  13:30:31,962 - #44 prg
INFO  13:30:31,962 - #44 bool
INFO  13:30:31,964 - #44 z
INFO  13:30:31,965 - #33 ;
INFO  13:30:31,967 - #44 bool
INFO  13:30:31,967 - #44 k
INFO  13:30:31,967 - #33 ;
INFO  13:30:31,967 - #7 const
INFO  13:30:31,967 - #44 int
INFO  13:30:31,967 - #44 m
INFO  13:30:31,968 - #30 =
INFO  13:30:31,968 - #43 10
INFO  13:30:31,968 - #33 ;
INFO  13:30:31,969 - #40 {
INFO  13:30:31,970 - #13 void
INFO  13:30:31,970 - #44 proba
INFO  13:30:31,970 - #36 (
INFO  13:30:31,971 - #44 bool
INFO  13:30:31,971 - #44 x
INFO  13:30:31,971 - #34 ,
INFO  13:30:31,971 - #44 int
INFO  13:30:31,971 - #44 y
INFO  13:30:31,971 - #38 [
INFO  13:30:31,971 - #39 ]
INFO  13:30:31,971 - #34 ,
INFO  13:30:31,972 - #44 char
INFO  13:30:31,972 - #44 z
INFO  13:30:31,972 - #37 )
INFO  13:30:31,973 - #40 {
INFO  13:30:31,974 - #41 }
INFO  13:30:31,975 - #44 int
INFO  13:30:31,975 - #44 x
INFO  13:30:31,975 - #36 (
INFO  13:30:31,975 - #44 int
INFO  13:30:31,976 - #44 z
INFO  13:30:31,976 - #34 ,
INFO  13:30:31,976 - #44 int
INFO  13:30:31,976 - #44 p
INFO  13:30:31,976 - #38 [
INFO  13:30:31,976 - #39 ]
INFO  13:30:31,976 - #37 )
INFO  13:30:31,976 - #44 int
INFO  13:30:31,976 - #44 i
INFO  13:30:31,976 - #33 ;
INFO  13:30:31,976 - #44 bool
INFO  13:30:31,976 - #44 b
INFO  13:30:31,977 - #33 ;
INFO  13:30:31,977 - #40 {
INFO  13:30:31,977 - #44 proba
INFO  13:30:31,977 - #36 (
INFO  13:30:31,978 - #42 true
INFO  13:30:31,979 - #34 ,
INFO  13:30:31,980 - #44 p
INFO  13:30:31,980 - #34 ,
INFO  13:30:31,980 - #45 c
INFO  13:30:31,980 - #37 )
INFO  13:30:31,980 - #33 ;
INFO  13:30:31,980 - #44 z
INFO  13:30:31,981 - #30 =
INFO  13:30:31,981 - #43 10
INFO  13:30:31,981 - #33 ;
INFO  13:30:31,982 - #12 return
INFO  13:30:31,982 - #44 m
INFO  13:30:31,982 - #33 ;
INFO  13:30:31,982 - #41 }
INFO  13:30:31,983 - #41 }
INFO  13:30:32,010 - Info on line: 22: Detected usage of symbolic constant m.
INFO  13:31:35,747 - #2 program
INFO  13:31:35,748 - #44 prg
INFO  13:31:35,748 - #44 bool
INFO  13:31:35,750 - #44 z
INFO  13:31:35,752 - #33 ;
INFO  13:31:35,753 - #44 bool
INFO  13:31:35,753 - #44 k
INFO  13:31:35,753 - #33 ;
INFO  13:31:35,753 - #7 const
INFO  13:31:35,754 - #44 int
INFO  13:31:35,754 - #44 m
INFO  13:31:35,754 - #30 =
INFO  13:31:35,754 - #43 10
INFO  13:31:35,755 - #33 ;
INFO  13:31:35,755 - #40 {
INFO  13:31:35,756 - #13 void
INFO  13:31:35,757 - #44 proba
INFO  13:31:35,757 - #36 (
INFO  13:31:35,758 - #44 bool
INFO  13:31:35,758 - #44 x
INFO  13:31:35,758 - #34 ,
INFO  13:31:35,758 - #44 int
INFO  13:31:35,758 - #44 y
INFO  13:31:35,758 - #38 [
INFO  13:31:35,758 - #39 ]
INFO  13:31:35,758 - #34 ,
INFO  13:31:35,759 - #44 char
INFO  13:31:35,759 - #44 z
INFO  13:31:35,759 - #37 )
INFO  13:31:35,761 - #40 {
INFO  13:31:35,762 - #41 }
INFO  13:31:35,763 - #44 int
INFO  13:31:35,763 - #44 x
INFO  13:31:35,763 - #36 (
INFO  13:31:35,763 - #44 int
INFO  13:31:35,763 - #44 z
INFO  13:31:35,763 - #34 ,
INFO  13:31:35,763 - #44 int
INFO  13:31:35,763 - #44 p
INFO  13:31:35,764 - #38 [
INFO  13:31:35,764 - #39 ]
INFO  13:31:35,764 - #37 )
INFO  13:31:35,764 - #44 int
INFO  13:31:35,764 - #44 i
INFO  13:31:35,764 - #33 ;
INFO  13:31:35,764 - #44 bool
INFO  13:31:35,764 - #44 b
INFO  13:31:35,764 - #33 ;
INFO  13:31:35,764 - #40 {
INFO  13:31:35,764 - #44 proba
INFO  13:31:35,764 - #36 (
INFO  13:31:35,765 - #42 true
INFO  13:31:35,766 - #34 ,
INFO  13:31:35,767 - #44 p
INFO  13:31:35,767 - #34 ,
INFO  13:31:35,767 - #45 c
INFO  13:31:35,767 - #37 )
INFO  13:31:35,767 - #33 ;
INFO  13:31:35,767 - #44 z
INFO  13:31:35,768 - #30 =
INFO  13:31:35,768 - #43 10
INFO  13:31:35,768 - #33 ;
INFO  13:31:35,769 - #12 return
INFO  13:31:35,769 - #44 m
INFO  13:31:35,769 - #33 ;
INFO  13:31:35,769 - #41 }
INFO  13:31:35,769 - #41 }
INFO  13:31:35,795 - Info on line: 22: Detected usage of symbolic constant m.
INFO  13:32:26,129 - #2 program
INFO  13:32:26,130 - #44 prg
INFO  13:32:26,130 - #44 int
INFO  13:32:26,131 - #44 i
INFO  13:32:26,132 - #33 ;
INFO  13:32:26,134 - #44 int
INFO  13:32:26,134 - #44 niz
INFO  13:32:26,135 - #38 [
INFO  13:32:26,135 - #39 ]
INFO  13:32:26,135 - #33 ;
INFO  13:32:26,136 - #40 {
INFO  13:32:26,136 - #13 void
INFO  13:32:26,136 - #44 main
INFO  13:32:26,137 - #36 (
INFO  13:32:26,137 - #37 )
INFO  13:32:26,138 - #40 {
INFO  13:32:26,139 - #44 niz
INFO  13:32:26,140 - #30 =
INFO  13:32:26,140 - #9 new
INFO  13:32:26,142 - #44 int
INFO  13:32:26,142 - #38 [
INFO  13:32:26,142 - #39 ]
ERROR 13:32:26,142 - 
Sintaksna greska na liniji 10
INFO  13:32:26,142 - #33 ;
INFO  13:32:26,149 - #41 }
ERROR 13:32:26,150 - Izvrsen oporavak u liniji 15
INFO  13:32:26,151 - #41 }
INFO  13:32:41,635 - #2 program
INFO  13:32:41,636 - #44 prg
INFO  13:32:41,636 - #44 int
INFO  13:32:41,637 - #44 i
INFO  13:32:41,639 - #33 ;
INFO  13:32:41,640 - #44 int
INFO  13:32:41,641 - #44 niz
INFO  13:32:41,641 - #38 [
INFO  13:32:41,641 - #39 ]
INFO  13:32:41,641 - #33 ;
INFO  13:32:41,641 - #40 {
INFO  13:32:41,642 - #13 void
INFO  13:32:41,642 - #44 main
INFO  13:32:41,643 - #36 (
INFO  13:32:41,643 - #37 )
INFO  13:32:41,643 - #40 {
INFO  13:32:41,644 - #44 niz
INFO  13:32:41,647 - #30 =
INFO  13:32:41,647 - #9 new
INFO  13:32:41,649 - #44 int
INFO  13:32:41,649 - #38 [
INFO  13:32:41,649 - #43 10
INFO  13:32:41,649 - #39 ]
INFO  13:32:41,650 - #33 ;
INFO  13:32:41,650 - #41 }
INFO  13:32:41,651 - #41 }
INFO  13:32:41,675 - Info on line: 10: Detected usage of variable niz.
INFO  13:32:51,811 - #2 program
INFO  13:32:51,813 - #44 prg
INFO  13:32:51,813 - #44 int
INFO  13:32:51,815 - #44 i
INFO  13:32:51,816 - #33 ;
INFO  13:32:51,818 - #44 int
INFO  13:32:51,818 - #44 niz
INFO  13:32:51,818 - #38 [
INFO  13:32:51,818 - #39 ]
INFO  13:32:51,818 - #33 ;
INFO  13:32:51,819 - #40 {
INFO  13:32:51,819 - #13 void
INFO  13:32:51,820 - #44 main
INFO  13:32:51,820 - #36 (
INFO  13:32:51,821 - #37 )
INFO  13:32:51,821 - #40 {
INFO  13:32:51,823 - #44 niz
INFO  13:32:51,823 - #30 =
INFO  13:32:51,824 - #9 new
INFO  13:32:51,826 - #44 int
INFO  13:32:51,826 - #38 [
INFO  13:32:51,826 - #43 10
INFO  13:32:51,826 - #39 ]
INFO  13:32:51,827 - #33 ;
INFO  13:32:51,827 - #44 i
INFO  13:32:51,827 - #30 =
INFO  13:32:51,827 - #43 10
INFO  13:32:51,827 - #33 ;
INFO  13:32:51,827 - #41 }
INFO  13:32:51,827 - #41 }
INFO  13:32:51,855 - Info on line: 10: Detected usage of variable niz.
INFO  13:32:51,855 - Info on line: 11: Detected usage of variable i.
INFO  13:33:04,881 - #2 program
INFO  13:33:04,882 - #44 prg
INFO  13:33:04,882 - #44 int
INFO  13:33:04,884 - #44 i
INFO  13:33:04,885 - #33 ;
INFO  13:33:04,887 - #44 int
INFO  13:33:04,887 - #44 niz
INFO  13:33:04,888 - #38 [
INFO  13:33:04,888 - #39 ]
INFO  13:33:04,888 - #33 ;
INFO  13:33:04,888 - #40 {
INFO  13:33:04,889 - #13 void
INFO  13:33:04,889 - #44 main
INFO  13:33:04,890 - #36 (
INFO  13:33:04,890 - #37 )
INFO  13:33:04,891 - #44 int
INFO  13:33:04,893 - #44 k
INFO  13:33:04,893 - #33 ;
INFO  13:33:04,893 - #40 {
INFO  13:33:04,893 - #44 niz
INFO  13:33:04,894 - #30 =
INFO  13:33:04,894 - #9 new
INFO  13:33:04,896 - #44 int
INFO  13:33:04,896 - #38 [
INFO  13:33:04,896 - #43 10
INFO  13:33:04,896 - #39 ]
INFO  13:33:04,897 - #33 ;
INFO  13:33:04,897 - #44 k
INFO  13:33:04,897 - #30 =
INFO  13:33:04,898 - #44 i
INFO  13:33:04,898 - #33 ;
INFO  13:33:04,898 - #41 }
INFO  13:33:04,898 - #41 }
INFO  13:33:04,925 - Info on line: 12: Detected usage of variable niz.
INFO  13:33:04,925 - Info on line: 13: Detected usage of variable i.
INFO  13:33:12,879 - #2 program
INFO  13:33:12,880 - #44 prg
INFO  13:33:12,880 - #44 int
INFO  13:33:12,881 - #44 i
INFO  13:33:12,883 - #33 ;
INFO  13:33:12,884 - #44 int
INFO  13:33:12,885 - #44 niz
INFO  13:33:12,885 - #38 [
INFO  13:33:12,885 - #39 ]
INFO  13:33:12,885 - #33 ;
INFO  13:33:12,886 - #40 {
INFO  13:33:12,886 - #13 void
INFO  13:33:12,887 - #44 main
INFO  13:33:12,888 - #36 (
INFO  13:33:12,888 - #37 )
INFO  13:33:12,889 - #44 int
INFO  13:33:12,890 - #44 k
INFO  13:33:12,890 - #33 ;
INFO  13:33:12,890 - #40 {
INFO  13:33:12,890 - #44 niz
INFO  13:33:12,891 - #30 =
INFO  13:33:12,891 - #9 new
INFO  13:33:12,893 - #44 int
INFO  13:33:12,893 - #38 [
INFO  13:33:12,894 - #43 10
INFO  13:33:12,894 - #39 ]
INFO  13:33:12,894 - #33 ;
INFO  13:33:12,895 - #44 i
INFO  13:33:12,895 - #30 =
INFO  13:33:12,896 - #44 k
INFO  13:33:12,896 - #33 ;
INFO  13:33:12,896 - #41 }
INFO  13:33:12,896 - #41 }
INFO  13:33:12,925 - Info on line: 12: Detected usage of variable niz.
INFO  13:33:12,925 - Info on line: 13: Detected usage of variable i.
INFO  13:33:22,835 - #2 program
INFO  13:33:22,836 - #44 prg
INFO  13:33:22,836 - #44 int
INFO  13:33:22,837 - #44 i
INFO  13:33:22,838 - #33 ;
INFO  13:33:22,840 - #44 int
INFO  13:33:22,841 - #44 niz
INFO  13:33:22,841 - #38 [
INFO  13:33:22,841 - #39 ]
INFO  13:33:22,841 - #33 ;
INFO  13:33:22,841 - #40 {
INFO  13:33:22,842 - #13 void
INFO  13:33:22,842 - #44 main
INFO  13:33:22,844 - #36 (
INFO  13:33:22,844 - #37 )
INFO  13:33:22,846 - #44 int
INFO  13:33:22,848 - #44 k
INFO  13:33:22,848 - #33 ;
INFO  13:33:22,848 - #40 {
INFO  13:33:22,848 - #44 niz
INFO  13:33:22,849 - #30 =
INFO  13:33:22,849 - #9 new
INFO  13:33:22,850 - #44 int
INFO  13:33:22,850 - #38 [
INFO  13:33:22,850 - #43 10
INFO  13:33:22,850 - #39 ]
INFO  13:33:22,851 - #33 ;
INFO  13:33:22,852 - #44 k
INFO  13:33:22,852 - #30 =
INFO  13:33:22,852 - #43 10
INFO  13:33:22,852 - #33 ;
INFO  13:33:22,852 - #41 }
INFO  13:33:22,852 - #41 }
INFO  13:33:22,881 - Info on line: 12: Detected usage of variable niz.
INFO  13:33:38,971 - #2 program
INFO  13:33:38,972 - #44 prg
INFO  13:33:38,972 - #44 int
INFO  13:33:38,974 - #44 i
INFO  13:33:38,975 - #33 ;
INFO  13:33:38,977 - #44 int
INFO  13:33:38,977 - #44 niz
INFO  13:33:38,978 - #38 [
INFO  13:33:38,978 - #39 ]
INFO  13:33:38,978 - #33 ;
INFO  13:33:38,978 - #40 {
INFO  13:33:38,978 - #13 void
INFO  13:33:38,979 - #44 main
INFO  13:33:38,979 - #36 (
INFO  13:33:38,979 - #37 )
INFO  13:33:38,980 - #44 int
INFO  13:33:38,982 - #44 k
INFO  13:33:38,982 - #33 ;
INFO  13:33:38,982 - #40 {
INFO  13:33:38,982 - #44 niz
INFO  13:33:38,983 - #30 =
INFO  13:33:38,984 - #9 new
INFO  13:33:38,985 - #44 int
INFO  13:33:38,985 - #38 [
INFO  13:33:38,985 - #43 10
INFO  13:33:38,985 - #39 ]
INFO  13:33:38,985 - #33 ;
INFO  13:33:38,986 - #44 niz
INFO  13:33:38,986 - #38 [
INFO  13:33:38,986 - #43 10
INFO  13:33:38,987 - #39 ]
INFO  13:33:38,987 - #30 =
INFO  13:33:38,987 - #44 k
INFO  13:33:38,987 - #33 ;
INFO  13:33:38,987 - #41 }
INFO  13:33:38,987 - #41 }
INFO  13:33:39,009 - Info on line: 12: Detected usage of variable niz.
INFO  13:33:39,010 - Info on line: 13: Detected usage of variable niz.
INFO  13:35:32,614 - #2 program
INFO  13:35:32,616 - #44 prg
INFO  13:35:32,616 - #44 int
INFO  13:35:32,617 - #44 i
INFO  13:35:32,620 - #33 ;
INFO  13:35:32,622 - #44 int
INFO  13:35:32,623 - #44 niz
INFO  13:35:32,623 - #38 [
INFO  13:35:32,623 - #39 ]
INFO  13:35:32,623 - #33 ;
INFO  13:35:32,624 - #40 {
INFO  13:35:32,624 - #13 void
INFO  13:35:32,625 - #44 main
INFO  13:35:32,626 - #36 (
INFO  13:35:32,627 - #37 )
INFO  13:35:32,628 - #44 int
INFO  13:35:32,629 - #44 k
INFO  13:35:32,631 - #33 ;
INFO  13:35:32,631 - #40 {
INFO  13:35:32,631 - #44 niz
INFO  13:35:32,632 - #30 =
INFO  13:35:32,633 - #9 new
INFO  13:35:32,634 - #44 int
INFO  13:35:32,634 - #38 [
INFO  13:35:32,635 - #43 10
INFO  13:35:32,635 - #39 ]
INFO  13:35:32,635 - #33 ;
INFO  13:35:32,637 - #44 niz
INFO  13:35:32,637 - #38 [
INFO  13:35:32,637 - #43 10
INFO  13:35:32,637 - #39 ]
INFO  13:35:32,638 - #30 =
INFO  13:35:32,638 - #44 k
INFO  13:35:32,638 - #33 ;
INFO  13:35:32,639 - #41 }
INFO  13:35:32,639 - #41 }
INFO  13:35:32,671 - Info on line: 12: Detected usage of variable niz.
INFO  13:35:32,672 - Info on line: 13: Detected usage of variable niz.
INFO  13:35:32,672 - Info on line 13: Detected usage of array element.
INFO  13:35:44,948 - #2 program
INFO  13:35:44,949 - #44 prg
INFO  13:35:44,949 - #44 int
INFO  13:35:44,950 - #44 i
INFO  13:35:44,951 - #33 ;
INFO  13:35:44,952 - #44 int
INFO  13:35:44,952 - #44 niz
INFO  13:35:44,953 - #38 [
INFO  13:35:44,953 - #39 ]
INFO  13:35:44,953 - #33 ;
INFO  13:35:44,953 - #40 {
INFO  13:35:44,953 - #13 void
INFO  13:35:44,954 - #44 main
INFO  13:35:44,955 - #36 (
INFO  13:35:44,955 - #37 )
INFO  13:35:44,955 - #44 int
INFO  13:35:44,956 - #44 k
INFO  13:35:44,956 - #33 ;
INFO  13:35:44,956 - #40 {
INFO  13:35:44,956 - #44 niz
INFO  13:35:44,957 - #30 =
INFO  13:35:44,958 - #9 new
INFO  13:35:44,959 - #44 int
INFO  13:35:44,959 - #38 [
INFO  13:35:44,959 - #43 10
INFO  13:35:44,959 - #39 ]
INFO  13:35:44,960 - #33 ;
INFO  13:35:44,960 - #44 niz
INFO  13:35:44,960 - #38 [
INFO  13:35:44,960 - #43 10
INFO  13:35:44,960 - #39 ]
INFO  13:35:44,961 - #30 =
INFO  13:35:44,961 - #44 k
INFO  13:35:44,961 - #33 ;
INFO  13:35:44,961 - #44 k
INFO  13:35:44,961 - #30 =
INFO  13:35:44,961 - #44 niz
INFO  13:35:44,961 - #38 [
INFO  13:35:44,961 - #43 1
INFO  13:35:44,961 - #39 ]
INFO  13:35:44,961 - #33 ;
INFO  13:35:44,961 - #41 }
INFO  13:35:44,962 - #41 }
INFO  13:35:44,985 - Info on line: 12: Detected usage of variable niz.
INFO  13:35:44,986 - Info on line: 13: Detected usage of variable niz.
INFO  13:35:44,986 - Info on line 13: Detected usage of array element.
INFO  13:35:44,986 - Info on line: 14: Detected usage of variable niz.
INFO  13:35:44,986 - Info on line 14: Detected usage of array element.
INFO  13:38:31,267 - #2 program
INFO  13:38:31,268 - #44 prg
INFO  13:38:31,268 - #44 int
INFO  13:38:31,269 - #44 i
INFO  13:38:31,271 - #33 ;
INFO  13:38:31,272 - #44 int
INFO  13:38:31,273 - #44 niz
INFO  13:38:31,273 - #38 [
INFO  13:38:31,273 - #39 ]
INFO  13:38:31,273 - #33 ;
INFO  13:38:31,274 - #40 {
INFO  13:38:31,274 - #44 int
INFO  13:38:31,275 - #44 fja
INFO  13:38:31,275 - #36 (
INFO  13:38:31,275 - #44 int
INFO  13:38:31,275 - #44 i
INFO  13:38:31,276 - #37 )
INFO  13:38:31,277 - #40 {
INFO  13:38:31,279 - #12 return
INFO  13:38:31,280 - #43 10
INFO  13:38:31,281 - #33 ;
INFO  13:38:31,282 - #41 }
INFO  13:38:31,282 - #13 void
INFO  13:38:31,283 - #44 main
INFO  13:38:31,284 - #36 (
INFO  13:38:31,284 - #37 )
INFO  13:38:31,285 - #44 int
INFO  13:38:31,285 - #44 k
INFO  13:38:31,285 - #33 ;
INFO  13:38:31,285 - #40 {
INFO  13:38:31,285 - #44 fja
INFO  13:38:31,285 - #36 (
INFO  13:38:31,286 - #43 10
INFO  13:38:31,286 - #37 )
INFO  13:38:31,287 - #33 ;
INFO  13:38:31,287 - #41 }
INFO  13:38:31,287 - #41 }
INFO  13:38:31,316 - Info on line 16: Detected function call for function fja.
INFO  13:38:39,854 - #2 program
INFO  13:38:39,855 - #44 prg
INFO  13:38:39,855 - #44 int
INFO  13:38:39,857 - #44 i
INFO  13:38:39,858 - #33 ;
INFO  13:38:39,859 - #44 int
INFO  13:38:39,860 - #44 niz
INFO  13:38:39,860 - #38 [
INFO  13:38:39,860 - #39 ]
INFO  13:38:39,860 - #33 ;
INFO  13:38:39,861 - #40 {
INFO  13:38:39,861 - #44 int
INFO  13:38:39,862 - #44 fja
INFO  13:38:39,862 - #36 (
INFO  13:38:39,862 - #44 int
INFO  13:38:39,862 - #44 i
INFO  13:38:39,862 - #37 )
INFO  13:38:39,864 - #40 {
INFO  13:38:39,865 - #12 return
INFO  13:38:39,865 - #43 10
INFO  13:38:39,866 - #33 ;
INFO  13:38:39,867 - #41 }
INFO  13:38:39,867 - #13 void
INFO  13:38:39,868 - #44 main
INFO  13:38:39,869 - #36 (
INFO  13:38:39,869 - #37 )
INFO  13:38:39,870 - #44 int
INFO  13:38:39,870 - #44 k
INFO  13:38:39,870 - #33 ;
INFO  13:38:39,870 - #40 {
INFO  13:38:39,871 - #44 fja
INFO  13:38:39,871 - #36 (
INFO  13:38:39,872 - #44 i
INFO  13:38:39,872 - #37 )
INFO  13:38:39,873 - #33 ;
INFO  13:38:39,873 - #41 }
INFO  13:38:39,873 - #41 }
INFO  13:38:39,902 - Info on line: 16: Detected usage of variable i.
INFO  13:38:39,903 - Info on line 16: Detected function call for function fja.
INFO  13:43:11,658 - #2 program
INFO  13:43:11,659 - #44 prg
INFO  13:43:11,659 - #44 int
INFO  13:43:11,660 - #44 i
INFO  13:43:11,662 - #33 ;
INFO  13:43:11,663 - #44 int
INFO  13:43:11,665 - #44 niz
INFO  13:43:11,665 - #38 [
INFO  13:43:11,665 - #39 ]
INFO  13:43:11,665 - #33 ;
INFO  13:43:11,666 - #40 {
INFO  13:43:11,666 - #44 int
INFO  13:43:11,667 - #44 fja
INFO  13:43:11,667 - #36 (
INFO  13:43:11,667 - #44 int
INFO  13:43:11,667 - #44 i
INFO  13:43:11,667 - #37 )
INFO  13:43:11,668 - #40 {
INFO  13:43:11,671 - #12 return
INFO  13:43:11,672 - #43 10
INFO  13:43:11,673 - #33 ;
INFO  13:43:11,674 - #41 }
INFO  13:43:11,675 - #13 void
INFO  13:43:11,675 - #44 main
INFO  13:43:11,676 - #36 (
INFO  13:43:11,676 - #37 )
INFO  13:43:11,676 - #44 int
INFO  13:43:11,676 - #44 k
INFO  13:43:11,676 - #33 ;
INFO  13:43:11,676 - #40 {
INFO  13:43:11,677 - #44 fja
INFO  13:43:11,677 - #36 (
INFO  13:43:11,677 - #44 i
INFO  13:43:11,678 - #37 )
INFO  13:43:11,679 - #33 ;
INFO  13:43:11,679 - #41 }
INFO  13:43:11,680 - #41 }
INFO  13:43:11,711 - Info on line: 16: Detected usage of global variable i.
INFO  13:43:11,711 - Info on line 16: Detected function call for function fja.
INFO  13:43:22,568 - #2 program
INFO  13:43:22,569 - #44 prg
INFO  13:43:22,569 - #44 int
INFO  13:43:22,570 - #44 i
INFO  13:43:22,571 - #33 ;
INFO  13:43:22,573 - #44 int
INFO  13:43:22,573 - #44 niz
INFO  13:43:22,573 - #38 [
INFO  13:43:22,573 - #39 ]
INFO  13:43:22,573 - #33 ;
INFO  13:43:22,574 - #40 {
INFO  13:43:22,575 - #44 int
INFO  13:43:22,575 - #44 fja
INFO  13:43:22,576 - #36 (
INFO  13:43:22,576 - #44 int
INFO  13:43:22,576 - #44 i
INFO  13:43:22,576 - #37 )
INFO  13:43:22,577 - #40 {
INFO  13:43:22,579 - #12 return
INFO  13:43:22,580 - #43 10
INFO  13:43:22,581 - #33 ;
INFO  13:43:22,582 - #41 }
INFO  13:43:22,583 - #13 void
INFO  13:43:22,583 - #44 main
INFO  13:43:22,584 - #36 (
INFO  13:43:22,584 - #37 )
INFO  13:43:22,585 - #44 int
INFO  13:43:22,585 - #44 k
INFO  13:43:22,585 - #33 ;
INFO  13:43:22,585 - #40 {
INFO  13:43:22,586 - #14 for
INFO  13:43:22,586 - #36 (
INFO  13:43:22,586 - #44 i
INFO  13:43:22,586 - #30 =
INFO  13:43:22,586 - #43 0
INFO  13:43:22,587 - #33 ;
INFO  13:43:22,588 - #44 i
INFO  13:43:22,588 - #26 <
INFO  13:43:22,588 - #43 10
INFO  13:43:22,589 - #33 ;
INFO  13:43:22,589 - #44 i
INFO  13:43:22,589 - #31 ++
INFO  13:43:22,589 - #37 )
INFO  13:43:22,590 - #40 {
INFO  13:43:22,590 - #41 }
INFO  13:43:22,590 - #41 }
INFO  13:43:22,591 - #41 }
INFO  13:43:22,622 - Info on line: 16: Detected usage of global variable i.
INFO  13:43:22,622 - Info on line: 16: Detected usage of global variable i.
INFO  13:43:22,622 - Info on line: 16: Detected usage of global variable i.
INFO  13:43:22,622 - Info on line 16: Detected for loop.
INFO  13:43:38,909 - #2 program
INFO  13:43:38,910 - #44 prg
INFO  13:43:38,910 - #44 int
INFO  13:43:38,911 - #44 i
INFO  13:43:38,912 - #33 ;
INFO  13:43:38,913 - #44 int
INFO  13:43:38,914 - #44 niz
INFO  13:43:38,914 - #38 [
INFO  13:43:38,914 - #39 ]
INFO  13:43:38,914 - #33 ;
INFO  13:43:38,914 - #40 {
INFO  13:43:38,915 - #44 int
INFO  13:43:38,915 - #44 fja
INFO  13:43:38,916 - #36 (
INFO  13:43:38,916 - #44 int
INFO  13:43:38,916 - #44 i
INFO  13:43:38,916 - #37 )
INFO  13:43:38,918 - #40 {
INFO  13:43:38,919 - #12 return
INFO  13:43:38,920 - #43 10
INFO  13:43:38,920 - #33 ;
INFO  13:43:38,921 - #41 }
INFO  13:43:38,921 - #13 void
INFO  13:43:38,921 - #44 main
INFO  13:43:38,922 - #36 (
INFO  13:43:38,922 - #37 )
INFO  13:43:38,923 - #44 int
INFO  13:43:38,923 - #44 k
INFO  13:43:38,923 - #33 ;
INFO  13:43:38,923 - #40 {
INFO  13:43:38,923 - #14 for
INFO  13:43:38,923 - #36 (
INFO  13:43:38,923 - #44 i
INFO  13:43:38,923 - #30 =
INFO  13:43:38,923 - #43 0
INFO  13:43:38,924 - #33 ;
INFO  13:43:38,925 - #44 i
INFO  13:43:38,925 - #26 <
INFO  13:43:38,925 - #43 10
INFO  13:43:38,926 - #33 ;
INFO  13:43:38,927 - #44 i
INFO  13:43:38,927 - #31 ++
INFO  13:43:38,927 - #37 )
INFO  13:43:38,927 - #40 {
INFO  13:43:38,928 - #3 break
INFO  13:43:38,928 - #33 ;
INFO  13:43:38,928 - #41 }
INFO  13:43:38,928 - #41 }
INFO  13:43:38,929 - #41 }
INFO  13:43:38,960 - Info on line: 16: Detected usage of global variable i.
INFO  13:43:38,960 - Info on line: 16: Detected usage of global variable i.
INFO  13:43:38,961 - Info on line: 16: Detected usage of global variable i.
INFO  13:43:38,961 - Info on line 16: Detected for loop.
INFO  13:44:01,897 - #2 program
INFO  13:44:01,898 - #44 prg
INFO  13:44:01,898 - #44 int
INFO  13:44:01,899 - #44 i
INFO  13:44:01,900 - #33 ;
INFO  13:44:01,901 - #44 int
INFO  13:44:01,901 - #44 niz
INFO  13:44:01,901 - #38 [
INFO  13:44:01,901 - #39 ]
INFO  13:44:01,901 - #33 ;
INFO  13:44:01,902 - #40 {
INFO  13:44:01,902 - #44 int
INFO  13:44:01,903 - #44 fja
INFO  13:44:01,903 - #36 (
INFO  13:44:01,903 - #44 int
INFO  13:44:01,903 - #44 i
INFO  13:44:01,903 - #37 )
INFO  13:44:01,904 - #44 int
INFO  13:44:01,906 - #44 p
INFO  13:44:01,906 - #34 ,
INFO  13:44:01,906 - #44 q
INFO  13:44:01,906 - #33 ;
INFO  13:44:01,906 - #40 {
INFO  13:44:01,906 - #12 return
INFO  13:44:01,908 - #43 10
INFO  13:44:01,909 - #33 ;
INFO  13:44:01,909 - #41 }
INFO  13:44:01,910 - #13 void
INFO  13:44:01,910 - #44 main
INFO  13:44:01,911 - #36 (
INFO  13:44:01,911 - #37 )
INFO  13:44:01,912 - #44 int
INFO  13:44:01,912 - #44 k
INFO  13:44:01,912 - #33 ;
INFO  13:44:01,912 - #40 {
INFO  13:44:01,913 - #14 for
INFO  13:44:01,913 - #36 (
INFO  13:44:01,913 - #44 i
INFO  13:44:01,913 - #30 =
INFO  13:44:01,913 - #43 0
INFO  13:44:01,914 - #33 ;
INFO  13:44:01,914 - #44 i
INFO  13:44:01,914 - #26 <
INFO  13:44:01,914 - #43 10
INFO  13:44:01,916 - #33 ;
INFO  13:44:01,916 - #44 i
INFO  13:44:01,916 - #31 ++
INFO  13:44:01,916 - #37 )
INFO  13:44:01,917 - #40 {
INFO  13:44:01,917 - #3 break
INFO  13:44:01,917 - #33 ;
INFO  13:44:01,917 - #41 }
INFO  13:44:01,918 - #41 }
INFO  13:44:01,918 - #41 }
INFO  13:44:01,947 - Info on line: 18: Detected usage of global variable i.
INFO  13:44:01,947 - Info on line: 18: Detected usage of global variable i.
INFO  13:44:01,948 - Info on line: 18: Detected usage of global variable i.
INFO  13:44:01,948 - Info on line 18: Detected for loop.
INFO  13:46:24,191 - #2 program
INFO  13:46:24,191 - #44 prg
INFO  13:46:24,191 - #44 int
INFO  13:46:24,193 - #44 i
INFO  13:46:24,194 - #33 ;
INFO  13:46:24,196 - #44 int
INFO  13:46:24,196 - #44 niz
INFO  13:46:24,196 - #38 [
INFO  13:46:24,197 - #39 ]
INFO  13:46:24,197 - #33 ;
INFO  13:46:24,198 - #40 {
INFO  13:46:24,198 - #44 int
INFO  13:46:24,198 - #44 fja
INFO  13:46:24,199 - #36 (
INFO  13:46:24,199 - #44 int
INFO  13:46:24,199 - #44 i
INFO  13:46:24,199 - #37 )
INFO  13:46:24,201 - #44 int
INFO  13:46:24,203 - #44 p
INFO  13:46:24,203 - #34 ,
INFO  13:46:24,203 - #44 q
INFO  13:46:24,203 - #33 ;
INFO  13:46:24,203 - #40 {
INFO  13:46:24,204 - #44 i
INFO  13:46:24,204 - #30 =
INFO  13:46:24,205 - #43 10
INFO  13:46:24,207 - #33 ;
INFO  13:46:24,208 - #44 p
INFO  13:46:24,208 - #30 =
INFO  13:46:24,208 - #43 11
INFO  13:46:24,208 - #33 ;
INFO  13:46:24,209 - #12 return
INFO  13:46:24,209 - #43 11
INFO  13:46:24,209 - #33 ;
INFO  13:46:24,209 - #41 }
INFO  13:46:24,209 - #13 void
INFO  13:46:24,210 - #44 main
INFO  13:46:24,210 - #36 (
INFO  13:46:24,210 - #37 )
INFO  13:46:24,211 - #44 int
INFO  13:46:24,211 - #44 k
INFO  13:46:24,211 - #33 ;
INFO  13:46:24,211 - #40 {
INFO  13:46:24,211 - #14 for
INFO  13:46:24,211 - #36 (
INFO  13:46:24,211 - #44 i
INFO  13:46:24,212 - #30 =
INFO  13:46:24,212 - #43 0
INFO  13:46:24,212 - #33 ;
INFO  13:46:24,212 - #44 i
INFO  13:46:24,212 - #26 <
INFO  13:46:24,212 - #43 10
INFO  13:46:24,213 - #33 ;
INFO  13:46:24,215 - #44 i
INFO  13:46:24,215 - #31 ++
INFO  13:46:24,215 - #37 )
INFO  13:46:24,216 - #40 {
INFO  13:46:24,216 - #3 break
INFO  13:46:24,216 - #33 ;
INFO  13:46:24,216 - #41 }
INFO  13:46:24,217 - #41 }
INFO  13:46:24,217 - #41 }
INFO  13:46:24,253 - Info on line: 21: Detected usage of global variable i.
INFO  13:46:24,253 - Info on line: 21: Detected usage of global variable i.
INFO  13:46:24,254 - Info on line: 21: Detected usage of global variable i.
INFO  13:46:24,262 - Info on line 21: Detected for loop.
INFO  13:46:58,360 - #2 program
INFO  13:46:58,362 - #44 prg
INFO  13:46:58,362 - #44 int
INFO  13:46:58,363 - #44 i
INFO  13:46:58,363 - #33 ;
INFO  13:46:58,364 - #44 int
INFO  13:46:58,365 - #44 niz
INFO  13:46:58,365 - #38 [
INFO  13:46:58,365 - #39 ]
INFO  13:46:58,365 - #33 ;
INFO  13:46:58,366 - #40 {
INFO  13:46:58,366 - #44 int
INFO  13:46:58,366 - #44 fja
INFO  13:46:58,367 - #36 (
INFO  13:46:58,367 - #44 int
INFO  13:46:58,367 - #44 i
INFO  13:46:58,367 - #37 )
INFO  13:46:58,368 - #44 int
INFO  13:46:58,371 - #44 p
INFO  13:46:58,371 - #34 ,
INFO  13:46:58,371 - #44 q
INFO  13:46:58,371 - #33 ;
INFO  13:46:58,371 - #40 {
INFO  13:46:58,371 - #44 i
INFO  13:46:58,372 - #30 =
INFO  13:46:58,372 - #43 10
INFO  13:46:58,374 - #33 ;
INFO  13:46:58,375 - #44 p
INFO  13:46:58,375 - #30 =
INFO  13:46:58,376 - #43 11
INFO  13:46:58,376 - #33 ;
INFO  13:46:58,376 - #12 return
INFO  13:46:58,376 - #43 11
INFO  13:46:58,376 - #33 ;
INFO  13:46:58,376 - #41 }
INFO  13:46:58,376 - #13 void
INFO  13:46:58,377 - #44 main
INFO  13:46:58,378 - #36 (
INFO  13:46:58,378 - #37 )
INFO  13:46:58,378 - #44 int
INFO  13:46:58,378 - #44 k
INFO  13:46:58,378 - #33 ;
INFO  13:46:58,379 - #40 {
INFO  13:46:58,379 - #14 for
INFO  13:46:58,379 - #36 (
INFO  13:46:58,379 - #44 i
INFO  13:46:58,379 - #30 =
INFO  13:46:58,379 - #43 0
INFO  13:46:58,379 - #33 ;
INFO  13:46:58,379 - #44 i
INFO  13:46:58,379 - #26 <
INFO  13:46:58,380 - #43 10
INFO  13:46:58,381 - #33 ;
INFO  13:46:58,381 - #44 i
INFO  13:46:58,382 - #31 ++
INFO  13:46:58,382 - #37 )
INFO  13:46:58,382 - #40 {
INFO  13:46:58,382 - #3 break
INFO  13:46:58,382 - #33 ;
INFO  13:46:58,382 - #41 }
INFO  13:46:58,383 - #41 }
INFO  13:46:58,384 - #41 }
INFO  13:46:58,411 - Info on line: 11: Detected usage of global variable i.
INFO  13:46:58,411 - Info on line: 12: Detected usage of global variable p.
INFO  13:46:58,412 - Info on line: 21: Detected usage of global variable i.
INFO  13:46:58,419 - Info on line: 21: Detected usage of global variable i.
INFO  13:46:58,419 - Info on line: 21: Detected usage of global variable i.
INFO  13:46:58,419 - Info on line 21: Detected for loop.
INFO  13:49:44,339 - #2 program
INFO  13:49:44,340 - #44 prg
INFO  13:49:44,341 - #44 int
INFO  13:49:44,342 - #44 i
INFO  13:49:44,344 - #33 ;
INFO  13:49:44,347 - #44 int
INFO  13:49:44,347 - #44 niz
INFO  13:49:44,348 - #38 [
INFO  13:49:44,348 - #39 ]
INFO  13:49:44,348 - #33 ;
INFO  13:49:44,349 - #40 {
INFO  13:49:44,349 - #44 int
INFO  13:49:44,350 - #44 fja
INFO  13:49:44,350 - #36 (
INFO  13:49:44,351 - #44 int
INFO  13:49:44,351 - #44 i
INFO  13:49:44,351 - #37 )
INFO  13:49:44,352 - #44 int
INFO  13:49:44,355 - #44 p
INFO  13:49:44,355 - #34 ,
INFO  13:49:44,355 - #44 q
INFO  13:49:44,356 - #33 ;
INFO  13:49:44,356 - #40 {
INFO  13:49:44,356 - #44 i
INFO  13:49:44,357 - #30 =
INFO  13:49:44,357 - #43 10
INFO  13:49:44,360 - #33 ;
INFO  13:49:44,361 - #44 p
INFO  13:49:44,361 - #30 =
INFO  13:49:44,362 - #43 11
INFO  13:49:44,362 - #33 ;
INFO  13:49:44,362 - #12 return
INFO  13:49:44,362 - #43 11
INFO  13:49:44,362 - #33 ;
INFO  13:49:44,363 - #41 }
INFO  13:49:44,363 - #13 void
INFO  13:49:44,363 - #44 main
INFO  13:49:44,364 - #36 (
INFO  13:49:44,364 - #37 )
INFO  13:49:44,365 - #44 int
INFO  13:49:44,365 - #44 k
INFO  13:49:44,365 - #33 ;
INFO  13:49:44,365 - #40 {
INFO  13:49:44,365 - #44 k
INFO  13:49:44,365 - #30 =
INFO  13:49:44,365 - #44 fja
INFO  13:49:44,365 - #36 (
INFO  13:49:44,365 - #37 )
INFO  13:49:44,366 - #33 ;
INFO  13:49:44,366 - #41 }
INFO  13:49:44,366 - #41 }
INFO  13:49:44,399 - Info on line: 11: Detected usage of global variable i.
INFO  13:49:44,400 - Info on line: 12: Detected usage of global variable p.
INFO  13:49:44,401 - Info on line: 21: Detected usage of global variable k.
INFO  13:50:59,985 - #2 program
INFO  13:50:59,985 - #44 prg
INFO  13:50:59,985 - #44 int
INFO  13:50:59,987 - #44 i
INFO  13:50:59,989 - #33 ;
INFO  13:50:59,990 - #44 int
INFO  13:50:59,990 - #44 niz
INFO  13:50:59,990 - #38 [
INFO  13:50:59,990 - #39 ]
INFO  13:50:59,990 - #33 ;
INFO  13:50:59,991 - #40 {
INFO  13:50:59,991 - #44 int
INFO  13:50:59,991 - #44 fja
INFO  13:50:59,991 - #36 (
INFO  13:50:59,991 - #44 int
INFO  13:50:59,992 - #44 i
INFO  13:50:59,992 - #37 )
INFO  13:50:59,993 - #44 int
INFO  13:50:59,994 - #44 p
INFO  13:50:59,994 - #34 ,
INFO  13:50:59,994 - #44 q
INFO  13:50:59,994 - #33 ;
INFO  13:50:59,994 - #40 {
INFO  13:50:59,995 - #44 i
INFO  13:50:59,995 - #30 =
INFO  13:50:59,996 - #43 10
INFO  13:50:59,997 - #33 ;
INFO  13:50:59,997 - #44 p
INFO  13:50:59,999 - #30 =
INFO  13:50:59,999 - #43 11
INFO  13:50:59,999 - #33 ;
INFO  13:50:59,999 - #12 return
INFO  13:50:59,999 - #43 11
INFO  13:50:59,999 - #33 ;
INFO  13:50:59,999 - #41 }
INFO  13:50:59,999 - #13 void
INFO  13:51:00,000 - #44 main
INFO  13:51:00,000 - #36 (
INFO  13:51:00,000 - #37 )
INFO  13:51:00,000 - #44 int
INFO  13:51:00,000 - #44 k
INFO  13:51:00,001 - #33 ;
INFO  13:51:00,001 - #40 {
INFO  13:51:00,001 - #44 k
INFO  13:51:00,001 - #30 =
INFO  13:51:00,001 - #44 fja
INFO  13:51:00,001 - #36 (
INFO  13:51:00,001 - #37 )
INFO  13:51:00,002 - #33 ;
INFO  13:51:00,002 - #41 }
INFO  13:51:00,002 - #41 }
INFO  13:51:00,038 - Info on line: 11: Detected usage of global variable i.
INFO  13:51:00,039 - Info on line: 12: Detected usage of global variable p.
INFO  13:51:00,041 - Info on line: 21: Detected usage of global variable k.
INFO  13:51:42,062 - #2 program
INFO  13:51:42,064 - #44 prg
INFO  13:51:42,064 - #44 int
INFO  13:51:42,065 - #44 i
INFO  13:51:42,065 - #33 ;
INFO  13:51:42,066 - #44 int
INFO  13:51:42,067 - #44 niz
INFO  13:51:42,067 - #38 [
INFO  13:51:42,067 - #39 ]
INFO  13:51:42,067 - #33 ;
INFO  13:51:42,068 - #40 {
INFO  13:51:42,068 - #44 int
INFO  13:51:42,068 - #44 fja
INFO  13:51:42,069 - #36 (
INFO  13:51:42,069 - #44 int
INFO  13:51:42,069 - #44 i
INFO  13:51:42,069 - #37 )
INFO  13:51:42,070 - #44 int
INFO  13:51:42,071 - #44 p
INFO  13:51:42,071 - #34 ,
INFO  13:51:42,071 - #44 q
INFO  13:51:42,072 - #33 ;
INFO  13:51:42,072 - #40 {
INFO  13:51:42,072 - #44 i
INFO  13:51:42,073 - #30 =
INFO  13:51:42,073 - #43 10
INFO  13:51:42,074 - #33 ;
INFO  13:51:42,074 - #44 p
INFO  13:51:42,076 - #30 =
INFO  13:51:42,076 - #43 11
INFO  13:51:42,076 - #33 ;
INFO  13:51:42,076 - #12 return
INFO  13:51:42,076 - #43 11
INFO  13:51:42,076 - #33 ;
INFO  13:51:42,076 - #41 }
INFO  13:51:42,076 - #13 void
INFO  13:51:42,077 - #44 main
INFO  13:51:42,077 - #36 (
INFO  13:51:42,077 - #37 )
INFO  13:51:42,078 - #44 int
INFO  13:51:42,078 - #44 k
INFO  13:51:42,078 - #33 ;
INFO  13:51:42,078 - #40 {
INFO  13:51:42,078 - #44 fja
INFO  13:51:42,078 - #36 (
INFO  13:51:42,078 - #37 )
INFO  13:51:42,079 - #33 ;
INFO  13:51:42,080 - #41 }
INFO  13:51:42,080 - #41 }
INFO  13:51:42,102 - Info on line: 11: Detected usage of global variable i.
INFO  13:51:42,103 - Info on line: 12: Detected usage of global variable p.
ERROR 13:51:42,104 - Error on line 21: Not enough actual parameters.
INFO  13:51:42,104 - Info on line 21: Detected function call for function fja.
INFO  13:52:18,729 - #2 program
INFO  13:52:18,729 - #44 prg
INFO  13:52:18,729 - #44 int
INFO  13:52:18,730 - #44 i
INFO  13:52:18,731 - #33 ;
INFO  13:52:18,733 - #44 int
INFO  13:52:18,733 - #44 niz
INFO  13:52:18,733 - #38 [
INFO  13:52:18,733 - #39 ]
INFO  13:52:18,733 - #33 ;
INFO  13:52:18,734 - #40 {
INFO  13:52:18,734 - #44 int
INFO  13:52:18,735 - #44 fja
INFO  13:52:18,735 - #36 (
INFO  13:52:18,735 - #44 int
INFO  13:52:18,735 - #44 i
INFO  13:52:18,735 - #37 )
INFO  13:52:18,736 - #44 int
INFO  13:52:18,737 - #44 p
INFO  13:52:18,737 - #34 ,
INFO  13:52:18,738 - #44 q
INFO  13:52:18,738 - #33 ;
INFO  13:52:18,738 - #40 {
INFO  13:52:18,738 - #44 i
INFO  13:52:18,739 - #30 =
INFO  13:52:18,739 - #43 10
INFO  13:52:18,741 - #33 ;
INFO  13:52:18,742 - #44 p
INFO  13:52:18,743 - #30 =
INFO  13:52:18,743 - #43 11
INFO  13:52:18,743 - #33 ;
INFO  13:52:18,743 - #12 return
INFO  13:52:18,743 - #43 11
INFO  13:52:18,743 - #33 ;
INFO  13:52:18,743 - #41 }
INFO  13:52:18,744 - #13 void
INFO  13:52:18,744 - #44 main
INFO  13:52:18,745 - #36 (
INFO  13:52:18,745 - #37 )
INFO  13:52:18,745 - #44 int
INFO  13:52:18,745 - #44 k
INFO  13:52:18,746 - #33 ;
INFO  13:52:18,746 - #40 {
INFO  13:52:18,746 - #44 k
INFO  13:52:18,746 - #30 =
INFO  13:52:18,746 - #44 fja
INFO  13:52:18,746 - #36 (
INFO  13:52:18,746 - #37 )
INFO  13:52:18,747 - #33 ;
INFO  13:52:18,747 - #41 }
INFO  13:52:18,747 - #41 }
INFO  13:52:18,775 - Info on line: 11: Detected usage of global variable i.
INFO  13:52:18,776 - Info on line: 12: Detected usage of global variable p.
INFO  13:52:18,776 - Info on line: 21: Detected usage of global variable k.
INFO  13:53:10,498 - #2 program
INFO  13:53:10,499 - #44 prg
INFO  13:53:10,499 - #44 int
INFO  13:53:10,500 - #44 i
INFO  13:53:10,502 - #33 ;
INFO  13:53:10,503 - #44 int
INFO  13:53:10,504 - #44 niz
INFO  13:53:10,504 - #38 [
INFO  13:53:10,504 - #39 ]
INFO  13:53:10,504 - #33 ;
INFO  13:53:10,505 - #40 {
INFO  13:53:10,505 - #44 int
INFO  13:53:10,506 - #44 fja
INFO  13:53:10,507 - #36 (
INFO  13:53:10,507 - #44 int
INFO  13:53:10,507 - #44 i
INFO  13:53:10,507 - #37 )
INFO  13:53:10,508 - #44 int
INFO  13:53:10,509 - #44 p
INFO  13:53:10,509 - #34 ,
INFO  13:53:10,509 - #44 q
INFO  13:53:10,509 - #33 ;
INFO  13:53:10,509 - #40 {
INFO  13:53:10,510 - #44 i
INFO  13:53:10,511 - #30 =
INFO  13:53:10,511 - #43 10
INFO  13:53:10,513 - #33 ;
INFO  13:53:10,514 - #44 p
INFO  13:53:10,514 - #30 =
INFO  13:53:10,514 - #43 11
INFO  13:53:10,515 - #33 ;
INFO  13:53:10,515 - #12 return
INFO  13:53:10,515 - #43 11
INFO  13:53:10,515 - #33 ;
INFO  13:53:10,515 - #41 }
INFO  13:53:10,515 - #13 void
INFO  13:53:10,516 - #44 main
INFO  13:53:10,517 - #36 (
INFO  13:53:10,517 - #37 )
INFO  13:53:10,518 - #44 int
INFO  13:53:10,518 - #44 k
INFO  13:53:10,518 - #33 ;
INFO  13:53:10,518 - #40 {
INFO  13:53:10,518 - #44 fja
INFO  13:53:10,518 - #36 (
INFO  13:53:10,519 - #37 )
INFO  13:53:10,520 - #33 ;
INFO  13:53:10,520 - #41 }
INFO  13:53:10,520 - #41 }
INFO  13:53:10,550 - Info on line: 11: Detected usage of global variable i.
INFO  13:53:10,551 - Info on line: 12: Detected usage of global variable p.
ERROR 13:53:10,552 - Error on line 21: Not enough actual parameters.
INFO  13:53:10,552 - Info on line 21: Detected function call for function fja.
INFO  13:53:21,508 - #2 program
INFO  13:53:21,510 - #44 prg
INFO  13:53:21,510 - #44 int
INFO  13:53:21,511 - #44 i
INFO  13:53:21,513 - #33 ;
INFO  13:53:21,514 - #44 int
INFO  13:53:21,515 - #44 niz
INFO  13:53:21,515 - #38 [
INFO  13:53:21,515 - #39 ]
INFO  13:53:21,515 - #33 ;
INFO  13:53:21,516 - #40 {
INFO  13:53:21,516 - #44 int
INFO  13:53:21,516 - #44 fja
INFO  13:53:21,517 - #36 (
INFO  13:53:21,517 - #44 int
INFO  13:53:21,517 - #44 i
INFO  13:53:21,517 - #37 )
INFO  13:53:21,518 - #44 int
INFO  13:53:21,520 - #44 p
INFO  13:53:21,520 - #34 ,
INFO  13:53:21,520 - #44 q
INFO  13:53:21,520 - #33 ;
INFO  13:53:21,521 - #40 {
INFO  13:53:21,522 - #44 i
INFO  13:53:21,522 - #30 =
INFO  13:53:21,523 - #43 10
INFO  13:53:21,524 - #33 ;
INFO  13:53:21,525 - #44 p
INFO  13:53:21,525 - #30 =
INFO  13:53:21,525 - #43 11
INFO  13:53:21,525 - #33 ;
INFO  13:53:21,526 - #12 return
INFO  13:53:21,526 - #43 11
INFO  13:53:21,526 - #33 ;
INFO  13:53:21,526 - #41 }
INFO  13:53:21,526 - #13 void
INFO  13:53:21,526 - #44 main
INFO  13:53:21,527 - #36 (
INFO  13:53:21,527 - #37 )
INFO  13:53:21,527 - #44 int
INFO  13:53:21,527 - #44 k
INFO  13:53:21,527 - #33 ;
INFO  13:53:21,527 - #40 {
INFO  13:53:21,527 - #44 fja
INFO  13:53:21,527 - #36 (
INFO  13:53:21,528 - #42 true
INFO  13:53:21,528 - #37 )
INFO  13:53:21,529 - #33 ;
INFO  13:53:21,530 - #41 }
INFO  13:53:21,530 - #41 }
INFO  13:53:21,564 - Info on line: 11: Detected usage of global variable i.
INFO  13:53:21,565 - Info on line: 12: Detected usage of global variable p.
ERROR 13:53:21,566 - Error on line 11: Type mismatch in function call for parameter i.
INFO  13:53:21,566 - Info on line 21: Detected function call for function fja.
INFO  13:53:32,888 - #2 program
INFO  13:53:32,889 - #44 prg
INFO  13:53:32,889 - #44 int
INFO  13:53:32,890 - #44 i
INFO  13:53:32,891 - #33 ;
INFO  13:53:32,892 - #44 int
INFO  13:53:32,893 - #44 niz
INFO  13:53:32,893 - #38 [
INFO  13:53:32,893 - #39 ]
INFO  13:53:32,893 - #33 ;
INFO  13:53:32,893 - #40 {
INFO  13:53:32,893 - #44 int
INFO  13:53:32,894 - #44 fja
INFO  13:53:32,894 - #36 (
INFO  13:53:32,895 - #44 int
INFO  13:53:32,895 - #44 i
INFO  13:53:32,895 - #37 )
INFO  13:53:32,897 - #44 int
INFO  13:53:32,899 - #44 p
INFO  13:53:32,899 - #34 ,
INFO  13:53:32,899 - #44 q
INFO  13:53:32,899 - #33 ;
INFO  13:53:32,899 - #40 {
INFO  13:53:32,900 - #44 i
INFO  13:53:32,901 - #30 =
INFO  13:53:32,901 - #43 10
INFO  13:53:32,902 - #33 ;
INFO  13:53:32,904 - #44 p
INFO  13:53:32,904 - #30 =
INFO  13:53:32,904 - #43 11
INFO  13:53:32,905 - #33 ;
INFO  13:53:32,905 - #12 return
INFO  13:53:32,905 - #43 11
INFO  13:53:32,905 - #33 ;
INFO  13:53:32,905 - #41 }
INFO  13:53:32,905 - #13 void
INFO  13:53:32,906 - #44 main
INFO  13:53:32,907 - #36 (
INFO  13:53:32,907 - #37 )
INFO  13:53:32,907 - #44 int
INFO  13:53:32,908 - #44 k
INFO  13:53:32,908 - #33 ;
INFO  13:53:32,908 - #40 {
INFO  13:53:32,908 - #44 fja
INFO  13:53:32,908 - #36 (
INFO  13:53:32,909 - #44 k
INFO  13:53:32,909 - #37 )
INFO  13:53:32,909 - #33 ;
INFO  13:53:32,910 - #41 }
INFO  13:53:32,910 - #41 }
INFO  13:53:32,938 - Info on line: 11: Detected usage of global variable i.
INFO  13:53:32,939 - Info on line: 12: Detected usage of global variable p.
INFO  13:53:32,940 - Info on line: 21: Detected usage of global variable k.
INFO  13:53:32,941 - Info on line 21: Detected function call for function fja.
INFO  13:53:41,057 - #2 program
INFO  13:53:41,058 - #44 prg
INFO  13:53:41,058 - #44 int
INFO  13:53:41,059 - #44 i
INFO  13:53:41,060 - #33 ;
INFO  13:53:41,061 - #44 int
INFO  13:53:41,062 - #44 niz
INFO  13:53:41,062 - #38 [
INFO  13:53:41,062 - #39 ]
INFO  13:53:41,062 - #33 ;
INFO  13:53:41,062 - #40 {
INFO  13:53:41,063 - #44 int
INFO  13:53:41,063 - #44 fja
INFO  13:53:41,063 - #36 (
INFO  13:53:41,064 - #44 int
INFO  13:53:41,064 - #44 i
INFO  13:53:41,064 - #37 )
INFO  13:53:41,065 - #44 int
INFO  13:53:41,067 - #44 p
INFO  13:53:41,067 - #34 ,
INFO  13:53:41,067 - #44 q
INFO  13:53:41,067 - #33 ;
INFO  13:53:41,067 - #40 {
INFO  13:53:41,067 - #44 i
INFO  13:53:41,068 - #30 =
INFO  13:53:41,068 - #43 10
INFO  13:53:41,070 - #33 ;
INFO  13:53:41,071 - #44 p
INFO  13:53:41,071 - #30 =
INFO  13:53:41,071 - #43 11
INFO  13:53:41,071 - #33 ;
INFO  13:53:41,071 - #12 return
INFO  13:53:41,071 - #43 11
INFO  13:53:41,071 - #33 ;
INFO  13:53:41,071 - #41 }
INFO  13:53:41,071 - #13 void
INFO  13:53:41,072 - #44 main
INFO  13:53:41,072 - #36 (
INFO  13:53:41,072 - #37 )
INFO  13:53:41,073 - #44 int
INFO  13:53:41,073 - #44 k
INFO  13:53:41,073 - #33 ;
INFO  13:53:41,073 - #40 {
INFO  13:53:41,073 - #44 fja
INFO  13:53:41,073 - #36 (
INFO  13:53:41,073 - #44 k
INFO  13:53:41,073 - #34 ,
INFO  13:53:41,074 - #44 k
INFO  13:53:41,074 - #37 )
INFO  13:53:41,074 - #33 ;
INFO  13:53:41,074 - #41 }
INFO  13:53:41,074 - #41 }
INFO  13:53:41,103 - Info on line: 11: Detected usage of global variable i.
INFO  13:53:41,103 - Info on line: 12: Detected usage of global variable p.
INFO  13:53:41,104 - Info on line: 21: Detected usage of global variable k.
INFO  13:53:41,105 - Info on line: 21: Detected usage of global variable k.
ERROR 13:53:41,105 - Error on line 13: More actual parameters than formal parameters.
INFO  13:53:41,105 - Info on line 21: Detected function call for function fja.
INFO  13:54:12,244 - #2 program
INFO  13:54:12,245 - #44 prg
INFO  13:54:12,245 - #44 int
INFO  13:54:12,247 - #44 i
INFO  13:54:12,248 - #33 ;
INFO  13:54:12,249 - #44 int
INFO  13:54:12,250 - #44 niz
INFO  13:54:12,250 - #38 [
INFO  13:54:12,250 - #39 ]
INFO  13:54:12,250 - #33 ;
INFO  13:54:12,251 - #40 {
INFO  13:54:12,251 - #44 int
INFO  13:54:12,252 - #44 fja
INFO  13:54:12,252 - #36 (
INFO  13:54:12,252 - #44 int
INFO  13:54:12,252 - #44 i
INFO  13:54:12,252 - #37 )
INFO  13:54:12,254 - #44 int
INFO  13:54:12,256 - #44 p
INFO  13:54:12,256 - #34 ,
INFO  13:54:12,256 - #44 q
INFO  13:54:12,256 - #33 ;
INFO  13:54:12,256 - #40 {
INFO  13:54:12,256 - #44 i
INFO  13:54:12,257 - #30 =
INFO  13:54:12,257 - #43 10
INFO  13:54:12,259 - #33 ;
INFO  13:54:12,259 - #44 p
INFO  13:54:12,260 - #30 =
INFO  13:54:12,260 - #43 11
INFO  13:54:12,260 - #33 ;
INFO  13:54:12,260 - #12 return
INFO  13:54:12,260 - #43 11
INFO  13:54:12,260 - #33 ;
INFO  13:54:12,260 - #41 }
INFO  13:54:12,260 - #13 void
INFO  13:54:12,261 - #44 main
INFO  13:54:12,262 - #36 (
INFO  13:54:12,262 - #37 )
INFO  13:54:12,262 - #44 int
INFO  13:54:12,263 - #44 k
INFO  13:54:12,263 - #33 ;
INFO  13:54:12,263 - #40 {
INFO  13:54:12,263 - #44 fja
INFO  13:54:12,263 - #36 (
INFO  13:54:12,264 - #44 k
INFO  13:54:12,264 - #34 ,
INFO  13:54:12,265 - #44 k
INFO  13:54:12,265 - #37 )
INFO  13:54:12,265 - #33 ;
INFO  13:54:12,265 - #41 }
INFO  13:54:12,266 - #41 }
INFO  13:54:12,295 - Info on line: 11: Detected usage of global variable i.
INFO  13:54:12,296 - Info on line: 12: Detected usage of global variable p.
INFO  13:54:12,297 - Info on line: 21: Detected usage of global variable k.
INFO  13:54:12,298 - Info on line: 21: Detected usage of global variable k.
ERROR 13:54:12,298 - Error on line 13: Too much parameters passed to function.
INFO  13:54:12,298 - Info on line 21: Detected function call for function fja.
INFO  14:02:27,680 - #2 program
INFO  14:02:27,681 - #44 prg
INFO  14:02:27,681 - #44 int
INFO  14:02:27,682 - #44 i
INFO  14:02:27,683 - #33 ;
INFO  14:02:27,685 - #44 int
INFO  14:02:27,685 - #44 niz
INFO  14:02:27,685 - #38 [
INFO  14:02:27,685 - #39 ]
INFO  14:02:27,685 - #33 ;
INFO  14:02:27,686 - #40 {
INFO  14:02:27,686 - #44 int
INFO  14:02:27,688 - #44 fja
INFO  14:02:27,688 - #36 (
INFO  14:02:27,688 - #44 int
INFO  14:02:27,688 - #44 i
INFO  14:02:27,688 - #37 )
INFO  14:02:27,689 - #44 int
INFO  14:02:27,691 - #44 p
INFO  14:02:27,691 - #34 ,
INFO  14:02:27,691 - #44 q
INFO  14:02:27,691 - #33 ;
INFO  14:02:27,692 - #40 {
INFO  14:02:27,692 - #44 i
INFO  14:02:27,693 - #30 =
INFO  14:02:27,693 - #43 10
INFO  14:02:27,694 - #33 ;
INFO  14:02:27,695 - #44 p
INFO  14:02:27,696 - #30 =
INFO  14:02:27,696 - #43 11
INFO  14:02:27,696 - #33 ;
INFO  14:02:27,696 - #12 return
INFO  14:02:27,696 - #43 11
INFO  14:02:27,696 - #33 ;
INFO  14:02:27,696 - #41 }
INFO  14:02:27,697 - #13 void
INFO  14:02:27,697 - #44 main
INFO  14:02:27,698 - #36 (
INFO  14:02:27,698 - #37 )
INFO  14:02:27,698 - #44 int
INFO  14:02:27,699 - #44 k
INFO  14:02:27,699 - #33 ;
INFO  14:02:27,699 - #40 {
INFO  14:02:27,699 - #44 fja
INFO  14:02:27,699 - #36 (
INFO  14:02:27,700 - #44 k
INFO  14:02:27,700 - #34 ,
INFO  14:02:27,700 - #44 k
INFO  14:02:27,701 - #37 )
INFO  14:02:27,702 - #33 ;
INFO  14:02:27,702 - #41 }
INFO  14:02:27,702 - #41 }
INFO  14:02:27,728 - Info on line: 11: Detected usage of global variable i.
INFO  14:02:27,728 - Info on line: 12: Detected usage of global variable p.
INFO  14:02:27,729 - Info on line: 21: Detected usage of global variable k.
INFO  14:02:27,729 - Info on line: 21: Detected usage of global variable k.
ERROR 14:02:27,730 - Error on line 13: Too much parameters passed to function.
INFO  14:02:27,730 - Info on line 21: Detected function call for function fja.
INFO  14:02:40,698 - #2 program
INFO  14:02:40,699 - #44 prg
INFO  14:02:40,699 - #44 int
INFO  14:02:40,700 - #44 i
INFO  14:02:40,702 - #33 ;
INFO  14:02:40,703 - #44 int
INFO  14:02:40,703 - #44 niz
INFO  14:02:40,703 - #38 [
INFO  14:02:40,703 - #39 ]
INFO  14:02:40,703 - #33 ;
INFO  14:02:40,704 - #40 {
INFO  14:02:40,704 - #44 int
INFO  14:02:40,705 - #44 fja
INFO  14:02:40,706 - #36 (
INFO  14:02:40,706 - #44 int
INFO  14:02:40,706 - #44 i
INFO  14:02:40,706 - #37 )
INFO  14:02:40,707 - #44 int
INFO  14:02:40,709 - #44 p
INFO  14:02:40,709 - #34 ,
INFO  14:02:40,709 - #44 q
INFO  14:02:40,709 - #33 ;
INFO  14:02:40,709 - #40 {
INFO  14:02:40,710 - #44 i
INFO  14:02:40,710 - #30 =
INFO  14:02:40,711 - #43 10
INFO  14:02:40,712 - #33 ;
INFO  14:02:40,713 - #44 p
INFO  14:02:40,714 - #30 =
INFO  14:02:40,714 - #43 11
INFO  14:02:40,714 - #33 ;
INFO  14:02:40,714 - #12 return
INFO  14:02:40,714 - #43 11
INFO  14:02:40,714 - #33 ;
INFO  14:02:40,714 - #41 }
INFO  14:02:40,715 - #13 void
INFO  14:02:40,715 - #44 main
INFO  14:02:40,716 - #36 (
INFO  14:02:40,716 - #37 )
INFO  14:02:40,717 - #44 int
INFO  14:02:40,717 - #44 k
INFO  14:02:40,717 - #33 ;
INFO  14:02:40,717 - #40 {
INFO  14:02:40,717 - #44 k
INFO  14:02:40,717 - #30 =
INFO  14:02:40,717 - #44 fja
INFO  14:02:40,717 - #36 (
INFO  14:02:40,718 - #44 k
INFO  14:02:40,718 - #34 ,
INFO  14:02:40,718 - #44 k
INFO  14:02:40,718 - #37 )
INFO  14:02:40,718 - #33 ;
INFO  14:02:40,719 - #41 }
INFO  14:02:40,719 - #41 }
INFO  14:02:40,737 - Info on line: 11: Detected usage of global variable i.
INFO  14:02:40,738 - Info on line: 12: Detected usage of global variable p.
INFO  14:02:40,739 - Info on line: 21: Detected usage of global variable k.
INFO  14:02:40,739 - Info on line: 21: Detected usage of global variable k.
INFO  14:02:40,739 - Info on line: 21: Detected usage of global variable k.
ERROR 14:02:40,739 - Error on line 17: Too much parameters passed to function.
INFO  14:02:40,739 - Info on line 21: Detected function call for function fja.
INFO  14:03:22,028 - #2 program
INFO  14:03:22,029 - #44 prg
INFO  14:03:22,029 - #44 int
INFO  14:03:22,030 - #44 i
INFO  14:03:22,031 - #33 ;
INFO  14:03:22,033 - #44 int
INFO  14:03:22,033 - #44 niz
INFO  14:03:22,033 - #38 [
INFO  14:03:22,033 - #39 ]
INFO  14:03:22,033 - #33 ;
INFO  14:03:22,033 - #40 {
INFO  14:03:22,033 - #44 int
INFO  14:03:22,034 - #44 fja
INFO  14:03:22,034 - #36 (
INFO  14:03:22,034 - #44 int
INFO  14:03:22,034 - #44 i
INFO  14:03:22,035 - #37 )
INFO  14:03:22,035 - #44 int
INFO  14:03:22,038 - #44 p
INFO  14:03:22,038 - #34 ,
INFO  14:03:22,038 - #44 q
INFO  14:03:22,038 - #33 ;
INFO  14:03:22,038 - #40 {
INFO  14:03:22,038 - #44 i
INFO  14:03:22,039 - #30 =
INFO  14:03:22,040 - #43 10
INFO  14:03:22,041 - #33 ;
INFO  14:03:22,042 - #44 p
INFO  14:03:22,043 - #30 =
INFO  14:03:22,043 - #43 11
INFO  14:03:22,043 - #33 ;
INFO  14:03:22,043 - #12 return
INFO  14:03:22,043 - #43 11
INFO  14:03:22,043 - #33 ;
INFO  14:03:22,043 - #41 }
INFO  14:03:22,044 - #13 void
INFO  14:03:22,044 - #44 main
INFO  14:03:22,045 - #36 (
INFO  14:03:22,045 - #37 )
INFO  14:03:22,046 - #44 int
INFO  14:03:22,046 - #44 k
INFO  14:03:22,047 - #33 ;
INFO  14:03:22,047 - #40 {
INFO  14:03:22,047 - #44 k
INFO  14:03:22,047 - #30 =
INFO  14:03:22,047 - #44 fja
INFO  14:03:22,047 - #36 (
INFO  14:03:22,048 - #44 k
INFO  14:03:22,048 - #34 ,
INFO  14:03:22,048 - #44 k
INFO  14:03:22,049 - #37 )
INFO  14:03:22,049 - #33 ;
INFO  14:03:22,049 - #41 }
INFO  14:03:22,049 - #41 }
INFO  14:03:22,078 - Info on line: 11: Detected usage of global variable i.
INFO  14:03:22,079 - Info on line: 12: Detected usage of global variable p.
INFO  14:03:22,079 - Info on line: 21: Detected usage of global variable k.
INFO  14:03:22,081 - Info on line: 21: Detected usage of global variable k.
INFO  14:03:22,081 - Info on line: 21: Detected usage of global variable k.
ERROR 14:03:22,081 - Error on line 17: Too much parameters passed to function.
INFO  14:03:22,082 - Info on line 21: Detected function call for function fja.
INFO  14:03:31,944 - #2 program
INFO  14:03:31,944 - #44 prg
INFO  14:03:31,944 - #44 int
INFO  14:03:31,945 - #44 i
INFO  14:03:31,946 - #33 ;
INFO  14:03:31,948 - #44 int
INFO  14:03:31,948 - #44 niz
INFO  14:03:31,948 - #38 [
INFO  14:03:31,948 - #39 ]
INFO  14:03:31,948 - #33 ;
INFO  14:03:31,948 - #40 {
INFO  14:03:31,948 - #44 int
INFO  14:03:31,949 - #44 fja
INFO  14:03:31,949 - #36 (
INFO  14:03:31,949 - #44 int
INFO  14:03:31,949 - #44 i
INFO  14:03:31,950 - #37 )
INFO  14:03:31,951 - #44 int
INFO  14:03:31,953 - #44 p
INFO  14:03:31,953 - #34 ,
INFO  14:03:31,953 - #44 q
INFO  14:03:31,953 - #33 ;
INFO  14:03:31,953 - #40 {
INFO  14:03:31,953 - #44 i
INFO  14:03:31,954 - #30 =
INFO  14:03:31,954 - #43 10
INFO  14:03:31,955 - #33 ;
INFO  14:03:31,956 - #44 p
INFO  14:03:31,956 - #30 =
INFO  14:03:31,957 - #43 11
INFO  14:03:31,957 - #33 ;
INFO  14:03:31,957 - #12 return
INFO  14:03:31,957 - #43 11
INFO  14:03:31,957 - #33 ;
INFO  14:03:31,957 - #41 }
INFO  14:03:31,957 - #13 void
INFO  14:03:31,958 - #44 main
INFO  14:03:31,958 - #36 (
INFO  14:03:31,958 - #37 )
INFO  14:03:31,959 - #44 int
INFO  14:03:31,959 - #44 k
INFO  14:03:31,959 - #33 ;
INFO  14:03:31,959 - #40 {
INFO  14:03:31,960 - #44 k
INFO  14:03:31,960 - #30 =
INFO  14:03:31,960 - #44 fja
INFO  14:03:31,960 - #36 (
INFO  14:03:31,960 - #44 k
INFO  14:03:31,961 - #37 )
INFO  14:03:31,961 - #33 ;
INFO  14:03:31,962 - #41 }
INFO  14:03:31,962 - #41 }
INFO  14:03:31,989 - Info on line: 11: Detected usage of global variable i.
INFO  14:03:31,990 - Info on line: 12: Detected usage of global variable p.
INFO  14:03:31,991 - Info on line: 21: Detected usage of global variable k.
INFO  14:03:31,991 - Info on line: 21: Detected usage of global variable k.
INFO  14:03:31,992 - Info on line 21: Detected function call for function fja.
INFO  14:03:40,180 - #2 program
INFO  14:03:40,181 - #44 prg
INFO  14:03:40,181 - #44 int
INFO  14:03:40,182 - #44 i
INFO  14:03:40,183 - #33 ;
INFO  14:03:40,184 - #44 int
INFO  14:03:40,184 - #44 niz
INFO  14:03:40,185 - #38 [
INFO  14:03:40,185 - #39 ]
INFO  14:03:40,185 - #33 ;
INFO  14:03:40,185 - #40 {
INFO  14:03:40,185 - #44 int
INFO  14:03:40,186 - #44 fja
INFO  14:03:40,186 - #36 (
INFO  14:03:40,186 - #44 int
INFO  14:03:40,186 - #44 i
INFO  14:03:40,186 - #37 )
INFO  14:03:40,187 - #44 int
INFO  14:03:40,189 - #44 p
INFO  14:03:40,189 - #34 ,
INFO  14:03:40,190 - #44 q
INFO  14:03:40,190 - #33 ;
INFO  14:03:40,190 - #40 {
INFO  14:03:40,190 - #44 i
INFO  14:03:40,191 - #30 =
INFO  14:03:40,191 - #43 10
INFO  14:03:40,192 - #33 ;
INFO  14:03:40,193 - #44 p
INFO  14:03:40,194 - #30 =
INFO  14:03:40,194 - #43 11
INFO  14:03:40,194 - #33 ;
INFO  14:03:40,194 - #12 return
INFO  14:03:40,194 - #43 11
INFO  14:03:40,194 - #33 ;
INFO  14:03:40,194 - #41 }
INFO  14:03:40,195 - #13 void
INFO  14:03:40,195 - #44 main
INFO  14:03:40,196 - #36 (
INFO  14:03:40,196 - #37 )
INFO  14:03:40,197 - #44 int
INFO  14:03:40,197 - #44 k
INFO  14:03:40,197 - #33 ;
INFO  14:03:40,197 - #40 {
INFO  14:03:40,198 - #44 k
INFO  14:03:40,198 - #30 =
INFO  14:03:40,198 - #44 fja
INFO  14:03:40,198 - #36 (
INFO  14:03:40,199 - #37 )
INFO  14:03:40,200 - #33 ;
INFO  14:03:40,200 - #41 }
INFO  14:03:40,201 - #41 }
INFO  14:03:40,234 - Info on line: 11: Detected usage of global variable i.
INFO  14:03:40,235 - Info on line: 12: Detected usage of global variable p.
INFO  14:03:40,236 - Info on line: 21: Detected usage of global variable k.
ERROR 14:03:40,236 - Error on line 21: Not enough actual parameters.
INFO  14:03:40,236 - Info on line 21: Detected function call for function fja.
INFO  14:04:02,810 - #2 program
INFO  14:04:02,810 - #44 prg
INFO  14:04:02,811 - #44 int
INFO  14:04:02,812 - #44 i
INFO  14:04:02,814 - #33 ;
INFO  14:04:02,815 - #44 int
INFO  14:04:02,815 - #44 niz
INFO  14:04:02,815 - #38 [
INFO  14:04:02,815 - #39 ]
INFO  14:04:02,816 - #33 ;
INFO  14:04:02,816 - #40 {
INFO  14:04:02,816 - #44 int
INFO  14:04:02,817 - #44 fja
INFO  14:04:02,817 - #36 (
INFO  14:04:02,817 - #44 int
INFO  14:04:02,817 - #44 i
INFO  14:04:02,817 - #37 )
INFO  14:04:02,819 - #44 int
INFO  14:04:02,820 - #44 p
INFO  14:04:02,820 - #34 ,
INFO  14:04:02,820 - #44 q
INFO  14:04:02,820 - #33 ;
INFO  14:04:02,820 - #40 {
INFO  14:04:02,821 - #44 i
INFO  14:04:02,822 - #30 =
INFO  14:04:02,822 - #43 10
INFO  14:04:02,824 - #33 ;
INFO  14:04:02,825 - #44 p
INFO  14:04:02,825 - #30 =
INFO  14:04:02,825 - #43 11
INFO  14:04:02,825 - #33 ;
INFO  14:04:02,825 - #12 return
INFO  14:04:02,825 - #43 11
INFO  14:04:02,825 - #33 ;
INFO  14:04:02,826 - #41 }
INFO  14:04:02,826 - #13 void
INFO  14:04:02,826 - #44 main
INFO  14:04:02,827 - #36 (
INFO  14:04:02,827 - #37 )
INFO  14:04:02,828 - #44 int
INFO  14:04:02,828 - #44 k
INFO  14:04:02,828 - #33 ;
INFO  14:04:02,828 - #44 bool
INFO  14:04:02,828 - #44 b
INFO  14:04:02,828 - #33 ;
INFO  14:04:02,828 - #40 {
INFO  14:04:02,828 - #44 b
INFO  14:04:02,828 - #30 =
INFO  14:04:02,828 - #44 fja
INFO  14:04:02,828 - #36 (
INFO  14:04:02,829 - #37 )
INFO  14:04:02,830 - #33 ;
INFO  14:04:02,830 - #41 }
INFO  14:04:02,830 - #41 }
INFO  14:04:02,859 - Info on line: 11: Detected usage of global variable i.
INFO  14:04:02,860 - Info on line: 12: Detected usage of global variable p.
INFO  14:04:02,861 - Info on line: 22: Detected usage of global variable b.
ERROR 14:04:02,861 - Error on line 22: Not enough actual parameters.
INFO  14:04:02,861 - Info on line 22: Detected function call for function fja.
ERROR 14:04:02,861 - Error on line 22: Types are not compatible.
INFO  14:04:16,810 - #2 program
INFO  14:04:16,810 - #44 prg
INFO  14:04:16,811 - #44 int
INFO  14:04:16,812 - #44 i
INFO  14:04:16,814 - #33 ;
INFO  14:04:16,815 - #44 int
INFO  14:04:16,816 - #44 niz
INFO  14:04:16,816 - #38 [
INFO  14:04:16,817 - #39 ]
INFO  14:04:16,817 - #33 ;
INFO  14:04:16,817 - #40 {
INFO  14:04:16,817 - #44 int
INFO  14:04:16,818 - #44 fja
INFO  14:04:16,818 - #36 (
INFO  14:04:16,819 - #44 int
INFO  14:04:16,819 - #44 i
INFO  14:04:16,819 - #37 )
INFO  14:04:16,820 - #44 int
INFO  14:04:16,822 - #44 p
INFO  14:04:16,822 - #34 ,
INFO  14:04:16,822 - #44 q
INFO  14:04:16,822 - #33 ;
INFO  14:04:16,822 - #40 {
INFO  14:04:16,823 - #44 i
INFO  14:04:16,823 - #30 =
INFO  14:04:16,823 - #43 10
INFO  14:04:16,825 - #33 ;
INFO  14:04:16,826 - #44 p
INFO  14:04:16,827 - #30 =
INFO  14:04:16,827 - #43 11
INFO  14:04:16,827 - #33 ;
INFO  14:04:16,827 - #12 return
INFO  14:04:16,827 - #43 11
INFO  14:04:16,827 - #33 ;
INFO  14:04:16,827 - #41 }
INFO  14:04:16,827 - #13 void
INFO  14:04:16,828 - #44 main
INFO  14:04:16,828 - #36 (
INFO  14:04:16,828 - #37 )
INFO  14:04:16,829 - #44 int
INFO  14:04:16,829 - #44 k
INFO  14:04:16,829 - #33 ;
INFO  14:04:16,829 - #44 bool
INFO  14:04:16,829 - #44 b
INFO  14:04:16,829 - #33 ;
INFO  14:04:16,829 - #40 {
INFO  14:04:16,830 - #44 b
INFO  14:04:16,830 - #30 =
INFO  14:04:16,830 - #44 fja
INFO  14:04:16,830 - #36 (
INFO  14:04:16,830 - #44 b
INFO  14:04:16,830 - #37 )
INFO  14:04:16,831 - #33 ;
INFO  14:04:16,831 - #41 }
INFO  14:04:16,831 - #41 }
INFO  14:04:16,851 - Info on line: 11: Detected usage of global variable i.
INFO  14:04:16,852 - Info on line: 12: Detected usage of global variable p.
INFO  14:04:16,853 - Info on line: 22: Detected usage of global variable b.
INFO  14:04:16,853 - Info on line: 22: Detected usage of global variable b.
ERROR 14:04:16,853 - Error on line 15: Type mismatch in function call for parameter i.
INFO  14:04:16,853 - Info on line 22: Detected function call for function fja.
ERROR 14:04:16,853 - Error on line 22: Types are not compatible.
INFO  14:04:25,049 - #2 program
INFO  14:04:25,049 - #44 prg
INFO  14:04:25,049 - #44 int
INFO  14:04:25,051 - #44 i
INFO  14:04:25,052 - #33 ;
INFO  14:04:25,053 - #44 int
INFO  14:04:25,053 - #44 niz
INFO  14:04:25,053 - #38 [
INFO  14:04:25,053 - #39 ]
INFO  14:04:25,053 - #33 ;
INFO  14:04:25,055 - #40 {
INFO  14:04:25,055 - #44 int
INFO  14:04:25,055 - #44 fja
INFO  14:04:25,055 - #36 (
INFO  14:04:25,055 - #44 int
INFO  14:04:25,055 - #44 i
INFO  14:04:25,055 - #37 )
INFO  14:04:25,056 - #44 int
INFO  14:04:25,058 - #44 p
INFO  14:04:25,059 - #34 ,
INFO  14:04:25,059 - #44 q
INFO  14:04:25,059 - #33 ;
INFO  14:04:25,059 - #40 {
INFO  14:04:25,059 - #44 i
INFO  14:04:25,060 - #30 =
INFO  14:04:25,060 - #43 10
INFO  14:04:25,061 - #33 ;
INFO  14:04:25,062 - #44 p
INFO  14:04:25,062 - #30 =
INFO  14:04:25,062 - #43 11
INFO  14:04:25,062 - #33 ;
INFO  14:04:25,062 - #12 return
INFO  14:04:25,063 - #43 11
INFO  14:04:25,063 - #33 ;
INFO  14:04:25,063 - #41 }
INFO  14:04:25,063 - #13 void
INFO  14:04:25,063 - #44 main
INFO  14:04:25,064 - #36 (
INFO  14:04:25,064 - #37 )
INFO  14:04:25,064 - #44 int
INFO  14:04:25,064 - #44 k
INFO  14:04:25,064 - #33 ;
INFO  14:04:25,064 - #44 bool
INFO  14:04:25,064 - #44 b
INFO  14:04:25,064 - #33 ;
INFO  14:04:25,064 - #40 {
INFO  14:04:25,064 - #44 b
INFO  14:04:25,064 - #30 =
INFO  14:04:25,064 - #44 fja
INFO  14:04:25,065 - #36 (
INFO  14:04:25,065 - #44 b
INFO  14:04:25,065 - #34 ,
INFO  14:04:25,065 - #44 b
INFO  14:04:25,066 - #37 )
INFO  14:04:25,066 - #33 ;
INFO  14:04:25,066 - #41 }
INFO  14:04:25,066 - #41 }
INFO  14:04:25,090 - Info on line: 11: Detected usage of global variable i.
INFO  14:04:25,091 - Info on line: 12: Detected usage of global variable p.
INFO  14:04:25,092 - Info on line: 22: Detected usage of global variable b.
INFO  14:04:25,092 - Info on line: 22: Detected usage of global variable b.
ERROR 14:04:25,093 - Error on line 15: Type mismatch in function call for parameter i.
INFO  14:04:25,093 - Info on line: 22: Detected usage of global variable b.
ERROR 14:04:25,093 - Error on line 17: Too much parameters passed to function.
INFO  14:04:25,093 - Info on line 22: Detected function call for function fja.
ERROR 14:04:25,093 - Error on line 22: Types are not compatible.
INFO  14:05:34,014 - #2 program
INFO  14:05:34,015 - #44 prg
INFO  14:05:34,015 - #44 int
INFO  14:05:34,016 - #44 i
INFO  14:05:34,017 - #33 ;
INFO  14:05:34,019 - #44 int
INFO  14:05:34,019 - #44 niz
INFO  14:05:34,019 - #38 [
INFO  14:05:34,019 - #39 ]
INFO  14:05:34,020 - #33 ;
INFO  14:05:34,020 - #40 {
INFO  14:05:34,020 - #44 int
INFO  14:05:34,021 - #44 fja
INFO  14:05:34,021 - #36 (
INFO  14:05:34,021 - #44 int
INFO  14:05:34,021 - #44 i
INFO  14:05:34,021 - #37 )
INFO  14:05:34,023 - #44 int
INFO  14:05:34,024 - #44 p
INFO  14:05:34,024 - #34 ,
INFO  14:05:34,024 - #44 q
INFO  14:05:34,024 - #33 ;
INFO  14:05:34,024 - #40 {
INFO  14:05:34,024 - #44 i
INFO  14:05:34,025 - #30 =
INFO  14:05:34,025 - #43 10
INFO  14:05:34,026 - #33 ;
INFO  14:05:34,027 - #44 p
INFO  14:05:34,027 - #30 =
INFO  14:05:34,027 - #43 11
INFO  14:05:34,027 - #33 ;
INFO  14:05:34,027 - #12 return
INFO  14:05:34,028 - #43 11
INFO  14:05:34,028 - #33 ;
INFO  14:05:34,028 - #41 }
INFO  14:05:34,028 - #13 void
INFO  14:05:34,028 - #44 main
INFO  14:05:34,029 - #36 (
INFO  14:05:34,029 - #37 )
INFO  14:05:34,030 - #44 int
INFO  14:05:34,030 - #44 k
INFO  14:05:34,030 - #33 ;
INFO  14:05:34,030 - #44 bool
INFO  14:05:34,030 - #44 b
INFO  14:05:34,030 - #33 ;
INFO  14:05:34,030 - #40 {
INFO  14:05:34,030 - #44 b
INFO  14:05:34,030 - #30 =
INFO  14:05:34,030 - #44 fja
INFO  14:05:34,030 - #36 (
INFO  14:05:34,031 - #44 b
INFO  14:05:34,031 - #34 ,
INFO  14:05:34,031 - #44 b
INFO  14:05:34,031 - #37 )
INFO  14:05:34,032 - #33 ;
INFO  14:05:34,032 - #41 }
INFO  14:05:34,032 - #41 }
ERROR 14:05:34,060 - Error on line 15: Type mismatch in function call for parameter i.
ERROR 14:05:34,061 - Error on line 17: Too much parameters passed to function.
INFO  14:05:34,061 - Info on line 22: Detected function call for function fja.
ERROR 14:05:34,061 - Error on line 22: Types are not compatible.
INFO  14:05:58,872 - #2 program
INFO  14:05:58,873 - #44 prg
INFO  14:05:58,873 - #44 int
INFO  14:05:58,874 - #44 i
INFO  14:05:58,876 - #33 ;
INFO  14:05:58,878 - #44 int
INFO  14:05:58,879 - #44 niz
INFO  14:05:58,879 - #38 [
INFO  14:05:58,879 - #39 ]
INFO  14:05:58,879 - #33 ;
INFO  14:05:58,879 - #40 {
INFO  14:05:58,880 - #44 int
INFO  14:05:58,880 - #44 fja
INFO  14:05:58,881 - #36 (
INFO  14:05:58,881 - #44 int
INFO  14:05:58,881 - #44 i
INFO  14:05:58,881 - #37 )
INFO  14:05:58,882 - #44 int
INFO  14:05:58,884 - #44 p
INFO  14:05:58,884 - #34 ,
INFO  14:05:58,884 - #44 q
INFO  14:05:58,884 - #33 ;
INFO  14:05:58,884 - #40 {
INFO  14:05:58,885 - #44 i
INFO  14:05:58,885 - #30 =
INFO  14:05:58,886 - #43 10
INFO  14:05:58,888 - #33 ;
INFO  14:05:58,889 - #44 p
INFO  14:05:58,889 - #30 =
INFO  14:05:58,889 - #43 11
INFO  14:05:58,889 - #33 ;
INFO  14:05:58,889 - #12 return
INFO  14:05:58,890 - #43 11
INFO  14:05:58,890 - #33 ;
INFO  14:05:58,890 - #41 }
INFO  14:05:58,890 - #13 void
INFO  14:05:58,890 - #44 main
INFO  14:05:58,891 - #36 (
INFO  14:05:58,891 - #37 )
INFO  14:05:58,892 - #44 int
INFO  14:05:58,892 - #44 k
INFO  14:05:58,892 - #33 ;
INFO  14:05:58,892 - #44 bool
INFO  14:05:58,892 - #44 b
INFO  14:05:58,892 - #33 ;
INFO  14:05:58,892 - #40 {
INFO  14:05:58,892 - #44 i
INFO  14:05:58,892 - #30 =
INFO  14:05:58,892 - #44 fja
INFO  14:05:58,892 - #36 (
INFO  14:05:58,893 - #44 i
INFO  14:05:58,893 - #37 )
INFO  14:05:58,895 - #33 ;
INFO  14:05:58,895 - #41 }
INFO  14:05:58,896 - #41 }
INFO  14:05:58,922 - Info on line: 22: Detected usage of global variable i.
INFO  14:05:58,922 - Info on line: 22: Detected usage of global variable i.
INFO  14:05:58,923 - Info on line 22: Detected function call for function fja.
INFO  14:08:44,182 - #2 program
INFO  14:08:44,184 - #44 prg
INFO  14:08:44,184 - #44 int
INFO  14:08:44,185 - #44 i
INFO  14:08:44,186 - #33 ;
INFO  14:08:44,188 - #44 int
INFO  14:08:44,188 - #44 niz
INFO  14:08:44,188 - #38 [
INFO  14:08:44,188 - #39 ]
INFO  14:08:44,188 - #33 ;
INFO  14:08:44,189 - #40 {
INFO  14:08:44,189 - #44 int
INFO  14:08:44,190 - #44 fja
INFO  14:08:44,190 - #36 (
INFO  14:08:44,190 - #44 int
INFO  14:08:44,190 - #44 i
INFO  14:08:44,190 - #37 )
INFO  14:08:44,191 - #44 int
INFO  14:08:44,193 - #44 p
INFO  14:08:44,193 - #34 ,
INFO  14:08:44,193 - #44 q
INFO  14:08:44,193 - #33 ;
INFO  14:08:44,193 - #40 {
INFO  14:08:44,194 - #44 i
INFO  14:08:44,194 - #30 =
INFO  14:08:44,195 - #43 10
INFO  14:08:44,196 - #33 ;
INFO  14:08:44,197 - #44 p
INFO  14:08:44,198 - #30 =
INFO  14:08:44,198 - #43 11
INFO  14:08:44,198 - #33 ;
INFO  14:08:44,199 - #12 return
INFO  14:08:44,199 - #43 11
INFO  14:08:44,199 - #33 ;
INFO  14:08:44,199 - #41 }
INFO  14:08:44,199 - #13 void
INFO  14:08:44,200 - #44 main
INFO  14:08:44,200 - #36 (
INFO  14:08:44,200 - #37 )
INFO  14:08:44,201 - #44 int
INFO  14:08:44,201 - #44 k
INFO  14:08:44,201 - #33 ;
INFO  14:08:44,201 - #44 bool
INFO  14:08:44,201 - #44 b
INFO  14:08:44,201 - #33 ;
INFO  14:08:44,201 - #40 {
INFO  14:08:44,201 - #41 }
INFO  14:08:44,201 - #41 }
INFO  14:09:15,242 - #2 program
INFO  14:09:15,243 - #44 prg
INFO  14:09:15,243 - #44 int
INFO  14:09:15,247 - #44 i
INFO  14:09:15,249 - #33 ;
INFO  14:09:15,251 - #44 int
INFO  14:09:15,255 - #44 niz
INFO  14:09:15,255 - #38 [
INFO  14:09:15,255 - #39 ]
INFO  14:09:15,256 - #33 ;
INFO  14:09:15,256 - #40 {
INFO  14:09:15,256 - #44 int
INFO  14:09:15,259 - #44 fja
INFO  14:09:15,259 - #36 (
INFO  14:09:15,260 - #44 int
INFO  14:09:15,260 - #44 i
INFO  14:09:15,260 - #37 )
INFO  14:09:15,263 - #44 int
INFO  14:09:15,265 - #44 p
INFO  14:09:15,266 - #34 ,
INFO  14:09:15,266 - #44 q
INFO  14:09:15,266 - #33 ;
INFO  14:09:15,266 - #40 {
INFO  14:09:15,266 - #44 i
INFO  14:09:15,268 - #30 =
INFO  14:09:15,268 - #43 10
INFO  14:09:15,271 - #33 ;
INFO  14:09:15,273 - #44 p
INFO  14:09:15,274 - #30 =
INFO  14:09:15,274 - #43 11
INFO  14:09:15,274 - #33 ;
INFO  14:09:15,274 - #12 return
INFO  14:09:15,275 - #43 11
INFO  14:09:15,275 - #33 ;
INFO  14:09:15,275 - #41 }
INFO  14:09:15,276 - #13 void
INFO  14:09:15,277 - #44 main
INFO  14:09:15,278 - #36 (
INFO  14:09:15,278 - #37 )
INFO  14:09:15,279 - #44 int
INFO  14:09:15,279 - #44 k
INFO  14:09:15,279 - #33 ;
INFO  14:09:15,280 - #44 bool
INFO  14:09:15,280 - #44 b
INFO  14:09:15,280 - #33 ;
INFO  14:09:15,280 - #40 {
INFO  14:09:15,280 - #41 }
INFO  14:09:15,280 - #41 }
INFO  14:10:46,819 - #2 program
INFO  14:10:46,819 - #44 prg
INFO  14:10:46,819 - #44 int
INFO  14:10:46,821 - #44 i
INFO  14:10:46,822 - #33 ;
INFO  14:10:46,824 - #44 int
INFO  14:10:46,824 - #44 niz
INFO  14:10:46,825 - #38 [
INFO  14:10:46,825 - #39 ]
INFO  14:10:46,825 - #33 ;
INFO  14:10:46,826 - #40 {
INFO  14:10:46,826 - #44 int
INFO  14:10:46,826 - #44 fja
INFO  14:10:46,827 - #36 (
INFO  14:10:46,827 - #44 int
INFO  14:10:46,827 - #44 i
INFO  14:10:46,827 - #37 )
INFO  14:10:46,828 - #44 int
INFO  14:10:46,829 - #44 p
INFO  14:10:46,829 - #34 ,
INFO  14:10:46,829 - #44 q
INFO  14:10:46,829 - #33 ;
INFO  14:10:46,829 - #40 {
INFO  14:10:46,829 - #44 i
INFO  14:10:46,830 - #30 =
INFO  14:10:46,830 - #43 10
INFO  14:10:46,831 - #33 ;
INFO  14:10:46,832 - #44 p
INFO  14:10:46,832 - #30 =
INFO  14:10:46,833 - #43 11
INFO  14:10:46,833 - #33 ;
INFO  14:10:46,833 - #12 return
INFO  14:10:46,833 - #43 11
INFO  14:10:46,833 - #33 ;
INFO  14:10:46,833 - #41 }
INFO  14:10:46,833 - #13 void
INFO  14:10:46,834 - #44 main
INFO  14:10:46,834 - #36 (
INFO  14:10:46,834 - #37 )
INFO  14:10:46,835 - #44 int
INFO  14:10:46,835 - #44 k
INFO  14:10:46,835 - #33 ;
INFO  14:10:46,835 - #44 bool
INFO  14:10:46,835 - #44 b
INFO  14:10:46,836 - #33 ;
INFO  14:10:46,836 - #40 {
INFO  14:10:46,836 - #41 }
INFO  14:10:46,836 - #41 }
INFO  14:11:19,753 - #2 program
INFO  14:11:19,754 - #44 prg
INFO  14:11:19,754 - #44 int
INFO  14:11:19,755 - #44 i
INFO  14:11:19,756 - #33 ;
INFO  14:11:19,758 - #44 int
INFO  14:11:19,758 - #44 niz
INFO  14:11:19,758 - #38 [
INFO  14:11:19,759 - #39 ]
INFO  14:11:19,759 - #33 ;
INFO  14:11:19,759 - #40 {
INFO  14:11:19,759 - #44 int
INFO  14:11:19,760 - #44 fja
INFO  14:11:19,760 - #36 (
INFO  14:11:19,761 - #44 int
INFO  14:11:19,761 - #44 i
INFO  14:11:19,761 - #37 )
INFO  14:11:19,762 - #44 int
INFO  14:11:19,763 - #44 p
INFO  14:11:19,764 - #34 ,
INFO  14:11:19,764 - #44 q
INFO  14:11:19,764 - #33 ;
INFO  14:11:19,764 - #40 {
INFO  14:11:19,764 - #44 i
INFO  14:11:19,765 - #30 =
INFO  14:11:19,765 - #43 10
INFO  14:11:19,766 - #33 ;
INFO  14:11:19,767 - #44 p
INFO  14:11:19,767 - #30 =
INFO  14:11:19,767 - #43 11
INFO  14:11:19,767 - #33 ;
INFO  14:11:19,767 - #12 return
INFO  14:11:19,768 - #43 11
INFO  14:11:19,768 - #33 ;
INFO  14:11:19,768 - #41 }
INFO  14:11:19,768 - #13 void
INFO  14:11:19,768 - #44 main
INFO  14:11:19,769 - #36 (
INFO  14:11:19,769 - #37 )
INFO  14:11:19,769 - #44 int
INFO  14:11:19,769 - #44 k
INFO  14:11:19,769 - #33 ;
INFO  14:11:19,770 - #44 bool
INFO  14:11:19,770 - #44 b
INFO  14:11:19,770 - #33 ;
INFO  14:11:19,770 - #40 {
INFO  14:11:19,770 - #41 }
INFO  14:11:19,770 - #41 }
INFO  14:11:19,796 - Info on line: 11: Detected usage of function formal parameter i.
INFO  14:11:19,797 - Info on line: 12: Detected usage of function formal parameter p.
INFO  14:12:15,073 - #2 program
INFO  14:12:15,074 - #44 prg
INFO  14:12:15,074 - #44 int
INFO  14:12:15,075 - #44 i
INFO  14:12:15,077 - #33 ;
INFO  14:12:15,078 - #44 int
INFO  14:12:15,079 - #44 niz
INFO  14:12:15,079 - #38 [
INFO  14:12:15,079 - #39 ]
INFO  14:12:15,079 - #33 ;
INFO  14:12:15,080 - #40 {
INFO  14:12:15,080 - #44 int
INFO  14:12:15,081 - #44 fja
INFO  14:12:15,081 - #36 (
INFO  14:12:15,081 - #44 int
INFO  14:12:15,081 - #44 i
INFO  14:12:15,081 - #37 )
INFO  14:12:15,083 - #44 int
INFO  14:12:15,085 - #44 p
INFO  14:12:15,085 - #34 ,
INFO  14:12:15,085 - #44 q
INFO  14:12:15,086 - #33 ;
INFO  14:12:15,086 - #40 {
INFO  14:12:15,086 - #44 i
INFO  14:12:15,087 - #30 =
INFO  14:12:15,088 - #43 10
INFO  14:12:15,090 - #33 ;
INFO  14:12:15,091 - #44 p
INFO  14:12:15,092 - #30 =
INFO  14:12:15,092 - #43 11
INFO  14:12:15,092 - #33 ;
INFO  14:12:15,092 - #12 return
INFO  14:12:15,092 - #43 11
INFO  14:12:15,093 - #33 ;
INFO  14:12:15,093 - #41 }
INFO  14:12:15,093 - #13 void
INFO  14:12:15,094 - #44 main
INFO  14:12:15,095 - #36 (
INFO  14:12:15,095 - #37 )
INFO  14:12:15,096 - #44 int
INFO  14:12:15,096 - #44 k
INFO  14:12:15,096 - #33 ;
INFO  14:12:15,096 - #44 bool
INFO  14:12:15,096 - #44 b
INFO  14:12:15,096 - #33 ;
INFO  14:12:15,096 - #40 {
INFO  14:12:15,096 - #41 }
INFO  14:12:15,097 - #41 }
INFO  14:12:15,131 - Info on line: 11: Detected usage of function formal parameter i.
INFO  14:12:47,482 - #2 program
INFO  14:12:47,482 - #44 prg
INFO  14:12:47,482 - #44 int
INFO  14:12:47,483 - #44 i
INFO  14:12:47,484 - #33 ;
INFO  14:12:47,485 - #44 int
INFO  14:12:47,487 - #44 niz
INFO  14:12:47,487 - #38 [
INFO  14:12:47,487 - #39 ]
INFO  14:12:47,487 - #33 ;
INFO  14:12:47,488 - #40 {
INFO  14:12:47,488 - #44 int
INFO  14:12:47,489 - #44 fja
INFO  14:12:47,489 - #36 (
INFO  14:12:47,489 - #44 int
INFO  14:12:47,489 - #44 i
INFO  14:12:47,490 - #34 ,
INFO  14:12:47,490 - #44 bool
INFO  14:12:47,490 - #44 b
INFO  14:12:47,490 - #34 ,
INFO  14:12:47,490 - #44 char
INFO  14:12:47,490 - #44 c
INFO  14:12:47,491 - #37 )
INFO  14:12:47,492 - #44 int
INFO  14:12:47,493 - #44 p
INFO  14:12:47,493 - #34 ,
INFO  14:12:47,493 - #44 q
INFO  14:12:47,494 - #33 ;
INFO  14:12:47,494 - #40 {
INFO  14:12:47,494 - #44 i
INFO  14:12:47,495 - #30 =
INFO  14:12:47,495 - #43 10
INFO  14:12:47,496 - #33 ;
INFO  14:12:47,497 - #44 b
INFO  14:12:47,497 - #30 =
INFO  14:12:47,497 - #42 true
INFO  14:12:47,497 - #33 ;
INFO  14:12:47,498 - #44 c
INFO  14:12:47,498 - #30 =
INFO  14:12:47,498 - #45 c
INFO  14:12:47,498 - #33 ;
INFO  14:12:47,498 - #12 return
INFO  14:12:47,498 - #44 i
INFO  14:12:47,498 - #33 ;
INFO  14:12:47,498 - #41 }
INFO  14:12:47,498 - #13 void
INFO  14:12:47,499 - #44 main
INFO  14:12:47,499 - #36 (
INFO  14:12:47,499 - #37 )
INFO  14:12:47,499 - #44 int
INFO  14:12:47,500 - #44 k
INFO  14:12:47,500 - #33 ;
INFO  14:12:47,500 - #44 bool
INFO  14:12:47,500 - #44 b
INFO  14:12:47,500 - #33 ;
INFO  14:12:47,500 - #40 {
INFO  14:12:47,500 - #41 }
INFO  14:12:47,500 - #41 }
INFO  14:12:47,527 - Info on line: 11: Detected usage of function formal parameter i.
INFO  14:12:47,527 - Info on line: 12: Detected usage of function formal parameter b.
INFO  14:12:47,527 - Info on line: 13: Detected usage of function formal parameter c.
INFO  14:12:47,528 - Info on line: 15: Detected usage of function formal parameter i.
INFO  14:12:56,872 - #2 program
INFO  14:12:56,872 - #44 prg
INFO  14:12:56,872 - #44 int
INFO  14:12:56,874 - #44 i
INFO  14:12:56,875 - #33 ;
INFO  14:12:56,877 - #44 int
INFO  14:12:56,878 - #44 niz
INFO  14:12:56,878 - #38 [
INFO  14:12:56,878 - #39 ]
INFO  14:12:56,878 - #33 ;
INFO  14:12:56,879 - #40 {
INFO  14:12:56,880 - #44 int
INFO  14:12:56,880 - #44 fja
INFO  14:12:56,881 - #36 (
INFO  14:12:56,881 - #44 int
INFO  14:12:56,881 - #44 i
INFO  14:12:56,881 - #34 ,
INFO  14:12:56,882 - #44 bool
INFO  14:12:56,882 - #44 b
INFO  14:12:56,882 - #34 ,
INFO  14:12:56,882 - #44 char
INFO  14:12:56,883 - #44 c
INFO  14:12:56,883 - #37 )
INFO  14:12:56,884 - #44 int
INFO  14:12:56,887 - #44 p
INFO  14:12:56,887 - #34 ,
INFO  14:12:56,887 - #44 q
INFO  14:12:56,887 - #33 ;
INFO  14:12:56,887 - #40 {
INFO  14:12:56,888 - #44 i
INFO  14:12:56,888 - #30 =
INFO  14:12:56,889 - #43 10
INFO  14:12:56,891 - #33 ;
INFO  14:12:56,893 - #44 b
INFO  14:12:56,893 - #30 =
INFO  14:12:56,894 - #42 true
INFO  14:12:56,894 - #33 ;
INFO  14:12:56,894 - #44 c
INFO  14:12:56,894 - #30 =
INFO  14:12:56,895 - #45 c
INFO  14:12:56,895 - #33 ;
INFO  14:12:56,895 - #12 return
INFO  14:12:56,895 - #44 p
INFO  14:12:56,895 - #33 ;
INFO  14:12:56,896 - #41 }
INFO  14:12:56,896 - #13 void
INFO  14:12:56,897 - #44 main
INFO  14:12:56,898 - #36 (
INFO  14:12:56,898 - #37 )
INFO  14:12:56,899 - #44 int
INFO  14:12:56,899 - #44 k
INFO  14:12:56,899 - #33 ;
INFO  14:12:56,900 - #44 bool
INFO  14:12:56,900 - #44 b
INFO  14:12:56,900 - #33 ;
INFO  14:12:56,900 - #40 {
INFO  14:12:56,900 - #41 }
INFO  14:12:56,900 - #41 }
INFO  14:12:56,934 - Info on line: 11: Detected usage of function formal parameter i.
INFO  14:12:56,935 - Info on line: 12: Detected usage of function formal parameter b.
INFO  14:12:56,936 - Info on line: 13: Detected usage of function formal parameter c.
INFO  14:18:07,880 - #2 program
INFO  14:18:07,880 - #44 P
INFO  14:18:07,880 - #7 const
INFO  14:18:07,881 - #44 int
INFO  14:18:07,882 - #44 size
INFO  14:18:07,883 - #30 =
INFO  14:18:07,883 - #43 10
INFO  14:18:07,883 - #33 ;
INFO  14:18:07,884 - #5 abstract
INFO  14:18:07,884 - #4 class
INFO  14:18:07,884 - #44 Tab
INFO  14:18:07,885 - #40 {
INFO  14:18:07,885 - #44 int
INFO  14:18:07,886 - #44 size
INFO  14:18:07,887 - #33 ;
INFO  14:18:07,888 - #40 {
INFO  14:18:07,889 - #5 abstract
INFO  14:18:07,889 - #44 int
INFO  14:18:07,890 - #44 getp
INFO  14:18:07,890 - #36 (
INFO  14:18:07,890 - #44 int
INFO  14:18:07,890 - #44 i
INFO  14:18:07,890 - #37 )
INFO  14:18:07,891 - #33 ;
INFO  14:18:07,891 - #5 abstract
INFO  14:18:07,892 - #44 int
INFO  14:18:07,892 - #44 getn
INFO  14:18:07,892 - #36 (
INFO  14:18:07,892 - #44 int
INFO  14:18:07,892 - #44 i
INFO  14:18:07,892 - #37 )
INFO  14:18:07,892 - #33 ;
INFO  14:18:07,892 - #44 int
INFO  14:18:07,893 - #44 getSize
INFO  14:18:07,893 - #36 (
INFO  14:18:07,893 - #37 )
INFO  14:18:07,894 - #40 {
INFO  14:18:07,894 - #12 return
INFO  14:18:07,895 - #44 size
INFO  14:18:07,896 - #33 ;
INFO  14:18:07,896 - #41 }
INFO  14:18:07,896 - #41 }
INFO  14:18:07,897 - #41 }
INFO  14:18:07,897 - #4 class
INFO  14:18:07,898 - #44 Table
INFO  14:18:07,898 - #15 extends
INFO  14:18:07,898 - #44 Tab
INFO  14:18:07,898 - #40 {
INFO  14:18:07,899 - #44 int
INFO  14:18:07,899 - #44 pos
INFO  14:18:07,899 - #38 [
INFO  14:18:07,899 - #39 ]
INFO  14:18:07,899 - #34 ,
INFO  14:18:07,900 - #44 neg
INFO  14:18:07,900 - #38 [
INFO  14:18:07,900 - #39 ]
INFO  14:18:07,900 - #33 ;
INFO  14:18:07,901 - #40 {
INFO  14:18:07,901 - #13 void
INFO  14:18:07,901 - #44 putp
INFO  14:18:07,902 - #36 (
INFO  14:18:07,902 - #44 int
INFO  14:18:07,902 - #44 a
INFO  14:18:07,902 - #34 ,
INFO  14:18:07,902 - #44 int
INFO  14:18:07,902 - #44 idx
INFO  14:18:07,902 - #37 )
INFO  14:18:07,903 - #40 {
INFO  14:18:07,903 - #44 this
INFO  14:18:07,903 - #35 .
INFO  14:18:07,903 - #44 pos
INFO  14:18:07,903 - #38 [
INFO  14:18:07,903 - #44 idx
INFO  14:18:07,903 - #39 ]
INFO  14:18:07,903 - #30 =
INFO  14:18:07,903 - #44 a
INFO  14:18:07,904 - #33 ;
INFO  14:18:07,904 - #41 }
INFO  14:18:07,905 - #13 void
INFO  14:18:07,905 - #44 putn
INFO  14:18:07,905 - #36 (
INFO  14:18:07,905 - #44 int
INFO  14:18:07,905 - #44 a
INFO  14:18:07,905 - #34 ,
INFO  14:18:07,905 - #44 int
INFO  14:18:07,905 - #44 idx
INFO  14:18:07,905 - #37 )
INFO  14:18:07,905 - #40 {
INFO  14:18:07,905 - #44 this
INFO  14:18:07,906 - #35 .
INFO  14:18:07,906 - #44 neg
INFO  14:18:07,906 - #38 [
INFO  14:18:07,906 - #44 idx
INFO  14:18:07,906 - #39 ]
INFO  14:18:07,906 - #30 =
INFO  14:18:07,906 - #44 a
INFO  14:18:07,906 - #33 ;
INFO  14:18:07,906 - #41 }
INFO  14:18:07,906 - #44 int
INFO  14:18:07,906 - #44 getp
INFO  14:18:07,906 - #36 (
INFO  14:18:07,906 - #44 int
INFO  14:18:07,906 - #44 idx
INFO  14:18:07,906 - #37 )
INFO  14:18:07,907 - #40 {
INFO  14:18:07,907 - #12 return
INFO  14:18:07,907 - #44 pos
INFO  14:18:07,907 - #38 [
INFO  14:18:07,907 - #44 idx
INFO  14:18:07,907 - #39 ]
INFO  14:18:07,907 - #33 ;
INFO  14:18:07,907 - #41 }
INFO  14:18:07,907 - #44 int
INFO  14:18:07,907 - #44 getn
INFO  14:18:07,907 - #36 (
INFO  14:18:07,908 - #44 int
INFO  14:18:07,908 - #44 idx
INFO  14:18:07,908 - #37 )
INFO  14:18:07,908 - #40 {
INFO  14:18:07,908 - #12 return
INFO  14:18:07,908 - #44 neg
INFO  14:18:07,908 - #38 [
INFO  14:18:07,908 - #44 idx
INFO  14:18:07,908 - #39 ]
INFO  14:18:07,908 - #33 ;
INFO  14:18:07,908 - #41 }
INFO  14:18:07,908 - #41 }
INFO  14:18:07,909 - #41 }
INFO  14:18:07,909 - #44 Table
INFO  14:18:07,910 - #44 val
INFO  14:18:07,916 - #33 ;
INFO  14:18:07,916 - #40 {
INFO  14:18:07,916 - #13 void
INFO  14:18:07,916 - #44 f
INFO  14:18:07,916 - #36 (
INFO  14:18:07,916 - #44 char
INFO  14:18:07,916 - #44 ch
INFO  14:18:07,916 - #34 ,
INFO  14:18:07,916 - #44 int
INFO  14:18:07,916 - #44 a
INFO  14:18:07,916 - #34 ,
INFO  14:18:07,917 - #44 int
INFO  14:18:07,917 - #44 arg
INFO  14:18:07,917 - #37 )
INFO  14:18:07,917 - #44 int
INFO  14:18:07,917 - #44 x
INFO  14:18:07,917 - #33 ;
INFO  14:18:07,917 - #40 {
INFO  14:18:07,917 - #44 x
INFO  14:18:07,917 - #30 =
INFO  14:18:07,917 - #44 arg
INFO  14:18:07,917 - #33 ;
INFO  14:18:07,917 - #41 }
INFO  14:18:07,917 - #13 void
INFO  14:18:07,917 - #44 main
INFO  14:18:07,917 - #36 (
INFO  14:18:07,918 - #37 )
INFO  14:18:07,918 - #44 int
INFO  14:18:07,918 - #44 x
INFO  14:18:07,918 - #34 ,
INFO  14:18:07,918 - #44 i
INFO  14:18:07,918 - #33 ;
INFO  14:18:07,918 - #44 char
INFO  14:18:07,918 - #44 c
INFO  14:18:07,918 - #33 ;
INFO  14:18:07,918 - #40 {
INFO  14:18:07,918 - #44 val
INFO  14:18:07,918 - #30 =
INFO  14:18:07,918 - #9 new
INFO  14:18:07,918 - #44 Table
INFO  14:18:07,918 - #33 ;
INFO  14:18:07,918 - #44 val
INFO  14:18:07,918 - #35 .
INFO  14:18:07,918 - #44 pos
INFO  14:18:07,918 - #30 =
INFO  14:18:07,918 - #9 new
INFO  14:18:07,918 - #44 int
INFO  14:18:07,918 - #38 [
INFO  14:18:07,919 - #44 size
INFO  14:18:07,919 - #39 ]
INFO  14:18:07,919 - #33 ;
INFO  14:18:07,919 - #44 val
INFO  14:18:07,919 - #35 .
INFO  14:18:07,919 - #44 neg
INFO  14:18:07,919 - #30 =
INFO  14:18:07,919 - #9 new
INFO  14:18:07,919 - #44 int
INFO  14:18:07,919 - #38 [
INFO  14:18:07,919 - #44 size
INFO  14:18:07,919 - #39 ]
INFO  14:18:07,919 - #33 ;
INFO  14:18:07,919 - #14 for
INFO  14:18:07,920 - #36 (
INFO  14:18:07,920 - #44 i
INFO  14:18:07,920 - #30 =
INFO  14:18:07,920 - #43 0
INFO  14:18:07,920 - #33 ;
INFO  14:18:07,920 - #44 i
INFO  14:18:07,920 - #26 <
INFO  14:18:07,920 - #44 size
INFO  14:18:07,922 - #33 ;
INFO  14:18:07,922 - #44 i
INFO  14:18:07,923 - #31 ++
INFO  14:18:07,923 - #37 )
INFO  14:18:07,923 - #40 {
INFO  14:18:07,923 - #44 val
INFO  14:18:07,923 - #35 .
INFO  14:18:07,923 - #44 putp
INFO  14:18:07,923 - #36 (
INFO  14:18:07,924 - #43 0
INFO  14:18:07,924 - #34 ,
INFO  14:18:07,925 - #44 i
INFO  14:18:07,925 - #37 )
INFO  14:18:07,925 - #33 ;
INFO  14:18:07,925 - #44 val
INFO  14:18:07,925 - #35 .
INFO  14:18:07,925 - #44 putn
INFO  14:18:07,925 - #36 (
INFO  14:18:07,926 - #43 0
INFO  14:18:07,926 - #34 ,
INFO  14:18:07,926 - #44 i
INFO  14:18:07,926 - #37 )
INFO  14:18:07,926 - #33 ;
INFO  14:18:07,926 - #41 }
INFO  14:18:07,926 - #44 f
INFO  14:18:07,926 - #36 (
INFO  14:18:07,926 - #44 c
INFO  14:18:07,926 - #34 ,
INFO  14:18:07,926 - #44 x
INFO  14:18:07,926 - #34 ,
INFO  14:18:07,926 - #44 i
INFO  14:18:07,926 - #37 )
INFO  14:18:07,927 - #33 ;
INFO  14:18:07,927 - #11 read
INFO  14:18:07,927 - #36 (
INFO  14:18:07,927 - #44 x
INFO  14:18:07,927 - #37 )
INFO  14:18:07,927 - #33 ;
INFO  14:18:07,927 - #14 for
INFO  14:18:07,927 - #36 (
INFO  14:18:07,927 - #33 ;
INFO  14:18:07,928 - #44 x
INFO  14:18:07,928 - #24 >
INFO  14:18:07,928 - #43 0
INFO  14:18:07,928 - #33 ;
INFO  14:18:07,929 - #37 )
INFO  14:18:07,929 - #40 {
INFO  14:18:07,929 - #8 if
INFO  14:18:07,929 - #36 (
INFO  14:18:07,929 - #43 0
INFO  14:18:07,929 - #27 <=
INFO  14:18:07,929 - #44 x
INFO  14:18:07,930 - #28 &&
INFO  14:18:07,930 - #44 x
INFO  14:18:07,930 - #26 <
INFO  14:18:07,930 - #44 size
INFO  14:18:07,930 - #37 )
INFO  14:18:07,930 - #40 {
INFO  14:18:07,930 - #44 val
INFO  14:18:07,930 - #35 .
INFO  14:18:07,930 - #44 putp
INFO  14:18:07,930 - #36 (
INFO  14:18:07,931 - #44 val
INFO  14:18:07,931 - #35 .
INFO  14:18:07,931 - #44 getp
INFO  14:18:07,931 - #36 (
INFO  14:18:07,931 - #44 x
INFO  14:18:07,932 - #37 )
INFO  14:18:07,932 - #17 +
INFO  14:18:07,932 - #43 1
INFO  14:18:07,932 - #37 )
INFO  14:18:07,933 - #33 ;
INFO  14:18:07,933 - #41 }
INFO  14:18:07,933 - #6 else
INFO  14:18:07,933 - #8 if
INFO  14:18:07,933 - #36 (
INFO  14:18:07,933 - #44 size
INFO  14:18:07,933 - #26 <
INFO  14:18:07,933 - #44 x
INFO  14:18:07,933 - #28 &&
INFO  14:18:07,933 - #44 x
INFO  14:18:07,933 - #26 <
INFO  14:18:07,934 - #43 0
INFO  14:18:07,934 - #37 )
INFO  14:18:07,934 - #40 {
INFO  14:18:07,934 - #44 val
INFO  14:18:07,934 - #35 .
INFO  14:18:07,934 - #44 putn
INFO  14:18:07,934 - #36 (
INFO  14:18:07,934 - #44 val
INFO  14:18:07,934 - #35 .
INFO  14:18:07,934 - #44 getn
INFO  14:18:07,934 - #36 (
INFO  14:18:07,934 - #44 x
INFO  14:18:07,934 - #37 )
INFO  14:18:07,934 - #17 +
INFO  14:18:07,934 - #43 1
INFO  14:18:07,934 - #37 )
INFO  14:18:07,934 - #33 ;
INFO  14:18:07,934 - #41 }
INFO  14:18:07,934 - #11 read
INFO  14:18:07,935 - #36 (
INFO  14:18:07,935 - #44 x
INFO  14:18:07,935 - #37 )
INFO  14:18:07,935 - #33 ;
INFO  14:18:07,935 - #41 }
INFO  14:18:07,935 - #41 }
INFO  14:18:07,935 - #41 }
ERROR 14:18:07,971 - Error on line 4: Name size has already been declared.
INFO  14:20:41,892 - #2 program
INFO  14:20:41,893 - #44 P
INFO  14:20:41,893 - #7 const
INFO  14:20:41,894 - #44 int
INFO  14:20:41,894 - #44 size
INFO  14:20:41,896 - #30 =
INFO  14:20:41,896 - #43 10
INFO  14:20:41,896 - #33 ;
INFO  14:20:41,896 - #5 abstract
INFO  14:20:41,898 - #4 class
INFO  14:20:41,898 - #44 Tab
INFO  14:20:41,898 - #40 {
INFO  14:20:41,899 - #44 int
INFO  14:20:41,899 - #44 size
INFO  14:20:41,900 - #33 ;
INFO  14:20:41,901 - #40 {
INFO  14:20:41,901 - #5 abstract
INFO  14:20:41,902 - #44 int
INFO  14:20:41,902 - #44 getp
INFO  14:20:41,902 - #36 (
INFO  14:20:41,902 - #44 int
INFO  14:20:41,902 - #44 i
INFO  14:20:41,903 - #37 )
INFO  14:20:41,903 - #33 ;
INFO  14:20:41,903 - #5 abstract
INFO  14:20:41,904 - #44 int
INFO  14:20:41,904 - #44 getn
INFO  14:20:41,904 - #36 (
INFO  14:20:41,904 - #44 int
INFO  14:20:41,904 - #44 i
INFO  14:20:41,904 - #37 )
INFO  14:20:41,904 - #33 ;
INFO  14:20:41,904 - #44 int
INFO  14:20:41,905 - #44 getSize
INFO  14:20:41,905 - #36 (
INFO  14:20:41,905 - #37 )
INFO  14:20:41,905 - #40 {
INFO  14:20:41,906 - #12 return
INFO  14:20:41,907 - #44 size
INFO  14:20:41,908 - #33 ;
INFO  14:20:41,908 - #41 }
INFO  14:20:41,908 - #41 }
INFO  14:20:41,909 - #41 }
INFO  14:20:41,909 - #4 class
INFO  14:20:41,910 - #44 Table
INFO  14:20:41,910 - #15 extends
INFO  14:20:41,910 - #44 Tab
INFO  14:20:41,910 - #40 {
INFO  14:20:41,911 - #44 int
INFO  14:20:41,911 - #44 pos
INFO  14:20:41,911 - #38 [
INFO  14:20:41,911 - #39 ]
INFO  14:20:41,911 - #34 ,
INFO  14:20:41,912 - #44 neg
INFO  14:20:41,912 - #38 [
INFO  14:20:41,912 - #39 ]
INFO  14:20:41,912 - #33 ;
INFO  14:20:41,912 - #40 {
INFO  14:20:41,912 - #13 void
INFO  14:20:41,913 - #44 putp
INFO  14:20:41,913 - #36 (
INFO  14:20:41,913 - #44 int
INFO  14:20:41,913 - #44 a
INFO  14:20:41,913 - #34 ,
INFO  14:20:41,913 - #44 int
INFO  14:20:41,913 - #44 idx
INFO  14:20:41,914 - #37 )
INFO  14:20:41,914 - #40 {
INFO  14:20:41,914 - #44 this
INFO  14:20:41,914 - #35 .
INFO  14:20:41,914 - #44 pos
INFO  14:20:41,914 - #38 [
INFO  14:20:41,914 - #44 idx
INFO  14:20:41,914 - #39 ]
INFO  14:20:41,914 - #30 =
INFO  14:20:41,914 - #44 a
INFO  14:20:41,915 - #33 ;
INFO  14:20:41,915 - #41 }
INFO  14:20:41,915 - #13 void
INFO  14:20:41,915 - #44 putn
INFO  14:20:41,915 - #36 (
INFO  14:20:41,915 - #44 int
INFO  14:20:41,916 - #44 a
INFO  14:20:41,916 - #34 ,
INFO  14:20:41,916 - #44 int
INFO  14:20:41,916 - #44 idx
INFO  14:20:41,916 - #37 )
INFO  14:20:41,916 - #40 {
INFO  14:20:41,916 - #44 this
INFO  14:20:41,916 - #35 .
INFO  14:20:41,916 - #44 neg
INFO  14:20:41,916 - #38 [
INFO  14:20:41,916 - #44 idx
INFO  14:20:41,916 - #39 ]
INFO  14:20:41,916 - #30 =
INFO  14:20:41,916 - #44 a
INFO  14:20:41,917 - #33 ;
INFO  14:20:41,917 - #41 }
INFO  14:20:41,917 - #44 int
INFO  14:20:41,917 - #44 getp
INFO  14:20:41,917 - #36 (
INFO  14:20:41,917 - #44 int
INFO  14:20:41,917 - #44 idx
INFO  14:20:41,917 - #37 )
INFO  14:20:41,917 - #40 {
INFO  14:20:41,917 - #12 return
INFO  14:20:41,917 - #44 pos
INFO  14:20:41,917 - #38 [
INFO  14:20:41,917 - #44 idx
INFO  14:20:41,917 - #39 ]
INFO  14:20:41,917 - #33 ;
INFO  14:20:41,917 - #41 }
INFO  14:20:41,917 - #44 int
INFO  14:20:41,917 - #44 getn
INFO  14:20:41,917 - #36 (
INFO  14:20:41,918 - #44 int
INFO  14:20:41,918 - #44 idx
INFO  14:20:41,918 - #37 )
INFO  14:20:41,918 - #40 {
INFO  14:20:41,918 - #12 return
INFO  14:20:41,918 - #44 neg
INFO  14:20:41,918 - #38 [
INFO  14:20:41,918 - #44 idx
INFO  14:20:41,918 - #39 ]
INFO  14:20:41,918 - #33 ;
INFO  14:20:41,918 - #41 }
INFO  14:20:41,918 - #41 }
INFO  14:20:41,918 - #41 }
INFO  14:20:41,919 - #44 Table
INFO  14:20:41,919 - #44 val
INFO  14:20:41,925 - #33 ;
INFO  14:20:41,925 - #40 {
INFO  14:20:41,925 - #13 void
INFO  14:20:41,925 - #44 f
INFO  14:20:41,926 - #36 (
INFO  14:20:41,926 - #44 char
INFO  14:20:41,926 - #44 ch
INFO  14:20:41,926 - #34 ,
INFO  14:20:41,926 - #44 int
INFO  14:20:41,926 - #44 a
INFO  14:20:41,926 - #34 ,
INFO  14:20:41,926 - #44 int
INFO  14:20:41,926 - #44 arg
INFO  14:20:41,926 - #37 )
INFO  14:20:41,926 - #44 int
INFO  14:20:41,926 - #44 x
INFO  14:20:41,926 - #33 ;
INFO  14:20:41,926 - #40 {
INFO  14:20:41,927 - #44 x
INFO  14:20:41,927 - #30 =
INFO  14:20:41,927 - #44 arg
INFO  14:20:41,927 - #33 ;
INFO  14:20:41,927 - #41 }
INFO  14:20:41,927 - #13 void
INFO  14:20:41,927 - #44 main
INFO  14:20:41,927 - #36 (
INFO  14:20:41,927 - #37 )
INFO  14:20:41,927 - #44 int
INFO  14:20:41,927 - #44 x
INFO  14:20:41,927 - #34 ,
INFO  14:20:41,927 - #44 i
INFO  14:20:41,927 - #33 ;
INFO  14:20:41,927 - #44 char
INFO  14:20:41,928 - #44 c
INFO  14:20:41,928 - #33 ;
INFO  14:20:41,928 - #40 {
INFO  14:20:41,928 - #44 val
INFO  14:20:41,928 - #30 =
INFO  14:20:41,928 - #9 new
INFO  14:20:41,928 - #44 Table
INFO  14:20:41,928 - #33 ;
INFO  14:20:41,928 - #44 val
INFO  14:20:41,928 - #35 .
INFO  14:20:41,928 - #44 pos
INFO  14:20:41,928 - #30 =
INFO  14:20:41,928 - #9 new
INFO  14:20:41,928 - #44 int
INFO  14:20:41,929 - #38 [
INFO  14:20:41,929 - #44 size
INFO  14:20:41,929 - #39 ]
INFO  14:20:41,929 - #33 ;
INFO  14:20:41,929 - #44 val
INFO  14:20:41,929 - #35 .
INFO  14:20:41,929 - #44 neg
INFO  14:20:41,929 - #30 =
INFO  14:20:41,929 - #9 new
INFO  14:20:41,929 - #44 int
INFO  14:20:41,929 - #38 [
INFO  14:20:41,929 - #44 size
INFO  14:20:41,929 - #39 ]
INFO  14:20:41,929 - #33 ;
INFO  14:20:41,930 - #14 for
INFO  14:20:41,930 - #36 (
INFO  14:20:41,930 - #44 i
INFO  14:20:41,930 - #30 =
INFO  14:20:41,930 - #43 0
INFO  14:20:41,930 - #33 ;
INFO  14:20:41,930 - #44 i
INFO  14:20:41,930 - #26 <
INFO  14:20:41,930 - #44 size
INFO  14:20:41,932 - #33 ;
INFO  14:20:41,932 - #44 i
INFO  14:20:41,932 - #31 ++
INFO  14:20:41,932 - #37 )
INFO  14:20:41,933 - #40 {
INFO  14:20:41,933 - #44 val
INFO  14:20:41,933 - #35 .
INFO  14:20:41,933 - #44 putp
INFO  14:20:41,933 - #36 (
INFO  14:20:41,934 - #43 0
INFO  14:20:41,934 - #34 ,
INFO  14:20:41,934 - #44 i
INFO  14:20:41,934 - #37 )
INFO  14:20:41,934 - #33 ;
INFO  14:20:41,935 - #44 val
INFO  14:20:41,935 - #35 .
INFO  14:20:41,935 - #44 putn
INFO  14:20:41,935 - #36 (
INFO  14:20:41,935 - #43 0
INFO  14:20:41,935 - #34 ,
INFO  14:20:41,935 - #44 i
INFO  14:20:41,935 - #37 )
INFO  14:20:41,935 - #33 ;
INFO  14:20:41,935 - #41 }
INFO  14:20:41,935 - #44 f
INFO  14:20:41,935 - #36 (
INFO  14:20:41,936 - #44 c
INFO  14:20:41,936 - #34 ,
INFO  14:20:41,936 - #44 x
INFO  14:20:41,936 - #34 ,
INFO  14:20:41,936 - #44 i
INFO  14:20:41,936 - #37 )
INFO  14:20:41,936 - #33 ;
INFO  14:20:41,936 - #11 read
INFO  14:20:41,936 - #36 (
INFO  14:20:41,936 - #44 x
INFO  14:20:41,936 - #37 )
INFO  14:20:41,936 - #33 ;
INFO  14:20:41,936 - #14 for
INFO  14:20:41,936 - #36 (
INFO  14:20:41,936 - #33 ;
INFO  14:20:41,937 - #44 x
INFO  14:20:41,937 - #24 >
INFO  14:20:41,937 - #43 0
INFO  14:20:41,938 - #33 ;
INFO  14:20:41,938 - #37 )
INFO  14:20:41,938 - #40 {
INFO  14:20:41,938 - #8 if
INFO  14:20:41,938 - #36 (
INFO  14:20:41,938 - #43 0
INFO  14:20:41,938 - #27 <=
INFO  14:20:41,938 - #44 x
INFO  14:20:41,938 - #28 &&
INFO  14:20:41,938 - #44 x
INFO  14:20:41,938 - #26 <
INFO  14:20:41,938 - #44 size
INFO  14:20:41,939 - #37 )
INFO  14:20:41,939 - #40 {
INFO  14:20:41,939 - #44 val
INFO  14:20:41,939 - #35 .
INFO  14:20:41,939 - #44 putp
INFO  14:20:41,940 - #36 (
INFO  14:20:41,940 - #44 val
INFO  14:20:41,940 - #35 .
INFO  14:20:41,940 - #44 getp
INFO  14:20:41,940 - #36 (
INFO  14:20:41,940 - #44 x
INFO  14:20:41,940 - #37 )
INFO  14:20:41,941 - #17 +
INFO  14:20:41,941 - #43 1
INFO  14:20:41,941 - #37 )
INFO  14:20:41,942 - #33 ;
INFO  14:20:41,942 - #41 }
INFO  14:20:41,942 - #6 else
INFO  14:20:41,942 - #8 if
INFO  14:20:41,942 - #36 (
INFO  14:20:41,942 - #18 -
INFO  14:20:41,942 - #44 size
INFO  14:20:41,942 - #26 <
INFO  14:20:41,942 - #44 x
INFO  14:20:41,942 - #28 &&
INFO  14:20:41,942 - #44 x
INFO  14:20:41,942 - #26 <
INFO  14:20:41,942 - #43 0
INFO  14:20:41,942 - #37 )
INFO  14:20:41,942 - #40 {
INFO  14:20:41,942 - #44 val
INFO  14:20:41,942 - #35 .
INFO  14:20:41,942 - #44 putn
INFO  14:20:41,942 - #36 (
INFO  14:20:41,942 - #44 val
INFO  14:20:41,943 - #35 .
INFO  14:20:41,943 - #44 getn
INFO  14:20:41,943 - #36 (
INFO  14:20:41,943 - #18 -
INFO  14:20:41,943 - #44 x
INFO  14:20:41,943 - #37 )
INFO  14:20:41,943 - #17 +
INFO  14:20:41,943 - #43 1
INFO  14:20:41,943 - #37 )
INFO  14:20:41,943 - #33 ;
INFO  14:20:41,943 - #41 }
INFO  14:20:41,943 - #11 read
INFO  14:20:41,943 - #36 (
INFO  14:20:41,944 - #44 x
INFO  14:20:41,944 - #37 )
INFO  14:20:41,944 - #33 ;
INFO  14:20:41,944 - #41 }
INFO  14:20:41,944 - #41 }
INFO  14:20:41,944 - #41 }
ERROR 14:20:41,974 - Error on line 4: Name size has already been declared.
INFO  14:21:19,173 - #2 program
INFO  14:21:19,173 - #44 P
INFO  14:21:19,173 - #7 const
INFO  14:21:19,175 - #44 int
INFO  14:21:19,175 - #44 size
INFO  14:21:19,177 - #30 =
INFO  14:21:19,177 - #43 10
INFO  14:21:19,177 - #33 ;
INFO  14:21:19,179 - #5 abstract
INFO  14:21:19,181 - #4 class
INFO  14:21:19,181 - #44 Tab
INFO  14:21:19,181 - #40 {
INFO  14:21:19,182 - #44 int
INFO  14:21:19,183 - #44 size
INFO  14:21:19,184 - #33 ;
INFO  14:21:19,186 - #40 {
INFO  14:21:19,187 - #5 abstract
INFO  14:21:19,187 - #44 int
INFO  14:21:19,188 - #44 getp
INFO  14:21:19,188 - #36 (
INFO  14:21:19,188 - #44 int
INFO  14:21:19,188 - #44 i
INFO  14:21:19,188 - #37 )
INFO  14:21:19,190 - #33 ;
INFO  14:21:19,190 - #5 abstract
INFO  14:21:19,191 - #44 int
INFO  14:21:19,191 - #44 getn
INFO  14:21:19,191 - #36 (
INFO  14:21:19,191 - #44 int
INFO  14:21:19,191 - #44 i
INFO  14:21:19,191 - #37 )
INFO  14:21:19,191 - #33 ;
INFO  14:21:19,192 - #44 int
INFO  14:21:19,192 - #44 getSize
INFO  14:21:19,192 - #36 (
INFO  14:21:19,192 - #37 )
INFO  14:21:19,193 - #40 {
INFO  14:21:19,194 - #12 return
INFO  14:21:19,194 - #44 size
INFO  14:21:19,196 - #33 ;
INFO  14:21:19,197 - #41 }
INFO  14:21:19,198 - #41 }
INFO  14:21:19,198 - #41 }
INFO  14:21:19,198 - #4 class
INFO  14:21:19,200 - #44 Table
INFO  14:21:19,200 - #15 extends
INFO  14:21:19,200 - #44 Tab
INFO  14:21:19,200 - #40 {
INFO  14:21:19,201 - #44 int
INFO  14:21:19,201 - #44 pos
INFO  14:21:19,201 - #38 [
INFO  14:21:19,201 - #39 ]
INFO  14:21:19,201 - #34 ,
INFO  14:21:19,202 - #44 neg
INFO  14:21:19,202 - #38 [
INFO  14:21:19,203 - #39 ]
INFO  14:21:19,203 - #33 ;
INFO  14:21:19,203 - #40 {
INFO  14:21:19,203 - #13 void
INFO  14:21:19,204 - #44 putp
INFO  14:21:19,205 - #36 (
INFO  14:21:19,205 - #44 int
INFO  14:21:19,205 - #44 a
INFO  14:21:19,205 - #34 ,
INFO  14:21:19,205 - #44 int
INFO  14:21:19,205 - #44 idx
INFO  14:21:19,205 - #37 )
INFO  14:21:19,206 - #40 {
INFO  14:21:19,206 - #44 this
INFO  14:21:19,206 - #35 .
INFO  14:21:19,206 - #44 pos
INFO  14:21:19,206 - #38 [
INFO  14:21:19,206 - #44 idx
INFO  14:21:19,206 - #39 ]
INFO  14:21:19,206 - #30 =
INFO  14:21:19,206 - #44 a
INFO  14:21:19,207 - #33 ;
INFO  14:21:19,208 - #41 }
INFO  14:21:19,208 - #13 void
INFO  14:21:19,208 - #44 putn
INFO  14:21:19,208 - #36 (
INFO  14:21:19,209 - #44 int
INFO  14:21:19,209 - #44 a
INFO  14:21:19,209 - #34 ,
INFO  14:21:19,209 - #44 int
INFO  14:21:19,209 - #44 idx
INFO  14:21:19,209 - #37 )
INFO  14:21:19,209 - #40 {
INFO  14:21:19,209 - #44 this
INFO  14:21:19,209 - #35 .
INFO  14:21:19,209 - #44 neg
INFO  14:21:19,209 - #38 [
INFO  14:21:19,209 - #44 idx
INFO  14:21:19,209 - #39 ]
INFO  14:21:19,210 - #30 =
INFO  14:21:19,210 - #44 a
INFO  14:21:19,210 - #33 ;
INFO  14:21:19,210 - #41 }
INFO  14:21:19,210 - #44 int
INFO  14:21:19,210 - #44 getp
INFO  14:21:19,210 - #36 (
INFO  14:21:19,210 - #44 int
INFO  14:21:19,210 - #44 idx
INFO  14:21:19,210 - #37 )
INFO  14:21:19,210 - #40 {
INFO  14:21:19,210 - #12 return
INFO  14:21:19,210 - #44 pos
INFO  14:21:19,211 - #38 [
INFO  14:21:19,211 - #44 idx
INFO  14:21:19,211 - #39 ]
INFO  14:21:19,211 - #33 ;
INFO  14:21:19,211 - #41 }
INFO  14:21:19,211 - #44 int
INFO  14:21:19,211 - #44 getn
INFO  14:21:19,211 - #36 (
INFO  14:21:19,211 - #44 int
INFO  14:21:19,211 - #44 idx
INFO  14:21:19,211 - #37 )
INFO  14:21:19,211 - #40 {
INFO  14:21:19,211 - #12 return
INFO  14:21:19,212 - #44 neg
INFO  14:21:19,212 - #38 [
INFO  14:21:19,212 - #44 idx
INFO  14:21:19,212 - #39 ]
INFO  14:21:19,212 - #33 ;
INFO  14:21:19,212 - #41 }
INFO  14:21:19,212 - #41 }
INFO  14:21:19,212 - #41 }
INFO  14:21:19,212 - #44 Table
INFO  14:21:19,220 - #44 val
INFO  14:21:19,220 - #33 ;
INFO  14:21:19,220 - #40 {
INFO  14:21:19,220 - #13 void
INFO  14:21:19,220 - #44 f
INFO  14:21:19,220 - #36 (
INFO  14:21:19,220 - #44 char
INFO  14:21:19,220 - #44 ch
INFO  14:21:19,221 - #34 ,
INFO  14:21:19,221 - #44 int
INFO  14:21:19,221 - #44 a
INFO  14:21:19,221 - #34 ,
INFO  14:21:19,221 - #44 int
INFO  14:21:19,221 - #44 arg
INFO  14:21:19,221 - #37 )
INFO  14:21:19,221 - #44 int
INFO  14:21:19,221 - #44 x
INFO  14:21:19,221 - #33 ;
INFO  14:21:19,221 - #40 {
INFO  14:21:19,221 - #44 x
INFO  14:21:19,222 - #30 =
INFO  14:21:19,222 - #44 arg
INFO  14:21:19,222 - #33 ;
INFO  14:21:19,222 - #41 }
INFO  14:21:19,222 - #13 void
INFO  14:21:19,222 - #44 main
INFO  14:21:19,222 - #36 (
INFO  14:21:19,222 - #37 )
INFO  14:21:19,222 - #44 int
INFO  14:21:19,222 - #44 x
INFO  14:21:19,222 - #34 ,
INFO  14:21:19,222 - #44 i
INFO  14:21:19,222 - #33 ;
INFO  14:21:19,222 - #44 char
INFO  14:21:19,222 - #44 c
INFO  14:21:19,222 - #33 ;
INFO  14:21:19,223 - #40 {
INFO  14:21:19,223 - #44 val
INFO  14:21:19,223 - #30 =
INFO  14:21:19,223 - #9 new
INFO  14:21:19,223 - #44 Table
INFO  14:21:19,223 - #33 ;
INFO  14:21:19,223 - #44 val
INFO  14:21:19,223 - #35 .
INFO  14:21:19,223 - #44 pos
INFO  14:21:19,223 - #30 =
INFO  14:21:19,223 - #9 new
INFO  14:21:19,224 - #44 int
INFO  14:21:19,224 - #38 [
INFO  14:21:19,224 - #44 size
INFO  14:21:19,224 - #39 ]
INFO  14:21:19,225 - #33 ;
INFO  14:21:19,225 - #44 val
INFO  14:21:19,225 - #35 .
INFO  14:21:19,225 - #44 neg
INFO  14:21:19,225 - #30 =
INFO  14:21:19,225 - #9 new
INFO  14:21:19,225 - #44 int
INFO  14:21:19,225 - #38 [
INFO  14:21:19,225 - #44 size
INFO  14:21:19,225 - #39 ]
INFO  14:21:19,226 - #33 ;
INFO  14:21:19,226 - #14 for
INFO  14:21:19,226 - #36 (
INFO  14:21:19,226 - #44 i
INFO  14:21:19,226 - #30 =
INFO  14:21:19,226 - #43 0
INFO  14:21:19,226 - #33 ;
INFO  14:21:19,227 - #44 i
INFO  14:21:19,227 - #26 <
INFO  14:21:19,227 - #44 size
INFO  14:21:19,228 - #33 ;
INFO  14:21:19,229 - #44 i
INFO  14:21:19,229 - #31 ++
INFO  14:21:19,229 - #37 )
INFO  14:21:19,229 - #40 {
INFO  14:21:19,230 - #44 val
INFO  14:21:19,230 - #35 .
INFO  14:21:19,230 - #44 putp
INFO  14:21:19,230 - #36 (
INFO  14:21:19,231 - #43 0
INFO  14:21:19,231 - #34 ,
INFO  14:21:19,231 - #44 i
INFO  14:21:19,231 - #37 )
INFO  14:21:19,232 - #33 ;
INFO  14:21:19,232 - #44 val
INFO  14:21:19,232 - #35 .
INFO  14:21:19,232 - #44 putn
INFO  14:21:19,232 - #36 (
INFO  14:21:19,232 - #43 0
INFO  14:21:19,232 - #34 ,
INFO  14:21:19,232 - #44 i
INFO  14:21:19,233 - #37 )
INFO  14:21:19,233 - #33 ;
INFO  14:21:19,233 - #41 }
INFO  14:21:19,233 - #44 f
INFO  14:21:19,233 - #36 (
INFO  14:21:19,233 - #44 c
INFO  14:21:19,233 - #34 ,
INFO  14:21:19,233 - #44 x
INFO  14:21:19,234 - #34 ,
INFO  14:21:19,234 - #44 i
INFO  14:21:19,234 - #37 )
INFO  14:21:19,234 - #33 ;
INFO  14:21:19,234 - #11 read
INFO  14:21:19,234 - #36 (
INFO  14:21:19,234 - #44 x
INFO  14:21:19,234 - #37 )
INFO  14:21:19,234 - #33 ;
INFO  14:21:19,234 - #14 for
INFO  14:21:19,234 - #36 (
INFO  14:21:19,234 - #33 ;
INFO  14:21:19,235 - #44 x
INFO  14:21:19,235 - #24 >
INFO  14:21:19,235 - #43 0
INFO  14:21:19,236 - #33 ;
INFO  14:21:19,236 - #37 )
INFO  14:21:19,236 - #40 {
INFO  14:21:19,236 - #8 if
INFO  14:21:19,236 - #36 (
INFO  14:21:19,236 - #43 0
INFO  14:21:19,236 - #27 <=
INFO  14:21:19,237 - #44 x
INFO  14:21:19,237 - #28 &&
INFO  14:21:19,237 - #44 x
INFO  14:21:19,237 - #26 <
INFO  14:21:19,238 - #44 size
INFO  14:21:19,238 - #37 )
INFO  14:21:19,238 - #40 {
INFO  14:21:19,238 - #44 val
INFO  14:21:19,238 - #35 .
INFO  14:21:19,239 - #44 putp
INFO  14:21:19,239 - #36 (
INFO  14:21:19,239 - #44 val
INFO  14:21:19,239 - #35 .
INFO  14:21:19,239 - #44 getp
INFO  14:21:19,239 - #36 (
INFO  14:21:19,240 - #44 x
INFO  14:21:19,240 - #37 )
INFO  14:21:19,240 - #17 +
INFO  14:21:19,240 - #43 1
INFO  14:21:19,241 - #37 )
INFO  14:21:19,241 - #33 ;
INFO  14:21:19,241 - #41 }
INFO  14:21:19,241 - #6 else
INFO  14:21:19,241 - #8 if
INFO  14:21:19,241 - #36 (
INFO  14:21:19,241 - #18 -
INFO  14:21:19,241 - #44 size
INFO  14:21:19,242 - #26 <
INFO  14:21:19,242 - #44 x
INFO  14:21:19,242 - #28 &&
INFO  14:21:19,242 - #44 x
INFO  14:21:19,242 - #26 <
INFO  14:21:19,242 - #43 0
INFO  14:21:19,242 - #37 )
INFO  14:21:19,242 - #40 {
INFO  14:21:19,242 - #44 val
INFO  14:21:19,242 - #35 .
INFO  14:21:19,243 - #44 putn
INFO  14:21:19,243 - #36 (
INFO  14:21:19,243 - #44 val
INFO  14:21:19,243 - #35 .
INFO  14:21:19,243 - #44 getn
INFO  14:21:19,243 - #36 (
INFO  14:21:19,243 - #18 -
INFO  14:21:19,243 - #44 x
INFO  14:21:19,243 - #37 )
INFO  14:21:19,243 - #17 +
INFO  14:21:19,243 - #43 1
INFO  14:21:19,243 - #37 )
INFO  14:21:19,243 - #33 ;
INFO  14:21:19,243 - #41 }
INFO  14:21:19,243 - #11 read
INFO  14:21:19,244 - #36 (
INFO  14:21:19,244 - #44 x
INFO  14:21:19,244 - #37 )
INFO  14:21:19,245 - #33 ;
INFO  14:21:19,245 - #41 }
INFO  14:21:19,245 - #41 }
INFO  14:21:19,245 - #41 }
ERROR 14:21:19,304 - Error on line 4: Name size has already been declared.
INFO  14:22:57,841 - #2 program
INFO  14:22:57,841 - #44 P
INFO  14:22:57,841 - #7 const
INFO  14:22:57,842 - #44 int
INFO  14:22:57,842 - #44 size
INFO  14:22:57,843 - #30 =
INFO  14:22:57,843 - #43 10
INFO  14:22:57,843 - #33 ;
INFO  14:22:57,844 - #44 int
INFO  14:22:57,845 - #44 pos
INFO  14:22:57,845 - #38 [
INFO  14:22:57,845 - #39 ]
INFO  14:22:57,845 - #34 ,
INFO  14:22:57,847 - #44 neg
INFO  14:22:57,847 - #38 [
INFO  14:22:57,847 - #39 ]
INFO  14:22:57,847 - #33 ;
INFO  14:22:57,847 - #40 {
INFO  14:22:57,847 - #13 void
INFO  14:22:57,848 - #44 f
INFO  14:22:57,849 - #36 (
INFO  14:22:57,849 - #44 char
INFO  14:22:57,849 - #44 ch
INFO  14:22:57,849 - #34 ,
INFO  14:22:57,850 - #44 int
INFO  14:22:57,850 - #44 a
INFO  14:22:57,851 - #34 ,
INFO  14:22:57,851 - #44 int
INFO  14:22:57,851 - #44 arg
INFO  14:22:57,851 - #37 )
INFO  14:22:57,852 - #44 int
INFO  14:22:57,853 - #44 x
INFO  14:22:57,853 - #33 ;
INFO  14:22:57,853 - #40 {
INFO  14:22:57,853 - #44 x
INFO  14:22:57,854 - #30 =
INFO  14:22:57,854 - #44 arg
INFO  14:22:57,855 - #33 ;
INFO  14:22:57,855 - #41 }
INFO  14:22:57,856 - #13 void
INFO  14:22:57,856 - #44 main
INFO  14:22:57,856 - #36 (
INFO  14:22:57,856 - #37 )
INFO  14:22:57,857 - #44 int
INFO  14:22:57,857 - #44 x
INFO  14:22:57,857 - #34 ,
INFO  14:22:57,857 - #44 i
INFO  14:22:57,857 - #33 ;
INFO  14:22:57,857 - #44 char
INFO  14:22:57,857 - #44 c
INFO  14:22:57,857 - #33 ;
INFO  14:22:57,857 - #40 {
INFO  14:22:57,857 - #44 pos
INFO  14:22:57,857 - #30 =
INFO  14:22:57,858 - #9 new
INFO  14:22:57,858 - #44 int
INFO  14:22:57,858 - #38 [
INFO  14:22:57,858 - #44 size
INFO  14:22:57,858 - #39 ]
INFO  14:22:57,858 - #33 ;
INFO  14:22:57,858 - #44 neg
INFO  14:22:57,858 - #30 =
INFO  14:22:57,858 - #9 new
INFO  14:22:57,858 - #44 int
INFO  14:22:57,858 - #38 [
INFO  14:22:57,858 - #44 size
INFO  14:22:57,858 - #39 ]
INFO  14:22:57,859 - #33 ;
INFO  14:22:57,859 - #14 for
INFO  14:22:57,859 - #36 (
INFO  14:22:57,859 - #44 i
INFO  14:22:57,859 - #30 =
INFO  14:22:57,859 - #43 0
INFO  14:22:57,859 - #33 ;
INFO  14:22:57,859 - #44 i
INFO  14:22:57,859 - #26 <
INFO  14:22:57,860 - #44 size
INFO  14:22:57,860 - #33 ;
INFO  14:22:57,861 - #44 i
INFO  14:22:57,861 - #31 ++
INFO  14:22:57,861 - #37 )
INFO  14:22:57,861 - #40 {
INFO  14:22:57,861 - #41 }
INFO  14:22:57,861 - #41 }
INFO  14:22:57,861 - #44 f
INFO  14:22:57,862 - #36 (
ERROR 14:22:57,862 - 
Sintaksna greska na liniji 22
INFO  14:22:57,862 - #44 c
INFO  14:22:57,863 - #34 ,
INFO  14:22:57,863 - #44 x
INFO  14:22:57,863 - #34 ,
INFO  14:22:57,863 - #44 i
INFO  14:22:57,863 - #37 )
INFO  14:22:57,863 - #33 ;
INFO  14:22:57,863 - #11 read
ERROR 14:22:57,863 - 
Sintaksna greska na liniji 24
INFO  14:22:57,863 - #36 (
INFO  14:22:57,864 - #44 x
INFO  14:22:57,864 - #37 )
INFO  14:22:57,864 - #33 ;
INFO  14:22:57,864 - #14 for
ERROR 14:22:57,864 - 
Sintaksna greska na liniji 25
INFO  14:22:57,864 - #36 (
INFO  14:22:57,864 - #33 ;
INFO  14:22:57,864 - #44 x
ERROR 14:22:57,864 - Izvrsen oporavak u liniji 6
INFO  14:22:57,865 - #24 >
ERROR 14:22:57,865 - 
Sintaksna greska na liniji 25
INFO  14:22:57,865 - #43 0
INFO  14:22:57,865 - #33 ;
INFO  14:22:57,865 - #37 )
ERROR 14:22:57,865 - 
Sintaksna greska na liniji 25
INFO  14:22:57,865 - #40 {
INFO  14:22:57,865 - #8 if
ERROR 14:22:57,865 - Izvrsen oporavak u liniji 8
ERROR 14:22:57,866 - 
Sintaksna greska na liniji 26
INFO  14:22:57,867 - #36 (
INFO  14:22:57,867 - #43 0
INFO  14:22:57,867 - #27 <=
INFO  14:22:57,867 - #44 x
INFO  14:22:57,867 - #28 &&
INFO  14:22:57,867 - #44 x
INFO  14:22:57,867 - #26 <
INFO  14:22:57,867 - #44 size
INFO  14:22:57,867 - #37 )
INFO  14:22:57,867 - #40 {
INFO  14:22:57,867 - #41 }
ERROR 14:22:57,867 - Izvrsen oporavak u liniji 8
INFO  14:22:57,868 - #6 else
ERROR 14:22:57,868 - 
Sintaksna greska na liniji 29
INFO  14:22:57,873 - #8 if
INFO  14:22:57,873 - #36 (
INFO  14:22:57,873 - #18 -
INFO  14:22:57,873 - #44 size
INFO  14:22:57,873 - #26 <
INFO  14:22:57,873 - #44 x
INFO  14:22:57,873 - #28 &&
INFO  14:22:57,873 - #44 x
INFO  14:22:57,873 - #26 <
INFO  14:22:57,873 - #43 0
INFO  14:22:57,874 - #37 )
INFO  14:22:57,874 - #40 {
INFO  14:22:57,874 - #41 }
INFO  14:22:57,874 - #11 read
INFO  14:22:57,874 - #36 (
INFO  14:22:57,874 - #44 x
INFO  14:22:57,874 - #37 )
INFO  14:22:57,874 - #33 ;
INFO  14:22:57,874 - #41 }
ERROR 14:22:57,874 - Izvrsen oporavak u liniji 36
INFO  14:22:57,874 - #41 }
ERROR 14:22:57,874 - 
Sintaksna greska na liniji 34
INFO  14:22:57,874 - #41 }
ERROR 14:22:57,875 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 35
INFO  14:23:59,898 - #2 program
INFO  14:23:59,899 - #44 P
INFO  14:23:59,899 - #7 const
INFO  14:23:59,900 - #44 int
INFO  14:23:59,900 - #44 size
INFO  14:23:59,901 - #30 =
INFO  14:23:59,901 - #43 10
INFO  14:23:59,901 - #33 ;
INFO  14:23:59,902 - #44 int
INFO  14:23:59,903 - #44 pos
INFO  14:23:59,903 - #38 [
INFO  14:23:59,903 - #39 ]
INFO  14:23:59,903 - #34 ,
INFO  14:23:59,904 - #44 neg
INFO  14:23:59,904 - #38 [
INFO  14:23:59,904 - #39 ]
INFO  14:23:59,904 - #33 ;
INFO  14:23:59,904 - #40 {
INFO  14:23:59,904 - #13 void
INFO  14:23:59,905 - #44 f
INFO  14:23:59,905 - #36 (
INFO  14:23:59,906 - #44 char
INFO  14:23:59,906 - #44 ch
INFO  14:23:59,906 - #34 ,
INFO  14:23:59,907 - #44 int
INFO  14:23:59,907 - #44 a
INFO  14:23:59,907 - #34 ,
INFO  14:23:59,907 - #44 int
INFO  14:23:59,907 - #44 arg
INFO  14:23:59,907 - #37 )
INFO  14:23:59,908 - #44 int
INFO  14:23:59,909 - #44 x
INFO  14:23:59,909 - #33 ;
INFO  14:23:59,909 - #40 {
INFO  14:23:59,910 - #44 x
INFO  14:23:59,910 - #30 =
INFO  14:23:59,910 - #44 arg
INFO  14:23:59,911 - #33 ;
INFO  14:23:59,912 - #41 }
INFO  14:23:59,912 - #13 void
INFO  14:23:59,912 - #44 main
INFO  14:23:59,912 - #36 (
INFO  14:23:59,912 - #37 )
INFO  14:23:59,913 - #44 int
INFO  14:23:59,913 - #44 x
INFO  14:23:59,913 - #34 ,
INFO  14:23:59,913 - #44 i
INFO  14:23:59,913 - #33 ;
INFO  14:23:59,913 - #44 char
INFO  14:23:59,914 - #44 c
INFO  14:23:59,914 - #33 ;
INFO  14:23:59,914 - #40 {
INFO  14:23:59,914 - #44 pos
INFO  14:23:59,914 - #30 =
INFO  14:23:59,914 - #9 new
INFO  14:23:59,914 - #44 int
INFO  14:23:59,914 - #38 [
INFO  14:23:59,914 - #44 size
INFO  14:23:59,914 - #39 ]
INFO  14:23:59,914 - #33 ;
INFO  14:23:59,915 - #44 neg
INFO  14:23:59,915 - #30 =
INFO  14:23:59,915 - #9 new
INFO  14:23:59,915 - #44 int
INFO  14:23:59,915 - #38 [
INFO  14:23:59,915 - #44 size
INFO  14:23:59,915 - #39 ]
INFO  14:23:59,915 - #33 ;
INFO  14:23:59,915 - #14 for
INFO  14:23:59,915 - #36 (
INFO  14:23:59,915 - #44 i
INFO  14:23:59,915 - #30 =
INFO  14:23:59,915 - #43 0
INFO  14:23:59,916 - #33 ;
INFO  14:23:59,916 - #44 i
INFO  14:23:59,916 - #26 <
INFO  14:23:59,916 - #44 size
INFO  14:23:59,917 - #33 ;
INFO  14:23:59,918 - #44 i
INFO  14:23:59,918 - #31 ++
INFO  14:23:59,918 - #37 )
INFO  14:23:59,918 - #40 {
INFO  14:23:59,919 - #41 }
INFO  14:23:59,919 - #41 }
INFO  14:23:59,919 - #44 f
INFO  14:23:59,919 - #36 (
ERROR 14:23:59,919 - 
Sintaksna greska na liniji 22
INFO  14:23:59,919 - #44 c
INFO  14:23:59,920 - #34 ,
INFO  14:23:59,920 - #44 x
INFO  14:23:59,920 - #34 ,
INFO  14:23:59,920 - #44 i
INFO  14:23:59,920 - #37 )
INFO  14:23:59,920 - #33 ;
INFO  14:23:59,920 - #11 read
ERROR 14:23:59,920 - 
Sintaksna greska na liniji 24
INFO  14:23:59,920 - #36 (
INFO  14:23:59,921 - #44 x
INFO  14:23:59,921 - #37 )
INFO  14:23:59,921 - #33 ;
INFO  14:23:59,921 - #14 for
ERROR 14:23:59,921 - 
Sintaksna greska na liniji 25
INFO  14:23:59,921 - #36 (
INFO  14:23:59,921 - #33 ;
INFO  14:23:59,921 - #44 x
ERROR 14:23:59,921 - Izvrsen oporavak u liniji 6
INFO  14:23:59,922 - #24 >
ERROR 14:23:59,922 - 
Sintaksna greska na liniji 25
INFO  14:23:59,922 - #43 0
INFO  14:23:59,922 - #33 ;
INFO  14:23:59,922 - #37 )
ERROR 14:23:59,922 - 
Sintaksna greska na liniji 25
INFO  14:23:59,922 - #40 {
INFO  14:23:59,922 - #8 if
ERROR 14:23:59,922 - Izvrsen oporavak u liniji 8
ERROR 14:23:59,924 - 
Sintaksna greska na liniji 26
INFO  14:23:59,924 - #36 (
INFO  14:23:59,924 - #43 0
INFO  14:23:59,925 - #27 <=
INFO  14:23:59,925 - #44 x
INFO  14:23:59,925 - #28 &&
INFO  14:23:59,925 - #44 x
INFO  14:23:59,925 - #26 <
INFO  14:23:59,925 - #44 size
INFO  14:23:59,925 - #37 )
INFO  14:23:59,925 - #40 {
INFO  14:23:59,925 - #11 read
ERROR 14:23:59,925 - Izvrsen oporavak u liniji 8
ERROR 14:23:59,925 - 
Sintaksna greska na liniji 27
INFO  14:23:59,925 - #36 (
INFO  14:23:59,931 - #44 x
INFO  14:23:59,931 - #37 )
INFO  14:23:59,931 - #33 ;
INFO  14:23:59,931 - #41 }
ERROR 14:23:59,931 - Izvrsen oporavak u liniji 25
ERROR 14:23:59,931 - 
Sintaksna greska na liniji 28
INFO  14:23:59,932 - #6 else
INFO  14:23:59,932 - #8 if
INFO  14:23:59,932 - #36 (
INFO  14:23:59,932 - #18 -
INFO  14:23:59,932 - #44 size
INFO  14:23:59,932 - #26 <
INFO  14:23:59,932 - #44 x
INFO  14:23:59,932 - #28 &&
INFO  14:23:59,932 - #44 x
INFO  14:23:59,932 - #26 <
INFO  14:23:59,932 - #43 0
INFO  14:23:59,932 - #37 )
INFO  14:23:59,932 - #40 {
INFO  14:23:59,932 - #11 read
ERROR 14:23:59,933 - Izvrsen oporavak u liniji 8
ERROR 14:23:59,933 - 
Sintaksna greska na liniji 30
INFO  14:23:59,933 - #36 (
INFO  14:23:59,933 - #44 x
INFO  14:23:59,933 - #37 )
INFO  14:23:59,933 - #33 ;
INFO  14:23:59,933 - #41 }
ERROR 14:23:59,933 - Izvrsen oporavak u liniji 25
ERROR 14:23:59,933 - 
Sintaksna greska na liniji 31
INFO  14:23:59,933 - #11 read
INFO  14:23:59,933 - #36 (
INFO  14:23:59,933 - #44 x
INFO  14:23:59,933 - #37 )
INFO  14:23:59,933 - #33 ;
INFO  14:23:59,933 - #41 }
ERROR 14:23:59,933 - Izvrsen oporavak u liniji 25
ERROR 14:23:59,933 - 
Sintaksna greska na liniji 33
INFO  14:23:59,934 - #41 }
INFO  14:23:59,934 - #41 }
ERROR 14:23:59,934 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 35
INFO  14:25:06,080 - #2 program
INFO  14:25:06,080 - #44 P
INFO  14:25:06,080 - #7 const
INFO  14:25:06,082 - #44 int
INFO  14:25:06,082 - #44 size
INFO  14:25:06,083 - #30 =
INFO  14:25:06,083 - #43 10
INFO  14:25:06,083 - #33 ;
INFO  14:25:06,084 - #44 int
INFO  14:25:06,084 - #44 pos
INFO  14:25:06,085 - #38 [
INFO  14:25:06,085 - #39 ]
INFO  14:25:06,085 - #34 ,
INFO  14:25:06,086 - #44 neg
INFO  14:25:06,086 - #38 [
INFO  14:25:06,086 - #39 ]
INFO  14:25:06,086 - #33 ;
INFO  14:25:06,086 - #40 {
INFO  14:25:06,086 - #13 void
INFO  14:25:06,087 - #44 f
INFO  14:25:06,088 - #36 (
INFO  14:25:06,088 - #44 char
INFO  14:25:06,088 - #44 ch
INFO  14:25:06,088 - #34 ,
INFO  14:25:06,089 - #44 int
INFO  14:25:06,089 - #44 a
INFO  14:25:06,089 - #34 ,
INFO  14:25:06,089 - #44 int
INFO  14:25:06,090 - #44 arg
INFO  14:25:06,090 - #37 )
INFO  14:25:06,090 - #44 int
INFO  14:25:06,093 - #44 x
INFO  14:25:06,093 - #33 ;
INFO  14:25:06,093 - #40 {
INFO  14:25:06,094 - #44 x
INFO  14:25:06,094 - #30 =
INFO  14:25:06,095 - #44 arg
INFO  14:25:06,096 - #33 ;
INFO  14:25:06,097 - #41 }
INFO  14:25:06,098 - #13 void
INFO  14:25:06,098 - #44 main
INFO  14:25:06,098 - #36 (
INFO  14:25:06,098 - #37 )
INFO  14:25:06,099 - #44 int
INFO  14:25:06,099 - #44 x
INFO  14:25:06,100 - #34 ,
INFO  14:25:06,100 - #44 i
INFO  14:25:06,100 - #33 ;
INFO  14:25:06,100 - #44 char
INFO  14:25:06,100 - #44 c
INFO  14:25:06,100 - #33 ;
INFO  14:25:06,100 - #40 {
INFO  14:25:06,100 - #44 pos
INFO  14:25:06,100 - #30 =
INFO  14:25:06,101 - #9 new
INFO  14:25:06,101 - #44 int
INFO  14:25:06,101 - #38 [
INFO  14:25:06,101 - #44 size
INFO  14:25:06,101 - #39 ]
INFO  14:25:06,101 - #33 ;
INFO  14:25:06,101 - #44 neg
INFO  14:25:06,101 - #30 =
INFO  14:25:06,102 - #9 new
INFO  14:25:06,102 - #44 int
INFO  14:25:06,102 - #38 [
INFO  14:25:06,102 - #44 size
INFO  14:25:06,102 - #39 ]
INFO  14:25:06,102 - #33 ;
INFO  14:25:06,102 - #14 for
INFO  14:25:06,103 - #36 (
INFO  14:25:06,103 - #44 i
INFO  14:25:06,103 - #30 =
INFO  14:25:06,103 - #43 0
INFO  14:25:06,103 - #33 ;
INFO  14:25:06,103 - #44 i
INFO  14:25:06,103 - #26 <
INFO  14:25:06,104 - #44 size
INFO  14:25:06,105 - #33 ;
INFO  14:25:06,106 - #44 i
INFO  14:25:06,106 - #31 ++
INFO  14:25:06,106 - #37 )
INFO  14:25:06,106 - #40 {
INFO  14:25:06,106 - #41 }
INFO  14:25:06,106 - #41 }
INFO  14:25:06,107 - #44 f
INFO  14:25:06,107 - #36 (
ERROR 14:25:06,107 - 
Sintaksna greska na liniji 22
INFO  14:25:06,107 - #44 c
INFO  14:25:06,108 - #34 ,
INFO  14:25:06,108 - #44 x
INFO  14:25:06,108 - #34 ,
INFO  14:25:06,108 - #44 i
INFO  14:25:06,109 - #37 )
INFO  14:25:06,109 - #33 ;
INFO  14:25:06,109 - #11 read
ERROR 14:25:06,109 - 
Sintaksna greska na liniji 24
INFO  14:25:06,109 - #36 (
INFO  14:25:06,109 - #44 x
INFO  14:25:06,109 - #37 )
INFO  14:25:06,109 - #33 ;
INFO  14:25:06,109 - #41 }
ERROR 14:25:06,109 - Izvrsen oporavak u liniji 6
ERROR 14:25:06,110 - 
Sintaksna greska na liniji 26
INFO  14:25:06,110 - #41 }
ERROR 14:25:06,110 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 27
INFO  14:25:51,371 - #2 program
INFO  14:25:51,371 - #44 P
INFO  14:25:51,371 - #7 const
INFO  14:25:51,373 - #44 int
INFO  14:25:51,373 - #44 size
INFO  14:25:51,374 - #30 =
INFO  14:25:51,374 - #43 10
INFO  14:25:51,375 - #33 ;
INFO  14:25:51,376 - #44 int
INFO  14:25:51,377 - #44 pos
INFO  14:25:51,378 - #38 [
INFO  14:25:51,378 - #39 ]
INFO  14:25:51,378 - #34 ,
INFO  14:25:51,380 - #44 neg
INFO  14:25:51,380 - #38 [
INFO  14:25:51,380 - #39 ]
INFO  14:25:51,380 - #33 ;
INFO  14:25:51,380 - #40 {
INFO  14:25:51,381 - #13 void
INFO  14:25:51,381 - #44 f
INFO  14:25:51,382 - #36 (
INFO  14:25:51,382 - #44 char
INFO  14:25:51,382 - #44 ch
INFO  14:25:51,383 - #34 ,
INFO  14:25:51,383 - #44 int
INFO  14:25:51,383 - #44 a
INFO  14:25:51,383 - #34 ,
INFO  14:25:51,384 - #44 int
INFO  14:25:51,384 - #44 arg
INFO  14:25:51,384 - #37 )
INFO  14:25:51,384 - #44 int
INFO  14:25:51,385 - #44 x
INFO  14:25:51,386 - #33 ;
INFO  14:25:51,386 - #40 {
INFO  14:25:51,386 - #44 x
INFO  14:25:51,387 - #30 =
INFO  14:25:51,387 - #44 arg
INFO  14:25:51,389 - #33 ;
INFO  14:25:51,390 - #41 }
INFO  14:25:51,390 - #13 void
INFO  14:25:51,391 - #44 main
INFO  14:25:51,391 - #36 (
INFO  14:25:51,391 - #37 )
INFO  14:25:51,392 - #44 int
INFO  14:25:51,392 - #44 x
INFO  14:25:51,392 - #34 ,
INFO  14:25:51,392 - #44 i
INFO  14:25:51,392 - #33 ;
INFO  14:25:51,392 - #44 char
INFO  14:25:51,392 - #44 c
INFO  14:25:51,392 - #33 ;
INFO  14:25:51,392 - #40 {
INFO  14:25:51,392 - #44 pos
INFO  14:25:51,392 - #30 =
INFO  14:25:51,393 - #9 new
INFO  14:25:51,393 - #44 int
INFO  14:25:51,393 - #38 [
INFO  14:25:51,393 - #44 size
INFO  14:25:51,393 - #39 ]
INFO  14:25:51,393 - #33 ;
INFO  14:25:51,393 - #44 neg
INFO  14:25:51,393 - #30 =
INFO  14:25:51,393 - #9 new
INFO  14:25:51,393 - #44 int
INFO  14:25:51,394 - #38 [
INFO  14:25:51,394 - #44 size
INFO  14:25:51,394 - #39 ]
INFO  14:25:51,394 - #33 ;
INFO  14:25:51,394 - #14 for
INFO  14:25:51,394 - #36 (
INFO  14:25:51,394 - #44 i
INFO  14:25:51,394 - #30 =
INFO  14:25:51,394 - #43 0
INFO  14:25:51,394 - #33 ;
INFO  14:25:51,395 - #44 i
INFO  14:25:51,395 - #26 <
INFO  14:25:51,395 - #44 size
INFO  14:25:51,396 - #33 ;
INFO  14:25:51,397 - #44 i
INFO  14:25:51,397 - #31 ++
INFO  14:25:51,397 - #37 )
INFO  14:25:51,397 - #40 {
INFO  14:25:51,397 - #41 }
INFO  14:25:51,397 - #44 f
INFO  14:25:51,398 - #36 (
INFO  14:25:51,399 - #44 c
INFO  14:25:51,399 - #34 ,
INFO  14:25:51,399 - #44 x
INFO  14:25:51,399 - #34 ,
INFO  14:25:51,399 - #44 i
INFO  14:25:51,399 - #37 )
INFO  14:25:51,400 - #33 ;
INFO  14:25:51,400 - #11 read
INFO  14:25:51,400 - #36 (
INFO  14:25:51,400 - #44 x
INFO  14:25:51,400 - #37 )
INFO  14:25:51,400 - #33 ;
INFO  14:25:51,400 - #14 for
INFO  14:25:51,400 - #36 (
INFO  14:25:51,400 - #33 ;
INFO  14:25:51,401 - #44 x
INFO  14:25:51,401 - #24 >
INFO  14:25:51,401 - #43 0
INFO  14:25:51,402 - #33 ;
INFO  14:25:51,402 - #37 )
INFO  14:25:51,402 - #40 {
INFO  14:25:51,402 - #8 if
INFO  14:25:51,402 - #36 (
INFO  14:25:51,402 - #43 0
INFO  14:25:51,402 - #27 <=
INFO  14:25:51,402 - #44 x
INFO  14:25:51,403 - #28 &&
INFO  14:25:51,403 - #44 x
INFO  14:25:51,403 - #26 <
INFO  14:25:51,403 - #44 size
INFO  14:25:51,403 - #37 )
INFO  14:25:51,404 - #40 {
INFO  14:25:51,404 - #11 read
INFO  14:25:51,404 - #36 (
INFO  14:25:51,404 - #44 x
INFO  14:25:51,404 - #37 )
INFO  14:25:51,404 - #33 ;
INFO  14:25:51,404 - #41 }
INFO  14:25:51,404 - #6 else
INFO  14:25:51,404 - #8 if
INFO  14:25:51,404 - #36 (
INFO  14:25:51,404 - #18 -
INFO  14:25:51,404 - #44 size
INFO  14:25:51,405 - #26 <
INFO  14:25:51,405 - #44 x
INFO  14:25:51,410 - #28 &&
INFO  14:25:51,410 - #44 x
INFO  14:25:51,411 - #26 <
INFO  14:25:51,411 - #43 0
INFO  14:25:51,411 - #37 )
INFO  14:25:51,411 - #40 {
INFO  14:25:51,411 - #11 read
INFO  14:25:51,411 - #36 (
INFO  14:25:51,411 - #44 x
INFO  14:25:51,411 - #37 )
INFO  14:25:51,411 - #33 ;
INFO  14:25:51,411 - #41 }
INFO  14:25:51,411 - #11 read
INFO  14:25:51,412 - #36 (
INFO  14:25:51,412 - #44 x
INFO  14:25:51,412 - #37 )
INFO  14:25:51,412 - #33 ;
INFO  14:25:51,412 - #41 }
INFO  14:25:51,412 - #41 }
INFO  14:25:51,412 - #41 }
INFO  14:25:51,442 - Info on line: 10: Detected usage of function formal parameter arg.
INFO  14:25:51,443 - Info on line: 16: Detected usage of global variable pos.
INFO  14:25:51,443 - Info on line: 16: Detected usage of symbolic constant size.
INFO  14:25:51,443 - Info on line: 17: Detected usage of global variable neg.
INFO  14:25:51,443 - Info on line: 17: Detected usage of symbolic constant size.
INFO  14:25:51,443 - Info on line: 18: Detected usage of symbolic constant size.
INFO  14:25:51,443 - Info on line 18: Detected for loop.
INFO  14:25:51,444 - Info on line 22: Detected function call for function f.
INFO  14:25:51,444 - Info on line 12: Detected for loop.
INFO  14:25:51,444 - Info on line: 26: Detected usage of symbolic constant size.
INFO  14:25:51,444 - Info on line: 29: Detected usage of symbolic constant size.
